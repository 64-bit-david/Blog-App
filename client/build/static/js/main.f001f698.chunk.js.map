{"version":3,"sources":["actions/types.js","actions/index.js","components/Header.js","components/displayError.js","components/Snippets.js","components/paginationHelper.js","components/Stories.js","components/AddStory.js","components/UserProfile.js","components/StoryComments.js","components/Story.js","components/Author.js","components/EditStory.js","components/AllSnippets.js","components/Payment.js","components/Footer.js","components/App.js","reducers/storyReducer.js","reducers/index.js","reducers/storiesReducer.js","reducers/authReducer.js","reducers/authorReducer.js","reducers/snippetsReducer.js","reducers/paginationReducer.js","reducers/userStoriesReducer.js","reducers/errorReducer.js","reducers/messageReducer.js","index.js"],"names":["FETCH_STORIES","FETCH_USER","POST_STORY","UPDATE_USER","UPDATING_USERNAME","UPDATING_DESCRIPTION","FETCH_STORY","FETCH_STORY_REQUEST","FETCH_AUTHOR","FETCH_AUTHOR_BASIC","UPDATE_STORY_COMMENTS","POST_SNIPPET","FETCH_SNIPPETS","PAGINATE","DELETE_SNIPPET","EDIT_STORY","CLEAN_UP","FETCH_USER_STORIES","ADD_ERROR","DELETE_USER","CLEAR_MESSAGE","ADD_MESSAGE","DELETE_COMMENT","PAYMENT_SUCCESS","fetchUserStories","page","userId","dispatch","a","axios","get","res","type","payload","data","stories","pager","fetchUser","console","log","fetchStory","storyId","story","comments","reverse","error","statusCode","response","status","message","statusText","fetchAuthor","fetchAuthorBasic","postSnippet","snippetText","post","deleteSnippet","snippetId","delete","addSnippet","snippet","clearMessage","clearError","connect","auth","logout","useState","dropDown","setDropDown","useEffect","className","to","onClick","href","google-btn-link","src","cleanUp","snippets","fetchSnippet","useForm","register","handleSubmit","errors","reset","socket","openSocket","process","on","action","off","onSubmit","name","ref","required","maxLength","length","slice","map","text","_user","username","_id","func","currentPage","path","previousPage","hasPreviousPage","hasNextPage","nextPage","lastPage","fetchStories","match","params","setCurrentPage","renderGrid","emptyObj","copyStories","splice","storiesArrayWithFeed","index","title","description","renderMessages","displayError","paginationHelper","postStory","history","content","creator","msg","push","howFormat","setHowFormat","renderHowToFormat","minLength","author","userStories","updateUsername","put","user","updateUserDesc","deleteUser","preLoadForm","preLoadForm2","defaultValues","register2","errors2","handleSubmit2","showChangeUsername","setShowChangeUserName","showChangeDesc","setShowChangeDesc","showDeleteUser","setShowDeleteUser","changeContainer","setChangeContainer","postUsernameChange","postDescChange","renderUserInfo","donationsRecieved","donationsSent","renderChangeUsername","renderChangeDesc","renderDeleteUser","updateStoryComments","commentInput","commentText","comment","deleteStoryComment","commentId","commentPage","setCommentPage","commentsArray","setCommentsArray","commentsToSkip","arrayToRender","createCommentPgArray","id","numOfComments","numOfButtons","Math","ceil","commentPager","deleteStory","deletePrompt","setDeletePrompt","authorNameCheck","onDelete","renderDeletePrompt","renderEditOrDonate","class","dangerouslySetInnerHTML","__html","sanitizedHtml","authorId","authorName","editStory","fetchAllSnippets","stripePromise","loadStripe","ProductDisplay","handleClick","amount","setAmount","value","onChange","e","target","role","Message","postPayment","paymentId","setMessage","query","URLSearchParams","window","location","search","amountPaid","event","stripe","session","redirectToCheckout","sessionId","Footer","App","exact","component","Stories","AddStory","EditStory","Story","Author","UserProfile","AllSnippets","Payment","state","updatedState","unshift","filter","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f001f698.chunk.js","sourcesContent":["export const FETCH_STORIES = 'FETCH_STORIES';\r\nexport const FETCH_USER = 'FETCH_USER';\r\nexport const LOG_OUT = 'LOG_OUT';\r\nexport const POST_STORY = 'POST_STORY';\r\nexport const UPDATE_USER = 'UPDATE_USER';\r\nexport const UPDATING_USERNAME = 'UPDATING_USERNAME';\r\nexport const UPDATING_DESCRIPTION = 'UPDATING_DESCRIPTION';\r\nexport const SELECT_STORY = 'SELECT_STORY';\r\nexport const FETCH_STORY = 'FETCH_STORY';\r\nexport const FETCH_STORY_REQUEST = 'FETCH_STORY_REQUEST';\r\nexport const DELETE_STORY = 'DELETE_STORY';\r\nexport const FETCH_AUTHOR = 'FETCH_AUTHOR';\r\nexport const FETCH_AUTHOR_BASIC = 'FETCH_AUTHOR_BASIC';\r\nexport const UPDATE_STORY_COMMENTS = 'UPDATE_STORY_COMMENTS';\r\nexport const POST_SNIPPET = 'POST_SNIPPET';\r\nexport const FETCH_SNIPPETS = 'FETCH_SNIPPETS';\r\nexport const PAGINATE = 'PAGINATE';\r\nexport const DELETE_SNIPPET = 'DELETE_SNIPPET';\r\nexport const EDIT_STORY = 'EDIT_STORY';\r\nexport const CLEAN_UP = 'CLEAN_UP';\r\nexport const FETCH_USER_STORIES = 'FETCH_USER_STORIES';\r\nexport const ADD_ERROR = 'ADD_ERROR';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\r\nexport const PAYMENT_SUCCESS = 'PAYMENT_SUCCESS';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios from 'axios';\r\nimport { FETCH_STORIES, FETCH_USER_STORIES, FETCH_USER, POST_STORY, EDIT_STORY, UPDATE_USER, UPDATING_USERNAME, UPDATING_DESCRIPTION, FETCH_STORY, FETCH_AUTHOR, FETCH_AUTHOR_BASIC, UPDATE_STORY_COMMENTS, POST_SNIPPET, FETCH_SNIPPETS, DELETE_SNIPPET, PAGINATE, DELETE_STORY, CLEAN_UP, FETCH_STORY_REQUEST, ADD_ERROR, DELETE_USER, CLEAR_MESSAGE, ADD_MESSAGE, DELETE_COMMENT, PAYMENT_SUCCESS } from './types';\r\n\r\n\r\nexport const fetchStories = (page) => async (dispatch) => {\r\n  const res = await axios.get('/api/stories/?page=' + page);\r\n  dispatch({ type: FETCH_STORIES, payload: res.data.stories });\r\n  dispatch({ type: PAGINATE, payload: res.data.pager })\r\n}\r\n\r\nexport const fetchUserStories = (page, userId) => async (dispatch) => {\r\n  const res = await axios.get(`/api/account/stories/${userId}/?page=${page}`);\r\n  dispatch({ type: FETCH_USER_STORIES, payload: res.data.stories });\r\n  dispatch({ type: PAGINATE, payload: res.data.pager });\r\n\r\n}\r\n\r\n//For getting current logged in user\r\nexport const fetchUser = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get('/api/current_user');\r\n    dispatch({ type: FETCH_USER, payload: res.data });\r\n  }\r\n  catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const logout = () => async dispatch => {\r\n  await axios.get('/api/logout');\r\n}\r\n\r\nexport const postStory = ({ title, description, content, creator }, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.post('/api/create-story', {\r\n      title, description, content, creator\r\n    })\r\n    dispatch({ type: POST_STORY, payload: res.data.story });\r\n    dispatch({ type: ADD_MESSAGE, payload: res.data.msg })\r\n    history.push('/')\r\n  } catch (err) {\r\n    console.log(err);\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error })\r\n  }\r\n}\r\n\r\nexport const editStory = ({ storyId, title, description, content }, history) =>\r\n  async dispatch => {\r\n    try {\r\n      const res = await axios.put('/api/stories/' + storyId, {\r\n        title, description, content,\r\n      });\r\n      dispatch({ type: EDIT_STORY, payload: res.data.story });\r\n      dispatch({ type: ADD_MESSAGE, payload: res.data.msg })\r\n      history.push('/story/' + storyId);\r\n    } catch (err) {\r\n      console.log(err)\r\n      const error = {\r\n        statusCode: err.response.status,\r\n        message: err.response.data.error,\r\n        statusText: err.response.data.statusText\r\n      }\r\n      dispatch({ type: ADD_ERROR, payload: error })\r\n    }\r\n  }\r\n\r\nexport const deleteStory = (storyId) => async dispatch => {\r\n  try {\r\n    await axios.delete(`/api/stories/${storyId}`);\r\n    dispatch({ type: DELETE_STORY, payload: storyId });\r\n    dispatch({ type: ADD_MESSAGE, payload: 'Story Deleted' })\r\n  } catch (err) {\r\n    console.log(err)\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error })\r\n  }\r\n}\r\n\r\nexport const updateUsername = (username) => async dispatch => {\r\n  dispatch({ type: UPDATING_USERNAME, payload: 'Updating...' })\r\n  try {\r\n    const res = await axios.put('/account/update-username', {\r\n      username\r\n    });\r\n    dispatch({ type: UPDATE_USER, payload: res.data.user })\r\n  } catch (err) {\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error })\r\n  }\r\n}\r\n\r\nexport const updateUserDesc = (description) => async dispatch => {\r\n  dispatch({ type: UPDATING_DESCRIPTION, payload: 'Updating...' })\r\n  try {\r\n    const res = await axios.put('/account/update-desc', {\r\n      description\r\n    })\r\n    dispatch({ type: UPDATE_USER, payload: res.data.user });\r\n  } catch (err) {\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error })\r\n  }\r\n}\r\n\r\nexport const fetchStory = (storyId) => async dispatch => {\r\n  dispatch({ type: FETCH_STORY_REQUEST, payload: 'Loading' })\r\n  try {\r\n    let res = await axios.get(`/api/stories/${storyId}`);\r\n    if (res.data.story.comments > 0) {\r\n      res.data.story.comments = res.data.story.comments.reverse();\r\n    }\r\n    dispatch({ type: FETCH_STORY, payload: res.data.story })\r\n  } catch (err) {\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    console.log(error)\r\n    dispatch({ type: ADD_ERROR, payload: error })\r\n  }\r\n}\r\n\r\n\r\n//for getting author (with stories populated )of a post/story\r\nexport const fetchAuthor = (userId) => async dispatch => {\r\n  const res = await axios.get(`/account/${userId}`);\r\n\r\n  dispatch({ type: FETCH_AUTHOR, payload: res.data });\r\n}\r\n\r\nexport const fetchAuthorBasic = (userId) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/account/basic/${userId}`);\r\n    dispatch({ type: FETCH_AUTHOR_BASIC, payload: res.data });\r\n  } catch (err) {\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error });\r\n  }\r\n}\r\nexport const updateStoryComments = (storyId, commentInput) => async dispatch => {\r\n  try {\r\n    const res = await axios.post(`/api/stories/comments/${storyId}`, {\r\n      commentText: commentInput\r\n    });\r\n\r\n    dispatch({ type: UPDATE_STORY_COMMENTS, payload: res.data.comment });\r\n  } catch (err) {\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error });\r\n\r\n  }\r\n}\r\n\r\nexport const deleteStoryComment = (storyId, commentId) => async dispatch => {\r\n  try {\r\n    await axios.delete(`/api/stories/comments/${storyId}/${commentId}`)\r\n    dispatch({ type: DELETE_COMMENT, payload: commentId });\r\n  } catch (err) {\r\n    console.log(err);\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error });\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const fetchSnippet = () => async dispatch => {\r\n  const res = await axios.get('/api/snippets');\r\n  dispatch({ type: FETCH_SNIPPETS, payload: res.data.snippets })\r\n}\r\n\r\n\r\n\r\nexport const fetchAllSnippets = (page) => async dispatch => {\r\n  const res = await axios.get('/api/all-snippets/?page=' + page);\r\n  dispatch({ type: FETCH_SNIPPETS, payload: res.data.snippets });\r\n  dispatch({ type: PAGINATE, payload: res.data.pager });\r\n}\r\n\r\n\r\n\r\nexport const postSnippet = (snippetText) => async dispatch => {\r\n  try {\r\n    await axios.post('/api/post-snippet', {\r\n      snippetText\r\n    });\r\n  } catch (err) {\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error })\r\n  }\r\n  //websocket updates state so below not needed, causes duplication for user\r\n  //server responds with full user obj, but we need user to only hold the id so overide\r\n  // res.data.response._user = res.data.response._user._id;\r\n  // dispatch({ type: POST_SNIPPET, payload: res.data.response });\r\n};\r\n\r\n\r\nexport const deleteSnippet = (snippetId) => async dispatch => {\r\n  await axios.delete('/api/snippet/' + snippetId);\r\n  dispatch({ type: DELETE_SNIPPET, payload: snippetId });\r\n}\r\n\r\n\r\n\r\nexport const addSnippet = (snippet) => {\r\n  return { type: POST_SNIPPET, payload: snippet }\r\n}\r\n\r\n\r\nexport const postPayment = (amount, authorId, userId, paymentId) => async dispatch => {\r\n  try {\r\n    const res = await axios.post('/post-payment-data', {\r\n      amount,\r\n      authorId,\r\n      userId,\r\n      paymentId\r\n    });\r\n    dispatch({ type: PAYMENT_SUCCESS, payload: res.data.user })\r\n  } catch (err) {\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error })\r\n  }\r\n}\r\n\r\nexport const deleteUser = (userId, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.delete('/account/' + userId);\r\n\r\n    dispatch({ type: DELETE_USER, payload: res.data.msg });\r\n    history.push('/');\r\n  } catch (err) {\r\n    console.log(err);\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error })\r\n  }\r\n}\r\n\r\nexport const clearMessage = () => {\r\n  return { type: CLEAR_MESSAGE };\r\n}\r\n\r\nexport const clearError = () => {\r\n  return { type: CLEAN_UP }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchUser, logout } from '../actions';\r\n\r\nconst Header = ({ fetchUser, auth, logout }) => {\r\n\r\n  const [dropDown, setDropDown] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, [fetchUser])\r\n\r\n\r\n\r\n\r\n  const isLoggedIn = () => {\r\n    if (!auth) {\r\n      return (\r\n        <div className={`google-btn ${dropDown && 'active'}`}>\r\n          <a google-btn-link href=\"/auth/google\">\r\n            <div className=\"google-icon-wrapper\">\r\n              <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" />\r\n            </div>\r\n            <p className=\"google-btn-text\">\r\n              Sign In With Google\r\n          </p>\r\n          </a>\r\n\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        <div className={`header-right-menu ${dropDown && 'active'}`}>\r\n          <Link\r\n            to=\"/add-story\"\r\n            className=\" btn dd-btn\"\r\n            onClick={() => setDropDown(false)}>\r\n            Add a Story\r\n           </Link>\r\n          <Link\r\n            to={`/your-profile`}\r\n            className=\" btn dd-btn\"\r\n            onClick={() => setDropDown(false)}>\r\n            Your Profile\r\n            </Link>\r\n          <a href=\"/api/logout\"\r\n            className=\"btn dd-btn\"\r\n            onClick={() => {\r\n              setDropDown(false)\r\n              logout();\r\n            }}>\r\n            Log Out\r\n            </a>\r\n        </div>\r\n        <div className={`burger ${dropDown && 'active'}`}>\r\n          <button\r\n            onClick={() => setDropDown(!dropDown)}\r\n            className=\"burger-btn\"\r\n          >\r\n            <div className=\"burger-line\"></div>\r\n            <div className=\"burger-line\"></div>\r\n            <div className=\"burger-line\"></div>\r\n          </button>\r\n        </div>\r\n      </div >\r\n    );\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"header\">\r\n        <div className=\"header-left\">\r\n          <Link to=\"/\"><h2>Writer's Desk</h2></Link>\r\n        </div>\r\n        <div className=\"header-right\">\r\n          {isLoggedIn()}\r\n\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ auth }) => {\r\n  return { auth }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchUser, logout })(Header)\r\n","import { Link } from 'react-router-dom';\r\n\r\nexport default function (error, cleanUp) {\r\n  return (\r\n    <div className=\"error-container\">\r\n      <p>Error:{error.statusCode}</p>\r\n      <p>{error.message}</p>\r\n      <Link\r\n        className=\"btn\"\r\n        to=\"/\"\r\n        onClick={() => {\r\n          cleanUp()\r\n        }}>Back to Home</Link>\r\n    </div>)\r\n}","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport openSocket from 'socket.io-client';\r\nimport { useForm } from 'react-hook-form';\r\nimport { postSnippet, fetchSnippet, addSnippet, deleteSnippet, clearError } from '../actions';\r\n\r\n\r\nconst Snippets = ({ postSnippet, fetchSnippet, snippets, addSnippet, auth, deleteSnippet }) => {\r\n\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm();\r\n\r\n  //fetchsnippets, and open a socket the listens for created snippets\r\n  useEffect(() => {\r\n    fetchSnippet();\r\n    const socket = openSocket(process.env.REACT_APP_STRIPE_PATH);\r\n    socket.on('snippets', data => {\r\n      if (data.action === 'create') {\r\n        addSnippet(data.snippet);\r\n      }\r\n      if (data.action === 'delete') {\r\n        fetchSnippet();\r\n      }\r\n    })\r\n    return () => {\r\n      socket.off('snippets');\r\n    }\r\n  }, [addSnippet, fetchSnippet]);\r\n\r\n\r\n\r\n  const onSubmit = (data) => {\r\n    postSnippet(data.snippetText);\r\n    reset();\r\n  }\r\n\r\n  const rendersnippetInput = () => {\r\n    return (\r\n      <form className=\"snippet-form\" onSubmit={handleSubmit(onSubmit)}>\r\n        <label>Post a snippet</label>\r\n        <div className=\"input-container\">\r\n          <input\r\n            name='snippetText'\r\n            ref={register({ required: true, maxLength: 100 })}\r\n            className=\"snippets-home-input\"\r\n          />\r\n          <div className=\"snippet-btn-container\">\r\n            <button className=\"btn green-btn\" type='submit'>Post</button>\r\n          </div>\r\n        </div>\r\n        {errors.snippetText && errors.snippetText.type === 'maxLength' && (\r\n          <p className=\"validation-warning\">Snippets have a max length of 100 characters</p>\r\n        )}\r\n\r\n      </form>\r\n    )\r\n  }\r\n\r\n  //renders snippets\r\n  //When user adds a snippet, we slice the array to ensure it stays same length\r\n  //ensure it matches the limits set in back end\r\n  const renderSnippets = () => {\r\n    let arrayToMap;\r\n    if (snippets.length > 10) {\r\n      arrayToMap = snippets.slice(0, 10);\r\n    } else {\r\n      arrayToMap = snippets;\r\n    }\r\n    return arrayToMap.map(snippet => {\r\n      return (\r\n        <div key={snippet._id} className=\"snippet-container\">\r\n          <div className=\"snippet-left\">\r\n            <p className=\"snippet-text\">{snippet.text}\r\n            </p>\r\n            <p className=\"snippet-username\">\r\n              <Link to={`/author/${snippet._user}`}>{snippet.username}</Link>\r\n            </p>\r\n          </div>\r\n          <div className=\"snippet-right\">\r\n            {snippet._user === auth?._id ?\r\n              <button className=\"btn delete-btn\" onClick={() => deleteSnippet(snippet._id)}>Delete</button> : null}\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  const pageSuccess = () => {\r\n    return (\r\n      <div className=\"snippets-container story-item\">\r\n        <div className=\"snippet-header-container\">\r\n          <h3>Snippets</h3>\r\n        </div>\r\n        <p className=\"snippets-sub-header\">Let other writers know what you're up to, add a short snippet to the live feed.</p>\r\n        {rendersnippetInput()}\r\n        {renderSnippets()}\r\n        <div className=\"link-to-snippets\">\r\n          <Link to=\"/snippets/1\">See all snippets</Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {pageSuccess()}\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ snippets, auth }) => {\r\n  return { snippets, auth };\r\n}\r\n\r\nexport default connect(mapStateToProps, { postSnippet, fetchSnippet, addSnippet, deleteSnippet, clearError })(Snippets);\r\n\r\n\r\n","import { Link } from 'react-router-dom';\r\n\r\nexport default function func(pager, currentPage, path) {\r\n  if (pager.currentPage) {\r\n    return (\r\n      <div className=\"paginate-container\">\r\n        <ul>\r\n          {pager.currentPage !== 1 && pager.previousPage !== 1 ?\r\n            <li>\r\n              <Link\r\n                to={`${path}1`}\r\n                className={`${currentPage === 1 && 'active'} `}\r\n              >1\r\n              </Link>\r\n            </li>\r\n            : null\r\n          }\r\n          {pager.hasPreviousPage ?\r\n            <li>\r\n              <Link to={`${path}${pager.previousPage}`}>\r\n                {pager.previousPage}\r\n              </Link>\r\n            </li>\r\n            : null\r\n          }\r\n          <li>\r\n            <Link to={`${path}${pager.currentPage}`}\r\n              className=\"active\">\r\n              {pager.currentPage}\r\n            </Link>\r\n          </li>\r\n          {pager.hasNextPage ?\r\n            <li>\r\n              <Link to={`${path}${pager.nextPage}`}>\r\n                {pager.nextPage}\r\n              </Link>\r\n            </li>\r\n            : null\r\n          }\r\n          {pager.lastPage !== pager.currentPage &&\r\n            pager.nextPage !== pager.lastPage &&\r\n            pager.lastPage !== 0 ?\r\n            <li>\r\n\r\n              <Link to={`${path}${pager.lastPage}`}>\r\n                {pager.lastPage}\r\n              </Link>\r\n            </li>\r\n            : null\r\n          }\r\n\r\n\r\n\r\n        </ul>\r\n      </div>\r\n    )\r\n  } else return;\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport displayError from './displayError';\r\n\r\nimport { fetchStories, clearError, clearMessage } from '../actions/index';\r\nimport Snippets from './Snippets';\r\nimport paginationHelper from './paginationHelper';\r\n\r\n\r\nconst Stories = ({ stories, fetchStories, pager, match, clearMessage, error, message, clearError }) => {\r\n\r\n\r\n\r\n  const [currentPage, setCurrentPage] = useState(match.params.page);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(match.params.page);\r\n  }, [setCurrentPage, match.params.page])\r\n\r\n  useEffect(() => {\r\n    if (pager.currentPage !== currentPage && currentPage) {\r\n      fetchStories(currentPage);\r\n    }\r\n    else {\r\n      fetchStories(1)\r\n    }\r\n  }, [fetchStories, pager.currentPage, currentPage]);\r\n\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      clearError();\r\n    }\r\n  }, [clearError])\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      clearMessage()\r\n    }\r\n  }, [clearMessage])\r\n\r\n\r\n  //creates a new array with a few extras inserted at the start of the stories array\r\n  const storiesArrayWithFeed = () => {\r\n    const emptyObj = {};\r\n    const copyStories = [...stories];\r\n    copyStories.splice(0, 0, emptyObj);\r\n    copyStories.splice(1, 0, emptyObj);\r\n    copyStories.splice(2, 0, emptyObj);\r\n    return copyStories\r\n  }\r\n\r\n  //renders the array of user stories into grid items, insert a featured story at the index 0, snippets component at index 1 and a title for latest stories at index 2\r\n  const renderGrid = () => {\r\n    const storiesWithFeed = storiesArrayWithFeed();\r\n    return storiesWithFeed.map((story, index) => {\r\n      if (index === 0) {\r\n        return (\r\n          <div className={`story-item-container`} key={index}>\r\n            <Link\r\n              to={`/story/606ae0b59dbfba3cccf41568`}\r\n            >\r\n              <div className=\"story-item featured-story\">\r\n                <h5 className=\"featured-text\">Featured Story</h5>\r\n                <h3>Shall I compare thee to a summer's day?</h3>\r\n                <p className=\"story-page-author\">Posted by: Somebody</p>\r\n                <p className=\"story-page-desc\">\r\n                  A poem I wrote back in February about better days to come! Kinda sombre in theme as well but don't let it get you down too much!\r\n                  A poem I wrote back in February about better days to come! Kinda sombre in theme as well but don't\r\n              </p>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n        )\r\n      }\r\n      if (index === 1) {\r\n        return (\r\n          <div className={`story-item-container snippets-container`} key={index}>\r\n            <Snippets />\r\n          </div>\r\n        )\r\n      }\r\n      if (index === 2) {\r\n        return (\r\n          <div className=\"story-item-container sub-header-container\" key={index}>\r\n            <h2>Latest Stories</h2>\r\n          </div>\r\n        )\r\n      }\r\n      return (\r\n        <div className={`story-item-container`} key={index}>\r\n          <Link\r\n            to={`/story/${story._id}`}\r\n          >\r\n            <div className=\"story-item\">\r\n              <h3>{story.title}</h3>\r\n              <p className=\"story-page-author\">Posted by: {story.username}</p>\r\n              <p className=\"story-page-desc\">\r\n                {story.description}\r\n              </p>\r\n            </div>\r\n          </Link>\r\n\r\n        </div >\r\n      )\r\n    })\r\n\r\n  }\r\n\r\n  const pageSuccess = () => {\r\n    return (\r\n      <div className=\"stories-container\">\r\n        <div className=\"header-container\">\r\n          <h1>Home</h1>\r\n        </div>\r\n        <p className=\"p-welcome\">Welcome to <span>Writer's Desk</span>, a space for creative writers to share their work! Sign up and post your own stories and consider supporting other writers with a donation.</p>\r\n        <div className=\"stories-grid author-stories-grid\">\r\n          {renderGrid()}\r\n        </div>\r\n        {paginationHelper(pager, currentPage, '/stories/')}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderMessages = () => {\r\n    if (message) {\r\n      return (\r\n        <div className=\"message-container\">\r\n          <div className=\"message\">\r\n            <p>{message}</p>\r\n            <button\r\n              className=\"btn notification-btn\"\r\n              onClick={() => clearMessage()}>Close</button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {renderMessages()}\r\n      {error ? displayError(error, clearError) : pageSuccess()}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ stories, pager, error, message }) => {\r\n  return { stories, pager, error, message }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchStories, clearError, clearMessage })(Stories);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { postStory, clearError } from '../actions';\r\nimport { useForm } from 'react-hook-form';\r\nimport displayError from './displayError';\r\n\r\n\r\n\r\nconst AddStory = ({ postStory, auth, history, error, clearError }) => {\r\n\r\n\r\n  const [howFormat, setHowFormat] = useState(false);\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    const creator = auth._id;\r\n    const title = data.title;\r\n    const description = data.description;\r\n    const content = data.content;\r\n\r\n    const postBody = { title, description, content, creator };\r\n    postStory(postBody, history);\r\n  }\r\n\r\n  const renderHowToFormat = () => {\r\n    if (howFormat) {\r\n      return (\r\n        <div className=\"how-to-format-container\">\r\n          <p>Writer's Desk uses \"marked\" for formatting user stories. Most users only need to know that hitting the space button twice will format the text to a new line. <br />  For everything else however, check out the <span><a href=\"https://marked.js.org/\">marked demo</a></span> for all formatting options</p>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn change-esc-btn\"\r\n            onClick={() => setHowFormat(false)}>X</button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  const forms = () => {\r\n    return (\r\n      <div className=\"forms-container\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n          <div className=\"form-btn-container\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn htf-btn notification-btn\"\r\n              onClick={() => setHowFormat(true)}>How to format</button>\r\n          </div>\r\n          {renderHowToFormat()}\r\n          <div className=\"add-story-input-title add-story-item-container\">\r\n            <label> Add a Title</label>\r\n            <input\r\n              name=\"title\"\r\n              ref={register({ required: true, maxLength: 100 })}\r\n            />\r\n            {errors.title && errors.title.type === 'required' && (\r\n              <p className=\"validation-warning\">This is Required</p>\r\n            )}\r\n            {errors.title && errors.title.type === 'maxLength' && (\r\n              <p className=\"validation-warning\">Title should not be longer than 100 characters</p>\r\n            )}\r\n          </div>\r\n          <div className=\"add-story-input-description add-story-item-container\">\r\n            <label> Short description</label>\r\n            <input\r\n              name=\"description\"\r\n              ref={register({ required: true, maxLength: 200 })}\r\n            />\r\n            {errors.description && errors.description.type === 'required' && (\r\n              <p className=\"validation-warning\">This is Required</p>\r\n            )}\r\n            {errors.description && errors.description.type === 'maxLength' && (\r\n              <p className=\"validation-warning\">Description should not be longer than 250 characters</p>\r\n            )}\r\n          </div>\r\n          <div className=\"add-story-input-content add-story-item-container\">\r\n            <label>Story</label>\r\n            <textarea\r\n              name=\"content\"\r\n              ref={register({ required: true, minLength: 100, maxLength: 10000 })}\r\n            />\r\n            {errors.content && errors.content.type === 'required' && (\r\n              <p className=\"validation-warning\">This is Required</p>\r\n            )}\r\n            {errors.content && errors.content.type === 'minLength' && (\r\n              <p className=\"validation-warning\">A story must have at least 100 characters</p>)}\r\n            {errors.content && errors.content.type === 'maxLength' && (\r\n              <p className=\"validation-warning\">The maximum length for a story is 10,000 characters</p>\r\n            )}\r\n\r\n          </div>\r\n          <div className=\"form-btn-container\">\r\n            <button\r\n              name=\"submit-button\"\r\n              className=\"green-btn btn\"\r\n              type=\"submit\"\r\n            >Submit</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  const pageSuccess = () => {\r\n    return (\r\n      <div className=\"add-story-container\">\r\n        <div className=\"header-container\">\r\n          <h1>Submit Your Story!</h1>\r\n        </div>\r\n        {forms()}\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {error ? displayError(error, clearError) : pageSuccess()}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ auth, story, error }) => {\r\n  return { auth, story, error }\r\n}\r\n\r\nexport default connect(mapStateToProps, { postStory, clearError })(AddStory)\r\n","import { connect } from 'react-redux';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { fetchAuthor, fetchUser, updateUsername, updateUserDesc, fetchUserStories, clearError, deleteUser, clearMessage } from '../actions';\r\nimport paginationHelper from './paginationHelper';\r\nimport displayError from './displayError';\r\n\r\nconst Author = ({ userStories, auth, updateUsername, updateUserDesc, fetchUserStories, match, pager, clearError, error, deleteUser, history, clearMessage, message }) => {\r\n\r\n\r\n  const preLoadForm = {\r\n    username: auth.username\r\n  }\r\n\r\n  const preLoadForm2 = {\r\n    description: auth.description\r\n  }\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    defaultValues: preLoadForm\r\n  });\r\n\r\n  const {\r\n    register: register2,\r\n    errors: errors2,\r\n    handleSubmit: handleSubmit2\r\n  } = useForm({ defaultValues: preLoadForm2 });\r\n\r\n\r\n\r\n\r\n\r\n  // const [input, setInput] = useState('');\r\n  const [showChangeUsername, setShowChangeUserName] = useState(false);\r\n  const [showChangeDesc, setShowChangeDesc] = useState(false);\r\n  const [showDeleteUser, setShowDeleteUser] = useState(false);\r\n  const [changeContainer, setChangeContainer] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(match.params.page);\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(match.params.page);\r\n  }, [setCurrentPage, match.params.page]);\r\n\r\n  useEffect(() => {\r\n    if (!auth) {\r\n      fetchUser();\r\n    }\r\n  }, [auth])\r\n\r\n  // useEffect(() => {\r\n  //   if (auth._id) {\r\n  //     fetchUserStories(currentPage || 1, auth._id);\r\n  //   }\r\n  // }, [auth, currentPage, fetchUserStories])\r\n\r\n  useEffect(() => {\r\n    if (auth?._id) {\r\n      if (pager.currentPage !== currentPage && currentPage) {\r\n        fetchUserStories(currentPage, auth._id);\r\n      }\r\n      else {\r\n        fetchUserStories(1, auth._id);\r\n      }\r\n    }\r\n\r\n  }, [pager.currentPage, currentPage, auth, fetchUserStories]);\r\n\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      clearError();\r\n    }\r\n  }, [clearError])\r\n\r\n\r\n\r\n\r\n  const postUsernameChange = (data) => {\r\n    updateUsername(data.username);\r\n    setShowChangeUserName(false);\r\n  }\r\n\r\n  const postDescChange = (data) => {\r\n    updateUserDesc(data.description);\r\n    setShowChangeDesc(false);\r\n  }\r\n\r\n  const postDeleteUser = () => {\r\n    deleteUser(auth._id, history);\r\n  }\r\n\r\n  const authorName = () => {\r\n    if (auth) {\r\n      if (auth.username) {\r\n        return auth.username\r\n      }\r\n      return auth.name;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  const authorDescription = () => {\r\n    if (auth) {\r\n      if (auth.description) {\r\n        return auth.description\r\n      }\r\n      else {\r\n        return \"You don't have a description yet\"\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  const renderAuthorStories = () => {\r\n    if (!userStories) {\r\n      return null;\r\n    }\r\n    else {\r\n      return userStories.map(story => {\r\n        return (\r\n          <div className={`story-item-container`} key={story._id}>\r\n            <Link\r\n              to={`/story/${story._id}`}\r\n            >\r\n              <div className=\"story-item\">\r\n                <h3>{story.title}</h3>\r\n                <p className=\"story-page-author\">Posted by: {story.username}</p>\r\n                <p className=\"story-page-desc\">\r\n                  {story.description}\r\n                </p>\r\n              </div>\r\n            </Link>\r\n\r\n          </div >\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  const renderUserInfo = () => {\r\n    if (auth) {\r\n      return (\r\n        <div className=\"author-data-container user-data-container\">\r\n          <div className=\"header-container\">\r\n            <h1>Your Profile</h1>\r\n          </div>\r\n\r\n          {auth.donationsRecieved || auth.donationsSent ?\r\n            <div className=\"author-donations-container author-data-item\">\r\n              {auth.donationsRecieved ? <p>Donations received:  £{auth.donationsRecieved}</p> : null}\r\n              {auth.donationsSent ? <p>You have donated: £{auth.donationsSent} </p> : null}\r\n            </div> : null}\r\n\r\n          <div className=\"author-username-container author-data-item\">\r\n            <p>{authorName()}</p>\r\n            <button\r\n              className=\"btn green-btn\"\r\n              onClick={() => {\r\n                setShowChangeUserName(true)\r\n                setChangeContainer(true)\r\n              }}\r\n            >Edit Username</button>\r\n\r\n          </div>\r\n\r\n          {renderChangeUsername()}\r\n\r\n          <div className=\"author-description-container  author-data-item\">\r\n            <p>\r\n              {authorDescription()}\r\n            </p>\r\n            <button\r\n              className=\"btn green-btn\"\r\n              onClick={() => {\r\n                setShowChangeDesc(true)\r\n                setChangeContainer(true)\r\n              }}>\r\n              {auth.description ? \"Edit Description\" : \"Add Description\"}\r\n            </button>\r\n          </div>\r\n\r\n          {/* renders input prompt when user clicks edit btn  */}\r\n          {renderChangeDesc()}\r\n\r\n          <div\r\n            className={`author-delete-container\r\n                      author-data-item\r\n                      ${showDeleteUser && 'hide'}`}>\r\n            <p>Delete your profile</p>\r\n            <button\r\n              className=\"btn danger-btn\"\r\n              onClick={() => {\r\n                setShowDeleteUser(true)\r\n                setChangeContainer(true)\r\n              }}\r\n            >DELETE</button>\r\n\r\n          </div>\r\n          {renderDeleteUser()}\r\n\r\n\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const renderChangeUsername = () => {\r\n    if (auth) {\r\n      return (\r\n        <div\r\n          className={\r\n            `update-info-container author-data-item ${showChangeUsername && 'active'}`}>\r\n          <button\r\n            className=\"change-esc-btn btn\"\r\n            onClick={() => {\r\n              setShowChangeUserName(false)\r\n              setChangeContainer(false)\r\n            }}\r\n          >X</button>\r\n          <form onSubmit={handleSubmit(postUsernameChange)}>\r\n            <label>Change Username: </label>\r\n            <div className=\"input-container\">\r\n              <input\r\n                name=\"username\"\r\n                ref={register({ required: true, maxLength: 30 })}\r\n              />\r\n              <div className=\"submit-btn-container\"><button type=\"submit\" className=\"btn green-btn\">Submit</button></div>\r\n            </div>\r\n            {errors.username && errors.username.type === 'required' && (\r\n              <p className=\"validation-warning\">Required</p>\r\n            )}\r\n            {errors.username && errors.username.type === 'maxLength' && (\r\n              <p className=\"validation-warning\">Username should not be longer than 30 characters</p>\r\n            )}\r\n          </form>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  const renderChangeDesc = () => {\r\n    if (auth) {\r\n\r\n      return (\r\n        <div\r\n          className={\r\n            `update-info-container author-data-item ${showChangeDesc && 'active'}`}>\r\n          <button\r\n            className=\"change-esc-btn btn\"\r\n            onClick={() => {\r\n              setShowChangeDesc(false)\r\n              setChangeContainer(false)\r\n            }}\r\n          >X</button>\r\n          <form onSubmit={handleSubmit2(postDescChange)}>\r\n            <label>\r\n              {auth.description ? 'Edit your description' :\r\n                \"Add a description to your profile\"}\r\n            </label>\r\n            <div className=\"input-container\">\r\n              <input\r\n                name=\"description\"\r\n                ref={register2({ required: true, minLength: 5, maxLength: 100 })}\r\n              />\r\n              <div className=\"submit-btn-container\">\r\n                <button type=\"submit\" className=\"btn green-btn\">Submit</button>\r\n              </div>\r\n\r\n            </div>\r\n            {errors2.description && errors2.description.type === 'required' && (\r\n              <p className=\"validation-warning\">Required</p>\r\n            )}\r\n            {errors2.description && errors2.description.type === 'maxLength' && (\r\n              <p className=\"validation-warning\">Description should not be longer than 100 characters</p>\r\n            )}\r\n            {errors2.description && errors2.description.type === 'minLength' && (\r\n              <p className=\"validation-warning\">Descriptions must have at least 5 characters</p>\r\n            )}\r\n          </form>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const renderDeleteUser = () => {\r\n    return (\r\n      <div className={\r\n        `update-info-container author-data-item ${showDeleteUser && 'active'}`}>\r\n        <button\r\n          className=\"change-esc-btn btn\"\r\n          onClick={() => {\r\n            setShowDeleteUser(false);\r\n            setChangeContainer(false);\r\n          }}\r\n        >X</button>\r\n        <p className=\"author-delete-text\">Are you sure you want to delete your profile? All your data will be removed permenantly </p>\r\n        <div className=\"submit-btn-container\">\r\n          <button\r\n            className=\"btn danger-btn\"\r\n            onClick={() => {\r\n              postDeleteUser();\r\n            }}>Yes, Delete My Profile\r\n          </button>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  const pageSuccess = () => {\r\n    return (\r\n      <div className=\"author-page-container\">\r\n        <div className={\r\n          `change-details-bg-container ${changeContainer && 'active'} `}\r\n        >\r\n\r\n        </div>\r\n        {renderUserInfo()}\r\n        <div className=\"header-container sub-header-container\">\r\n          <h2>Your stories</h2>\r\n        </div>\r\n        <div className=\"stories-grid author-stories-grid\">\r\n          {renderAuthorStories()}\r\n        </div>\r\n        {paginationHelper(pager, currentPage, '/your-profile/')}\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n  const renderMessages = () => {\r\n    if (message) {\r\n      return (\r\n        <div className=\"message-container\">\r\n          <p>{message}</p>\r\n          <button onClick={() => clearMessage()}>Close</button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {renderMessages()}\r\n      {error ? displayError(error, clearError) : pageSuccess()}\r\n    </div>\r\n  )\r\n\r\n\r\n};\r\n\r\nconst mapStateToProps = ({ author, auth, userStories, pager, error, message }) => {\r\n  return { author, auth, pager, userStories, error, message }\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchAuthor, updateUsername, updateUserDesc, fetchUserStories, clearError, deleteUser, clearMessage })(Author);\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { updateStoryComments, deleteStoryComment, fetchStory, clearError } from '../actions';\r\n\r\n\r\n\r\n\r\nconst StoryComments = ({ story, updateStoryComments, auth, deleteStoryComment }) => {\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm();\r\n\r\n  const [commentPage, setCommentPage] = useState(1);\r\n  const [commentsArray, setCommentsArray] = useState(null);\r\n  const commentsToShow = 5;\r\n\r\n\r\n  const deleteComment = (storyId, commentId) => {\r\n    deleteStoryComment(storyId, commentId)\r\n  }\r\n\r\n  const onSubmit = async (data) => {\r\n    updateStoryComments(story._id, data.commentText);\r\n    reset();\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const createCommentPgArray = () => {\r\n      if (story.comments && !commentsArray) {\r\n        story.comments.reverse();\r\n        const commentsToSkip = commentsToShow * (commentPage - 1);\r\n        const arrayToRender = story.comments.slice(commentsToSkip, commentsToSkip + commentsToShow);\r\n        setCommentsArray(arrayToRender)\r\n      }\r\n      else if (story.comments) {\r\n        const commentsToSkip = commentsToShow * (commentPage - 1);\r\n        const arrayToRender = story.comments.slice(commentsToSkip, commentsToSkip + commentsToShow);\r\n        setCommentsArray(arrayToRender)\r\n      }\r\n    }\r\n    createCommentPgArray();\r\n\r\n    return function cleanup() {\r\n      setCommentsArray(null);\r\n    }\r\n  }, [commentPage, story])\r\n\r\n\r\n\r\n  const commentPager = () => {\r\n    if (story.comments) {\r\n      const numOfComments = story.comments.length\r\n      const numOfButtons = Math.ceil(story.comments.length / commentsToShow);\r\n      const currentPage = commentPage;\r\n      const hasNextPage = commentsToShow * commentPage < numOfComments;\r\n      const nextPage = commentPage + 1;\r\n      const hasPreviousPage = commentPage > 1;\r\n      const previousPage = commentPage - 1;\r\n      const lastPage = numOfButtons;\r\n\r\n      return (\r\n        <div className=\"paginate-container pg-comments\">\r\n          <ul>\r\n            {currentPage !== 1 && previousPage !== 1 ?\r\n              <li className='comment-li'>\r\n                <button\r\n                  onClick={() => setCommentPage(1)}>\r\n                  1</button>\r\n              </li>\r\n              : null\r\n            }\r\n            {hasPreviousPage ?\r\n              <li className='comment-li'>\r\n                <button\r\n                  onClick={() => setCommentPage(previousPage)}>\r\n                  {previousPage}</button>\r\n              </li>\r\n              : null\r\n            }\r\n            {\r\n              <li className='comment-li'>\r\n                <button\r\n                  onClick={() => setCommentPage(currentPage)}>\r\n                  {currentPage}</button>\r\n              </li>\r\n            }\r\n            {\r\n              hasNextPage ?\r\n                <li className='comment-li'>\r\n                  <button\r\n                    onClick={() => setCommentPage(nextPage)}>\r\n                    {nextPage}</button>\r\n                </li>\r\n                : null\r\n            }\r\n            {\r\n              lastPage !== currentPage &&\r\n                nextPage !== lastPage &&\r\n                lastPage !== 0 ?\r\n                <li className='comment-li'>\r\n                  <button\r\n                    onClick={() => setCommentPage(lastPage)}>\r\n                    {lastPage}</button>\r\n                </li>\r\n                : null\r\n            }\r\n          </ul>\r\n\r\n\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const renderStoryComments = () => {\r\n    if (commentsArray) {\r\n      if (commentsArray.length > 0) {\r\n        return commentsArray.map(comment => {\r\n          return (\r\n            <li key={comment.id} className=\"comment-container\">\r\n              <div className=\"comment-left\">\r\n                <p className=\"comment-text\">{comment.commentText}</p>\r\n                <p className=\"comment-user\">\r\n                  <Link to={`/author/${comment.userId}`}>{comment.username}</Link>\r\n                </p>\r\n              </div>\r\n              <div className=\"comment-right\">\r\n                {comment.userId === auth._id ?\r\n                  <button\r\n                    onClick={() => deleteComment(story._id, comment.id)}\r\n                    className=\"btn delete-btn\"\r\n                  >Delete</button> : null}\r\n              </div>\r\n\r\n            </li>\r\n          )\r\n        })\r\n      }\r\n      else if (!commentsArray || commentsArray.length === 0) {\r\n        return (\r\n          <div className=\"no-comments-container\">\r\n            <p>No comments yet!</p>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n    else {\r\n      return (\r\n        <div className=\"no-comments-container\">\r\n          <p>No comments yet!</p>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"comments-container\">\r\n      <h5>Comments</h5>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <label>Add a Comment</label>\r\n        <div className=\"input-container\">\r\n          <input\r\n            name='commentText'\r\n            ref={register({ required: true, maxLength: 100 })}\r\n          />\r\n          <button type=\"submit\" className=\"btn green-btn\">Post</button>\r\n        </div>\r\n        {errors.commentText && errors.commentText.type === 'maxLength' && (\r\n          <p className=\"validation-warning\">Comments have a max length of 100 characters</p>\r\n        )}\r\n      </form>\r\n      <ul className=\"comments-list\">\r\n        {renderStoryComments()}\r\n      </ul>\r\n      {commentPager()}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ story, auth, error }) => {\r\n  return { story, auth, error }\r\n}\r\n\r\nexport default connect(mapStateToProps, { updateStoryComments, deleteStoryComment, fetchStory, clearError })(StoryComments)\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchStory, fetchAuthor, deleteStory, clearError, clearMessage } from '../actions';\r\nimport displayError from './displayError';\r\n\r\nimport StoryComments from './StoryComments';\r\n\r\nconst Story = ({ match, story, fetchStory, fetchAuthor, author, deleteStory, auth, history, clearError, error, message, clearMessage }) => {\r\n\r\n  const [deletePrompt, setDeletePrompt] = useState(false)\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    fetchStory(match.params.storyId);\r\n  }, [fetchStory, match.params.storyId]);\r\n\r\n  useEffect(() => {\r\n    if (story._user && !author) {\r\n      fetchAuthor(story._user);\r\n    }\r\n  }, [story, fetchAuthor, author])\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      clearError()\r\n    }\r\n  }, [clearError])\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      clearMessage()\r\n    }\r\n  }, [clearMessage])\r\n\r\n\r\n  const authorNameCheck = (author) => {\r\n    if (author.username) {\r\n      return author.username\r\n    }\r\n    return author.name\r\n  }\r\n\r\n  const onDelete = async (storyId) => {\r\n    await deleteStory(storyId);\r\n    history.push('/your-profile')\r\n  }\r\n\r\n\r\n  const renderDeletePrompt = () => {\r\n    if (deletePrompt) {\r\n      return (\r\n        <div className=\"message-container\">\r\n          <div className=\"message warning-message\">\r\n            <p>Are you sure you want to delete your story?</p>\r\n            <button\r\n              className=\"btn danger-btn\"\r\n              onClick={() => onDelete(story._id)}>\r\n              delete</button>\r\n            <button\r\n              className=\"btn change-esc-btn \r\n              cancel-delete-story-btn\"\r\n              onClick={() => setDeletePrompt(false)}\r\n            >X</button>\r\n          </div>\r\n\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const renderEditOrDonate = () => {\r\n    if (story && auth) {\r\n      if (story._user === auth._id) {\r\n        return (\r\n          <div class=\"story-edit-btns\">\r\n            <div className=\"story-btns-container\">\r\n              <Link className=\"btn green-btn\" to={`/edit-story/${story._id}`}>edit</Link>\r\n              <button\r\n                className=\"btn delete-btn\"\r\n                onClick={() => setDeletePrompt(true)}\r\n              >delete</button>\r\n            </div>\r\n            {renderDeletePrompt()}\r\n          </div>\r\n        )\r\n      }\r\n      else {\r\n        return (\r\n          <div className=\"story-donate-btns-container\">\r\n            <p>Like the story?</p>\r\n            <Link\r\n              to={`/payment/${author._id}`}\r\n              className=\"btn green-btn\"\r\n            >Donate\r\n            </Link>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const pageSuccess = () => {\r\n    return (\r\n      <div>\r\n\r\n        {author && story ?\r\n          <div className=\"story-page-container\">\r\n            <div className=\"header-container\">\r\n              <h1>{story.title}</h1>\r\n            </div>\r\n            {renderEditOrDonate()}\r\n            <p>{story.creator}</p>\r\n            <p className=\"story-page-desc\">{story.description}</p>\r\n            <div className=\"author-container\">\r\n              <p>Written By:\r\n                   <Link to={`/author/${story._user}`}>\r\n                  <span> {authorNameCheck(author)}</span>\r\n                </Link>\r\n              </p>\r\n\r\n            </div>\r\n            <div className=\"story-page-grid\">\r\n              <div className=\"story-page-main-item grid-item\">\r\n                <p dangerouslySetInnerHTML={{ __html: `${story.sanitizedHtml}` }}\r\n                  className=\"story-page-story\">\r\n                </p>\r\n              </div>\r\n              <div className=\"story-page-sub-item grid-item\">\r\n\r\n                <StoryComments />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          : null}\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  const renderMessages = () => {\r\n    if (message) {\r\n      return (\r\n        <div className=\"message-container\">\r\n          <div className=\"message\">\r\n            <p>{message}</p>\r\n            <button\r\n              className=\"btn notification-btn\"\r\n              onClick={() => clearMessage()}>Close</button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {renderMessages()}\r\n      {error ? displayError(error, clearError) : pageSuccess()}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ story, author, auth, error, message }) => {\r\n  return { story, author, auth, error, message }\r\n}\r\nexport default connect(mapStateToProps, { fetchStory, fetchAuthor, deleteStory, clearError, clearMessage })(Story)\r\n","import { connect } from 'react-redux';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { fetchAuthorBasic, fetchUserStories, clearError } from '../actions';\r\nimport paginationHelper from './paginationHelper';\r\nimport displayError from './displayError';\r\n\r\nconst Author = ({ author, match, fetchUserStories, userStories, fetchAuthorBasic, pager, error, clearError }) => {\r\n\r\n  const [currentPage, setCurrentPage] = useState(match.params.page);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(match.params.page);\r\n  }, [match.params.page])\r\n\r\n  useEffect(() => {\r\n    if (!author) {\r\n      fetchAuthorBasic(match.params.authorId);\r\n    }\r\n  }, [fetchAuthorBasic, match.params.authorId]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (pager.currentPage !== currentPage) {\r\n      fetchUserStories(currentPage, match.params.authorId);\r\n    }\r\n    else {\r\n      fetchUserStories(1, match.params.authorId);\r\n    }\r\n  }, [currentPage, pager.currentPage, fetchUserStories, match.params.authorId]);\r\n\r\n  const authorName = () => {\r\n    if (author) {\r\n      if (author.username) {\r\n        return author.username\r\n      }\r\n      return author.name;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  const authorDescription = () => {\r\n    if (author) {\r\n      if (author.description) {\r\n        return author.description\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n  const renderAuthorInfo = () => {\r\n    if (!author) {\r\n      return null\r\n    }\r\n    else {\r\n      return (\r\n        <div className=\"author-data-container\">\r\n          <div className=\"header-container\">\r\n            <h1>{authorName()}</h1>\r\n          </div>\r\n          <p>{authorDescription()}</p>\r\n          <Link\r\n            to={`/payment/${author._id}`}\r\n            className=\"btn green-btn\"\r\n          >Donate</Link>\r\n          <div className=\"author-donations-container\">\r\n            {author.donationsRecieved ? <p>{authorName()} has received :  £{author.donationsRecieved} from other users!</p> : null}\r\n            {author.donationsSent ? <p>{authorName()} has dontated  £{author.donationsSent} to other authors!</p> : null}\r\n\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const renderAuthorStories = () => {\r\n    if (!author) {\r\n      return null\r\n    }\r\n    else if (!userStories) {\r\n      return null;\r\n    } else {\r\n      return userStories.map(story => {\r\n        return (\r\n          <div className={`story-item-container author-story-container`} key={story._id}>\r\n            <Link\r\n              to={`/story/${story._id}`}\r\n            >\r\n              <div className=\"story-item\">\r\n                <h3>{story.title}</h3>\r\n                <p className=\"story-page-author\">Posted by: {story.username}</p>\r\n                <p className=\"story-page-desc\">\r\n                  {story.description}\r\n                </p>\r\n              </div>\r\n            </Link>\r\n\r\n          </div >\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  const pageSuccess = () => {\r\n    return (\r\n      <div className=\"author-page-container\">\r\n        {renderAuthorInfo()}\r\n        <div className=\"header-container sub-header-container\">\r\n          <h2>{authorName()} 's stories</h2>\r\n        </div>\r\n        <div className=\"stories-grid author-stories-grid\">\r\n          {renderAuthorStories()}\r\n        </div>\r\n        { paginationHelper(pager, currentPage, `/author/${match.params.authorId}/`)}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {error ? displayError(error, clearError) : pageSuccess()}\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = ({ author, auth, userStories, pager, error }) => {\r\n  return { author, auth, userStories, pager, error }\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchAuthorBasic, fetchUserStories, clearError })(Author);\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport { editStory, fetchStory, clearError } from '../actions';\r\nimport displayError from './displayError';\r\n\r\n\r\nconst EditStory = ({ story, editStory, history, match, error }) => {\r\n\r\n  useEffect(() => {\r\n    if (!story) {\r\n      fetchStory(match.params.storyId);\r\n    }\r\n\r\n  }, [story, match.params.storyId])\r\n\r\n  const preLoadForm = {\r\n    title: story.title,\r\n    description: story.description,\r\n    content: story.content\r\n  }\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    defaultValues: preLoadForm\r\n  });\r\n\r\n\r\n\r\n  const onSubmit = (data) => {\r\n    const storyId = match.params.storyId;\r\n\r\n\r\n    const title = data.title;\r\n    const description = data.description;\r\n    const content = data.content;\r\n    const postBody = { title, description, content, storyId };\r\n    editStory(postBody, history);\r\n  }\r\n\r\n\r\n\r\n  const forms = () => {\r\n    return (\r\n      <div className=\"forms-container\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <h2 className=\"add-story-item-container\">Edit Your Story!</h2>\r\n          <div className=\"add-story-input-title add-story-item-container\">\r\n            <label> Edit Title</label>\r\n            <input\r\n              name=\"title\"\r\n              ref={register({ required: true, maxLength: 100 })}\r\n            />\r\n            {errors.title && errors.title.type === 'required' && (\r\n              <p>This is required</p>\r\n            )}\r\n            {errors.title && errors.title.type === 'maxLength' && (\r\n              <p>Title should not be longer than 100 characters</p>\r\n            )}\r\n          </div>\r\n          <div className=\"add-story-input-description add-story-item-container\">\r\n            <label> Edit description</label>\r\n            <input\r\n              name=\"description\"\r\n              ref={register({ required: true, maxLength: 200 })}\r\n\r\n            />\r\n            {errors.description && errors.description.type === 'required' && (\r\n              <p>Required</p>\r\n            )}\r\n            {errors.description && errors.description.type === 'maxLength' && (\r\n              <p>Description should not be longer than 250 characters</p>\r\n            )}\r\n          </div>\r\n          <div className=\"add-story-input-content add-story-item-container\">\r\n            <label>Edit Story</label>\r\n            <textarea\r\n              name=\"content\"\r\n              ref={register({ required: true, minLength: 100, maxLength: 10000 })}\r\n            />\r\n            {errors.content && errors.content.type === 'required' && (\r\n              <p>Required</p>\r\n            )}\r\n            {errors.content && errors.content.type === 'minLength' && (\r\n              <p>A story must have at least 100 characters</p>)}\r\n            {errors.content && errors.content.type === 'maxLength' && (\r\n              <p>The maximum length for a story is 10,000 characters</p>\r\n            )}\r\n          </div>\r\n          <button className=\"add-username-btn btn\" type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  const pageSuccess = () => {\r\n    return (\r\n      <div className=\"add-story-container\">\r\n        {forms()}\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {error ? displayError(error, clearError) : pageSuccess()}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ auth, story, error }) => {\r\n  return { auth, story, error }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { editStory, clearError })(EditStory);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport openSocket from 'socket.io-client';\r\n\r\nimport displayError from './displayError';\r\nimport paginationHelper from './paginationHelper';\r\nimport { postSnippet, fetchAllSnippets, addSnippet, deleteSnippet, clearError } from '../actions';\r\n\r\n\r\n\r\nconst AllSnippets = ({ postSnippet, fetchAllSnippets, snippets, addSnippet, auth, deleteSnippet, pager, match, error, clearError }) => {\r\n\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const [currentPage, setCurrentPage] = useState(match.params.page);\r\n\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(match.params.page);\r\n  }, [match.params.page]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchAllSnippets(1)\r\n    const socket = openSocket(process.env.REACT_APP_STRIPE_PATH);\r\n    socket.on('snippets', data => {\r\n      if (data.action === 'create') {\r\n        addSnippet(data.snippet);\r\n      }\r\n      if (data.action === 'delete') {\r\n        fetchAllSnippets();\r\n      }\r\n    })\r\n\r\n    return () => {\r\n      socket.off('snippets');\r\n    }\r\n\r\n  }, [fetchAllSnippets, addSnippet]);\r\n\r\n  useEffect(() => {\r\n    if (pager.currentPage !== currentPage) {\r\n      fetchAllSnippets(currentPage);\r\n    }\r\n  }, [currentPage, fetchAllSnippets, pager.currentPage])\r\n\r\n\r\n  const onSubmit = (data) => {\r\n    postSnippet(data.snippetText);\r\n  }\r\n\r\n  const rendersnippetInput = () => {\r\n    return (\r\n      <form className=\"snippet-form\" onSubmit={handleSubmit(onSubmit)}>\r\n        <label>Post a snippet</label>\r\n        <div className=\"input-container\">\r\n          <input\r\n            name='snippetText'\r\n            ref={register({ required: true, maxLength: 100 })}\r\n            className=\"snippets-home-input\"\r\n          />\r\n          <div className=\"snippet-btn-container\">\r\n            <button className=\"btn green-btn\" type='submit'>Post</button>\r\n          </div>\r\n        </div>\r\n        {errors.snippetText && errors.snippetText.type === 'maxLength' && (\r\n          <p className=\"validation-warning\">Snippets have a max length of 100 characters</p>\r\n        )}\r\n\r\n      </form>\r\n    )\r\n  }\r\n\r\n  //renders snippets component\r\n  //When user adds a snippet, we slice the array to ensure it stays same length\r\n  //ensure it matches the limits set in back end\r\n  const renderSnippets = () => {\r\n    let arrayToMap;\r\n    if (snippets.length > 5) {\r\n      arrayToMap = snippets.slice(0, 5);\r\n    } else {\r\n      arrayToMap = snippets;\r\n    }\r\n    return arrayToMap.map(snippet => {\r\n      return (\r\n        <div key={snippet._id} className=\"snippet-container\">\r\n          <div className=\"snippet-left\">\r\n            <p className=\"snippet-text\">{snippet.text}\r\n            </p>\r\n            <p className=\"snippet-username\">\r\n              <Link to={`/author/${snippet._user}`}>{snippet.username}</Link>\r\n            </p>\r\n          </div>\r\n          <div className=\"snippet-right\">\r\n            {snippet._user === auth?._id ?\r\n              <button className=\"btn delete-btn\" onClick={() => deleteSnippet(snippet._id)}>Delete</button> : null}\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n\r\n  const pageSuccess = () => {\r\n    return (\r\n      <div className=\"all-snippets-container snippets-container\">\r\n        <div className=\"header-container snippets-header\">\r\n          <h1>Snippets</h1>\r\n        </div>\r\n        <p className=\"snippets-sub-header\">Let other writers know what you're up to, add a short snippet to the live feed.</p>\r\n        { rendersnippetInput()}\r\n        <div className=\"snippets-list\">\r\n          {renderSnippets()}\r\n        </div>\r\n        {paginationHelper(pager, currentPage, '/snippets/')}\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {error ? displayError(error, clearError) : pageSuccess()}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ snippets, auth, pager, error }) => {\r\n  return { snippets, auth, pager, error };\r\n}\r\n\r\nexport default connect(mapStateToProps, { postSnippet, fetchAllSnippets, addSnippet, deleteSnippet, displayError, clearError })(AllSnippets);\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { clearError, fetchAuthorBasic, postPayment } from '../actions';\r\n\r\n\r\n\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PK);\r\n\r\n\r\n\r\n\r\nconst ProductDisplay = ({ handleClick, amount, setAmount }) => (\r\n\r\n\r\n  <div className=\"payment-before\">\r\n    <div className=\"header-container\">\r\n      <h1>Support the author with a donation!</h1>\r\n    </div>\r\n    <label>Select an Amount</label>\r\n    <select\r\n      value={amount}\r\n      onChange={(e) => setAmount(e.target.value)}\r\n    >\r\n      <option value='1'>£1</option>\r\n      <option value='2'>£2</option>\r\n      <option value='3'>£3</option>\r\n      <option value='4'>£4</option>\r\n      <option value='5'>£5</option>\r\n    </select>\r\n    <button\r\n      type=\"button\"\r\n      id=\"checkout-button\"\r\n      role=\"link\"\r\n      onClick={handleClick}\r\n      className=\"btn green-btn\">\r\n      Checkout\r\n      </button>\r\n  </div>\r\n\r\n\r\n);\r\n\r\n\r\nconst Message = ({ message }) => (\r\n\r\n  <section className=\"payment-after\">\r\n    <p>{message}</p>\r\n    <Link to=\"/\">Back to HomePage</Link>\r\n  </section>\r\n\r\n)\r\n\r\nconst Payment = ({ author, match, fetchAuthorBasic, auth, postPayment, clearError }) => {\r\n\r\n\r\n\r\n  const [amount, setAmount] = useState(1);\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      clearError()\r\n    }\r\n  }, [])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const authorNameCheck = () => {\r\n      if (author) {\r\n        if (author.username) {\r\n          return author.username\r\n        }\r\n        return author.name\r\n      } else {\r\n        return '';\r\n      }\r\n    }\r\n\r\n    const authorName = authorNameCheck();\r\n    // Check to see if this is a redirect back from Checkout\r\n    const query = new URLSearchParams(window.location.search);\r\n    const amountPaid = query.get('amount') / 100;\r\n    const paymentId = query.get('paymentId');\r\n\r\n    if (query.get(\"success\")) {\r\n      setMessage(author ? `Your donation of £${amountPaid} to ${authorName} was successful 🙂` : 'LOADING');\r\n\r\n\r\n      if (author && auth) {\r\n        const authorId = author._id;\r\n        const userId = auth._id;\r\n        postPayment(amountPaid, authorId, userId, paymentId);\r\n      }\r\n    }\r\n    if (query.get(\"canceled\")) {\r\n      setMessage(\r\n        \"Payment Canceled.\"\r\n      );\r\n    }\r\n    if (!author && !query.get(\"canceled\")) {\r\n      if (match.params.authorId) {\r\n        fetchAuthorBasic(match.params.authorId);\r\n      } else {\r\n        const authorId = query.get('authorId');\r\n        fetchAuthorBasic(authorId);\r\n      }\r\n    }\r\n  }, [author]);\r\n\r\n\r\n\r\n  const handleSubmit = async (event) => {\r\n    const stripe = await stripePromise;\r\n    const authorId = author._id;\r\n    const response = await axios.post('/create-checkout-session', {\r\n      amount,\r\n      authorId\r\n    })\r\n\r\n\r\n    const session = await response.data;\r\n    // When the customer clicks on the button, redirect them to Checkout.\r\n    const result = await stripe.redirectToCheckout({\r\n      sessionId: session.id,\r\n    });\r\n    if (result.error) {\r\n      // If `redirectToCheckout` fails due to a browser or network\r\n      // error, display the localized error message to your customer\r\n      // using `result.error.message`.\r\n    }\r\n  }\r\n\r\n\r\n  return message ? (\r\n    <Message message={message} />\r\n  ) : (\r\n    <ProductDisplay handleClick={handleSubmit} setAmount={setAmount} amount={amount} />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ author, auth }) => {\r\n  return { author, auth }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchAuthorBasic, postPayment, clearError })(Payment);\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div className=\"footer-container\">\r\n        <a href='#'>Created By David Williamson</a>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nimport Header from './Header';\r\nimport Stories from './Stories';\r\nimport AddStory from './AddStory';\r\nimport UserProfile from './UserProfile';\r\nimport Story from './Story';\r\nimport Author from './Author';\r\nimport EditStory from './EditStory';\r\nimport AllSnippets from './AllSnippets';\r\nimport Payment from './Payment';\r\nimport Footer from './Footer';\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <div class=\"body-container\">\r\n      <BrowserRouter>\r\n        <Header />\r\n        <main class=\"main\">\r\n          <Route path=\"/\" exact component={Stories} />\r\n          <Route path=\"/stories/:page\" component={Stories} />\r\n          <Route path=\"/add-story\" component={AddStory} />\r\n          <Route path=\"/edit-story/:storyId\" component={EditStory} />\r\n          <Route path=\"/story/:storyId\" component={Story} />\r\n          <Route path=\"/author/:authorId\" exact component={Author} />\r\n          <Route path=\"/author/:authorId/:page\" component={Author} />\r\n          <Route path=\"/your-profile/:page\" exact component={UserProfile} />\r\n          <Route path=\"/your-profile\" exact component={UserProfile} />\r\n          <Route path=\"/snippets/:page\" exact component={AllSnippets} />\r\n          <Route path=\"/payment/\" exact component={Payment} />\r\n          <Route path=\"/payment/:authorId\" component={Payment} />\r\n        </main>\r\n        <Footer />\r\n      </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import { FETCH_STORY, UPDATE_STORY_COMMENTS, EDIT_STORY, CLEAN_UP, FETCH_STORY_REQUEST, DELETE_COMMENT } from '../actions/types';\r\n\r\n\r\nconst updateStoryComments = (state, action) => {\r\n  const updatedState = { ...state };\r\n  if (!updatedState.comments) {\r\n    updatedState.comments = [action.payload];\r\n  } else {\r\n    updatedState.comments.unshift(action.payload);\r\n  }\r\n  return updatedState;\r\n}\r\n\r\nconst deleteStoryComment = (state, action) => {\r\n  const updatedState = { ...state };\r\n  updatedState.comments = updatedState.comments.filter(comment => comment.id !== action.payload);\r\n  return updatedState;\r\n\r\n}\r\n\r\nexport default function func(state = {}, action) {\r\n  switch (action.type) {\r\n    case FETCH_STORY_REQUEST:\r\n      return action.payload;\r\n    case FETCH_STORY:\r\n      return action.payload;\r\n    case EDIT_STORY:\r\n      return action.payload;\r\n    case UPDATE_STORY_COMMENTS:\r\n      return updateStoryComments(state, action);\r\n    case DELETE_COMMENT:\r\n      return deleteStoryComment(state, action)\r\n    case CLEAN_UP:\r\n      return {}\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport authorReducer from './authorReducer';\r\nimport authReducer from './authReducer';\r\nimport storiesReducer from './storiesReducer';\r\nimport storyReducer from './storyReducer';\r\nimport snippetReducer from './snippetsReducer';\r\nimport paginationReducer from './paginationReducer';\r\nimport userStoriesReducer from './userStoriesReducer';\r\nimport errorReducer from './errorReducer';\r\nimport messageReducer from './messageReducer';\r\n\r\n\r\nexport default combineReducers({\r\n  stories: storiesReducer,\r\n  auth: authReducer,\r\n  story: storyReducer,\r\n  author: authorReducer,\r\n  snippets: snippetReducer,\r\n  pager: paginationReducer,\r\n  userStories: userStoriesReducer,\r\n  error: errorReducer,\r\n  message: messageReducer,\r\n})","import { FETCH_STORIES, POST_STORY } from '../actions/types';\r\n\r\nexport default function func(state = [], action) {\r\n  switch (action.type) {\r\n    case FETCH_STORIES:\r\n      return action.payload\r\n    case POST_STORY:\r\n      return [...state, action.payload]\r\n    default:\r\n      return state;\r\n  }\r\n}","import { DELETE_USER, FETCH_USER, PAYMENT_SUCCESS, UPDATE_USER, UPDATING_DESCRIPTION, UPDATING_USERNAME } from \"../actions/types\";\r\n\r\n\r\nexport default function func(state = {}, action) {\r\n  switch (action.type) {\r\n    case FETCH_USER:\r\n      return action.payload || false;\r\n    case UPDATE_USER:\r\n      return action.payload;\r\n    case UPDATING_USERNAME:\r\n      return { ...state, ['username']: action.payload };\r\n    case UPDATING_DESCRIPTION:\r\n      return { ...state, ['description']: action.payload };\r\n    case PAYMENT_SUCCESS:\r\n      return action.payload;\r\n    case DELETE_USER:\r\n      console.log('deletion reached auth reducer')\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n}","import { FETCH_AUTHOR, FETCH_AUTHOR_BASIC, CLEAN_UP } from \"../actions/types\";\r\n\r\n\r\n\r\n\r\nexport default function func(state = null, action) {\r\n  switch (action.type) {\r\n    case FETCH_AUTHOR:\r\n      return action.payload;\r\n    case FETCH_AUTHOR_BASIC:\r\n      return action.payload;\r\n    case CLEAN_UP:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n}","import { DELETE_SNIPPET, FETCH_SNIPPETS, POST_SNIPPET } from \"../actions/types\";\r\n\r\n\r\nexport default function func(state = [], action) {\r\n  switch (action.type) {\r\n    case FETCH_SNIPPETS:\r\n      return action.payload;\r\n    case POST_SNIPPET:\r\n      return [action.payload, ...state];\r\n    case DELETE_SNIPPET:\r\n      return state.filter(snippet => snippet._id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n}","import { PAGINATE } from \"../actions/types\";\r\n\r\n\r\nexport default function func(state = {}, action) {\r\n  switch (action.type) {\r\n    case PAGINATE:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}","import { CLEAN_UP, FETCH_USER_STORIES } from '../actions/types';\r\n\r\nexport default function func(state = [], action) {\r\n  switch (action.type) {\r\n    case FETCH_USER_STORIES:\r\n      return action.payload\r\n    case CLEAN_UP:\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n}","import { ADD_ERROR, CLEAN_UP } from '../actions/types';\r\n\r\nexport default function func(state = null, action) {\r\n  switch (action.type) {\r\n    case ADD_ERROR:\r\n      return action.payload;\r\n    case CLEAN_UP:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n}","// keep track of successful operations (ie deleting stories);\r\n\r\nimport { ADD_MESSAGE, CLEAR_MESSAGE, DELETE_USER } from \"../actions/types\";\r\n\r\nexport default function func(state = null, action) {\r\n  switch (action.type) {\r\n    case DELETE_USER:\r\n      return action.payload;\r\n    case ADD_MESSAGE:\r\n      return action.payload;\r\n    case CLEAR_MESSAGE:\r\n      return null;\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import './styles/main.css';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}