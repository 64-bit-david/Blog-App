{"version":3,"sources":["actions/types.js","actions/index.js","components/Header.js","components/ScrollToTop.js","components/displayError.js","components/Snippets.js","components/Pagination.js","components/Stories.js","components/AddStory.js","components/UserProfile.js","components/StoryComments.js","components/Story.js","components/Author.js","components/EditStory.js","components/AllSnippets.js","components/Payment.js","components/Footer.js","components/App.js","reducers/storiesReducer.js","reducers/storyReducer.js","reducers/index.js","reducers/authReducer.js","reducers/authorReducer.js","reducers/snippetsReducer.js","reducers/paginationReducer.js","reducers/userStoriesReducer.js","reducers/errorReducer.js","reducers/messageReducer.js","reducers/loadingReducer.js","reducers/navDropReducer.js","index.js"],"names":["FETCH_STORIES","FETCH_USER","POST_STORY","UPDATE_USER","UPDATING_USERNAME","UPDATING_DESCRIPTION","FETCH_STORY","FETCH_STORY_REQUEST","FETCH_AUTHOR","FETCH_AUTHOR_BASIC","UPDATE_STORY_COMMENTS","POST_SNIPPET","FETCH_SNIPPETS","PAGINATE","DELETE_SNIPPET","EDIT_STORY","CLEAN_UP","FETCH_USER_STORIES","ADD_ERROR","DELETE_USER","CLEAR_MESSAGE","ADD_MESSAGE","DELETE_COMMENT","PAYMENT_SUCCESS","DROP_NAV","UNDROP_NAV","LOADING","CLEAR_STORIES","CLEAR_ERROR","CLEAR_AUTHOR","CLEAR_STORY","CLEAR_SNIPPETS","CLEAR_USER_STORIES","CLEAR_PAGINATION","fetchUserStories","page","userId","dispatch","a","axios","get","res","type","payload","data","stories","pager","fetchUser","console","log","fetchStory","storyId","story","comments","reverse","error","statusCode","response","status","message","statusText","fetchAuthor","fetchAuthorBasic","postSnippet","snippetText","post","deleteSnippet","snippetId","delete","addSnippet","snippet","dropNav","drop","clearMessage","clearError","clearStories","clearAuthor","clearSnippets","clearUserStories","clearPagination","connect","auth","navStatus","logout","useState","useEffect","className","to","onClick","_id","href","google-btn-link","viewBox","xmlns","d","id","fill","ScrollToTop","pathname","useLocation","window","scrollTo","cleanUp","snippets","fetchSnippet","useForm","register","handleSubmit","errors","reset","socket","openSocket","process","on","action","off","length","onSubmit","name","ref","required","maxLength","slice","map","text","_user","username","Pagination","currentPage","path","clearStore","previousPage","hasPreviousPage","hasNextPage","nextPage","lastPage","loading","storeStory","fetchStories","clearStory","match","params","setCurrentPage","setLoading","clearStoryCheck","storeStoryId","renderGrid1","emptyObj","copyStories","splice","storiesArrayWithFeed","index","title","description","renderMessages","displayError","color","height","timeout","postStory","history","content","creator","msg","push","howFormat","setHowFormat","renderHowToFormat","minLength","author","userStories","updateUsername","put","user","updateUserDesc","deleteUser","preLoadForm","preLoadForm2","defaultValues","register2","errors2","handleSubmit2","showChangeUsername","setShowChangeUserName","showChangeDesc","setShowChangeDesc","showDeleteUser","setShowDeleteUser","changeContainer","setChangeContainer","postUsernameChange","postDescChange","renderUserInfo","donationsRecieved","donationsSent","renderChangeUsername","renderChangeDesc","renderDeleteUser","updateStoryComments","commentInput","commentText","comment","deleteStoryComment","commentId","commentPage","setCommentPage","commentsArray","setCommentsArray","commentsToSkip","arrayToRender","createCommentPgArray","numOfComments","numOfButtons","Math","ceil","commentPager","deleteStory","deletePrompt","setDeletePrompt","authorNameCheck","onDelete","renderDeletePrompt","renderEditOrDonate","dangerouslySetInnerHTML","__html","sanitizedHtml","authorId","authorName","editStory","fetchAllSnippets","stripePromise","loadStripe","ProductDisplay","handleClick","amount","setAmount","value","onChange","e","target","role","Message","postPayment","paymentId","setMessage","query","URLSearchParams","location","search","amountPaid","event","stripe","session","redirectToCheckout","sessionId","Footer","App","class","exact","component","Stories","AddStory","EditStory","Story","Author","UserProfile","AllSnippets","Payment","addStory","state","newStoryArray","pop","updatedState","unshift","filter","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6139998.chunk.js","sourcesContent":["export const FETCH_STORIES = 'FETCH_STORIES';\r\nexport const FETCH_USER = 'FETCH_USER';\r\nexport const LOG_OUT = 'LOG_OUT';\r\nexport const POST_STORY = 'POST_STORY';\r\nexport const UPDATE_USER = 'UPDATE_USER';\r\nexport const UPDATING_USERNAME = 'UPDATING_USERNAME';\r\nexport const UPDATING_DESCRIPTION = 'UPDATING_DESCRIPTION';\r\nexport const SELECT_STORY = 'SELECT_STORY';\r\nexport const FETCH_STORY = 'FETCH_STORY';\r\nexport const FETCH_STORY_REQUEST = 'FETCH_STORY_REQUEST';\r\nexport const DELETE_STORY = 'DELETE_STORY';\r\nexport const FETCH_AUTHOR = 'FETCH_AUTHOR';\r\nexport const FETCH_AUTHOR_BASIC = 'FETCH_AUTHOR_BASIC';\r\nexport const UPDATE_STORY_COMMENTS = 'UPDATE_STORY_COMMENTS';\r\nexport const POST_SNIPPET = 'POST_SNIPPET';\r\nexport const FETCH_SNIPPETS = 'FETCH_SNIPPETS';\r\nexport const PAGINATE = 'PAGINATE';\r\nexport const DELETE_SNIPPET = 'DELETE_SNIPPET';\r\nexport const EDIT_STORY = 'EDIT_STORY';\r\nexport const CLEAN_UP = 'CLEAN_UP';\r\nexport const FETCH_USER_STORIES = 'FETCH_USER_STORIES';\r\nexport const ADD_ERROR = 'ADD_ERROR';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\r\nexport const PAYMENT_SUCCESS = 'PAYMENT_SUCCESS';\r\nexport const DROP_NAV = 'DROP_NAV';\r\nexport const UNDROP_NAV = 'UNDROP_NAV';\r\n\r\nexport const INIT_FETCH_STORIES = 'INIT_FETCH_STORIES';\r\nexport const LOADING = 'LOADING';\r\n\r\nexport const CLEAR_STORIES = \"CLEAR_STORIES\";\r\nexport const CLEAR_ERROR = 'CLEAR_ERROR';\r\nexport const CLEAR_AUTHOR = 'CLEAR_AUTHOR';\r\nexport const CLEAR_STORY = 'CLEAR_STORY';\r\nexport const CLEAR_SNIPPETS = 'CLEAR_SNIPPETS';\r\nexport const CLEAR_USER_STORIES = 'CLEAR_USER_STORIES';\r\nexport const CLEAR_PAGINATION = \"CLEAR_PAGINATION\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios from 'axios';\r\nimport { FETCH_STORIES, FETCH_USER_STORIES, FETCH_USER, POST_STORY, EDIT_STORY, UPDATE_USER, UPDATING_USERNAME, UPDATING_DESCRIPTION, FETCH_STORY, FETCH_AUTHOR, FETCH_AUTHOR_BASIC, UPDATE_STORY_COMMENTS, POST_SNIPPET, FETCH_SNIPPETS, DELETE_SNIPPET, PAGINATE, DELETE_STORY, CLEAN_UP, FETCH_STORY_REQUEST, ADD_ERROR, DELETE_USER, CLEAR_MESSAGE, ADD_MESSAGE, DELETE_COMMENT, PAYMENT_SUCCESS, INIT_FETCH_STORIES, LOADING, CLEAN_UP_MESSAGE, CLEAR_STORIES, CLEAR_ERROR, CLEAR_AUTHOR, CLEAR_STORY, CLEAR_SNIPPETS, CLEAR_USER_STORIES, DROP_NAV, UNDROP_NAV, CLEAR_PAGINATION } from './types';\r\n\r\n\r\nexport const fetchStories = (page) => async (dispatch) => {\r\n  const res = await axios.get('/api/stories/?page=' + page);\r\n  dispatch({ type: PAGINATE, payload: res.data.pager })\r\n  dispatch({ type: FETCH_STORIES, payload: res.data.stories });\r\n}\r\n\r\nexport const fetchUserStories = (page, userId) => async (dispatch) => {\r\n  const res = await axios.get(`/api/account/stories/${userId}/?page=${page}`);\r\n  dispatch({ type: FETCH_USER_STORIES, payload: res.data.stories });\r\n  dispatch({ type: PAGINATE, payload: res.data.pager });\r\n\r\n}\r\n\r\n//For getting current logged in user\r\nexport const fetchUser = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get('/api/current_user');\r\n    dispatch({ type: FETCH_USER, payload: res.data });\r\n  }\r\n  catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const logout = () => async dispatch => {\r\n  await axios.get('/api/logout');\r\n}\r\n\r\nexport const postStory = ({ title, description, content, creator }, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.post('/api/create-story', {\r\n      title, description, content, creator\r\n    })\r\n    dispatch({ type: POST_STORY, payload: res.data.story });\r\n    dispatch({ type: ADD_MESSAGE, payload: res.data.msg })\r\n    history.push('/')\r\n  } catch (err) {\r\n    console.log(err);\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error })\r\n  }\r\n}\r\n\r\nexport const editStory = ({ storyId, title, description, content }, history) =>\r\n  async dispatch => {\r\n    try {\r\n      const res = await axios.put('/api/stories/' + storyId, {\r\n        title, description, content,\r\n      });\r\n      dispatch({ type: EDIT_STORY, payload: res.data.story });\r\n      dispatch({ type: ADD_MESSAGE, payload: res.data.msg })\r\n      history.push('/story/' + storyId);\r\n    } catch (err) {\r\n      console.log(err)\r\n      const error = {\r\n        statusCode: err.response.status,\r\n        message: err.response.data.error,\r\n        statusText: err.response.data.statusText\r\n      }\r\n      dispatch({ type: ADD_ERROR, payload: error })\r\n    }\r\n  }\r\n\r\nexport const deleteStory = (storyId) => async dispatch => {\r\n  try {\r\n    await axios.delete(`/api/stories/${storyId}`);\r\n    dispatch({ type: DELETE_STORY, payload: storyId });\r\n    dispatch({ type: ADD_MESSAGE, payload: 'Story Deleted' })\r\n  } catch (err) {\r\n    console.log(err)\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error })\r\n  }\r\n}\r\n\r\nexport const updateUsername = (username) => async dispatch => {\r\n  dispatch({ type: UPDATING_USERNAME, payload: 'Updating...' })\r\n  try {\r\n    const res = await axios.put('/account/update-username', {\r\n      username\r\n    });\r\n    dispatch({ type: UPDATE_USER, payload: res.data.user })\r\n  } catch (err) {\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error })\r\n  }\r\n}\r\n\r\nexport const updateUserDesc = (description) => async dispatch => {\r\n  dispatch({ type: UPDATING_DESCRIPTION, payload: 'Updating...' })\r\n  try {\r\n    const res = await axios.put('/account/update-desc', {\r\n      description\r\n    })\r\n    dispatch({ type: UPDATE_USER, payload: res.data.user });\r\n  } catch (err) {\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error })\r\n  }\r\n}\r\n\r\nexport const fetchStory = (storyId) => async dispatch => {\r\n  try {\r\n    let res = await axios.get(`/api/stories/${storyId}`);\r\n    if (res.data.story.comments > 0) {\r\n      res.data.story.comments = res.data.story.comments.reverse();\r\n    }\r\n    dispatch({ type: FETCH_STORY, payload: res.data.story })\r\n  } catch (err) {\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    console.log(error)\r\n    dispatch({ type: ADD_ERROR, payload: error })\r\n  }\r\n}\r\n\r\n\r\n//for getting author (with stories populated )of a post/story\r\nexport const fetchAuthor = (userId) => async dispatch => {\r\n  const res = await axios.get(`/account/${userId}`);\r\n\r\n  dispatch({ type: FETCH_AUTHOR, payload: res.data });\r\n}\r\n\r\nexport const fetchAuthorBasic = (userId) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/account/basic/${userId}`);\r\n    dispatch({ type: FETCH_AUTHOR_BASIC, payload: res.data });\r\n  } catch (err) {\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error });\r\n  }\r\n}\r\nexport const updateStoryComments = (storyId, commentInput) => async dispatch => {\r\n  try {\r\n    const res = await axios.post(`/api/stories/comments/${storyId}`, {\r\n      commentText: commentInput\r\n    });\r\n\r\n    dispatch({ type: UPDATE_STORY_COMMENTS, payload: res.data.comment });\r\n  } catch (err) {\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error });\r\n\r\n  }\r\n}\r\n\r\nexport const deleteStoryComment = (storyId, commentId) => async dispatch => {\r\n  try {\r\n    await axios.delete(`/api/stories/comments/${storyId}/${commentId}`)\r\n    dispatch({ type: DELETE_COMMENT, payload: commentId });\r\n  } catch (err) {\r\n    console.log(err);\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error });\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const fetchSnippet = () => async dispatch => {\r\n  const res = await axios.get('/api/snippets');\r\n  dispatch({ type: FETCH_SNIPPETS, payload: res.data.snippets })\r\n}\r\n\r\n\r\n\r\nexport const fetchAllSnippets = (page) => async dispatch => {\r\n  const res = await axios.get('/api/all-snippets/?page=' + page);\r\n  dispatch({ type: FETCH_SNIPPETS, payload: res.data.snippets });\r\n  dispatch({ type: PAGINATE, payload: res.data.pager });\r\n}\r\n\r\n\r\n\r\nexport const postSnippet = (snippetText) => async dispatch => {\r\n  try {\r\n    await axios.post('/api/post-snippet', {\r\n      snippetText\r\n    });\r\n  } catch (err) {\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error })\r\n  }\r\n  //websocket updates state so below not needed, causes duplication for user\r\n  //server responds with full user obj, but we need user to only hold the id so overide\r\n  // res.data.response._user = res.data.response._user._id;\r\n  // dispatch({ type: POST_SNIPPET, payload: res.data.response });\r\n};\r\n\r\n\r\nexport const deleteSnippet = (snippetId) => async dispatch => {\r\n  await axios.delete('/api/snippet/' + snippetId);\r\n  dispatch({ type: DELETE_SNIPPET, payload: snippetId });\r\n}\r\n\r\n\r\n\r\nexport const addSnippet = (snippet) => {\r\n  return { type: POST_SNIPPET, payload: snippet }\r\n}\r\n\r\n\r\nexport const postPayment = (amount, authorId, userId, paymentId) => async dispatch => {\r\n  try {\r\n    const res = await axios.post('/post-payment-data', {\r\n      amount,\r\n      authorId,\r\n      userId,\r\n      paymentId\r\n    });\r\n    dispatch({ type: PAYMENT_SUCCESS, payload: res.data.user })\r\n  } catch (err) {\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error })\r\n  }\r\n}\r\n\r\nexport const deleteUser = (userId, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.delete('/account/' + userId);\r\n\r\n    dispatch({ type: DELETE_USER, payload: res.data.msg });\r\n    history.push('/');\r\n  } catch (err) {\r\n    console.log(err);\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error })\r\n  }\r\n}\r\n\r\nexport const dropNav = (drop) => {\r\n  if (drop) {\r\n    return { type: DROP_NAV }\r\n  }\r\n  if (!drop) {\r\n    return { type: UNDROP_NAV }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const clearMessage = () => {\r\n  return { type: CLEAR_MESSAGE };\r\n}\r\n\r\nexport const clearError = () => {\r\n  return { type: CLEAR_ERROR }\r\n}\r\n\r\nexport const clearStories = () => {\r\n  return { type: CLEAR_STORIES }\r\n}\r\n\r\nexport const clearAuthor = () => {\r\n  return { type: CLEAR_AUTHOR }\r\n}\r\n\r\nexport const clearStory = () => {\r\n  return { type: CLEAR_STORY }\r\n}\r\n\r\nexport const clearSnippets = () => {\r\n  return { type: CLEAR_SNIPPETS }\r\n}\r\n\r\nexport const clearUserStories = () => {\r\n  return { type: CLEAR_USER_STORIES }\r\n}\r\n\r\nexport const clearPagination = () => {\r\n  return { type: CLEAR_PAGINATION }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchUser, logout, dropNav, clearStories } from '../actions';\r\n\r\nconst Header = ({ fetchUser, auth, logout, navStatus, dropNav, clearStories }) => {\r\n\r\n  const [dropDown, setDropDown] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, [fetchUser])\r\n\r\n\r\n\r\n\r\n  const isLoggedIn = () => {\r\n    if (!auth) {\r\n      return (\r\n        <div className={`google-btn ${dropNav && 'active'}`}>\r\n          <a google-btn-link href=\"/auth/google\">\r\n            <button type=\"button\" className=\"google-button\">\r\n              <span className=\"google-button__icon\">\r\n                <svg viewBox=\"0 0 366 372\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M125.9 10.2c40.2-13.9 85.3-13.6 125.3 1.1 22.2 8.2 42.5 21 59.9 37.1-5.8 6.3-12.1 12.2-18.1 18.3l-34.2 34.2c-11.3-10.8-25.1-19-40.1-23.6-17.6-5.3-36.6-6.1-54.6-2.2-21 4.5-40.5 15.5-55.6 30.9-12.2 12.3-21.4 27.5-27 43.9-20.3-15.8-40.6-31.5-61-47.3 21.5-43 60.1-76.9 105.4-92.4z\" id=\"Shape\" fill=\"#EA4335\" /><path d=\"M20.6 102.4c20.3 15.8 40.6 31.5 61 47.3-8 23.3-8 49.2 0 72.4-20.3 15.8-40.6 31.6-60.9 47.3C1.9 232.7-3.8 189.6 4.4 149.2c3.3-16.2 8.7-32 16.2-46.8z\" id=\"Shape\" fill=\"#FBBC05\" /><path d=\"M361.7 151.1c5.8 32.7 4.5 66.8-4.7 98.8-8.5 29.3-24.6 56.5-47.1 77.2l-59.1-45.9c19.5-13.1 33.3-34.3 37.2-57.5H186.6c.1-24.2.1-48.4.1-72.6h175z\" id=\"Shape\" fill=\"#4285F4\" /><path d=\"M81.4 222.2c7.8 22.9 22.8 43.2 42.6 57.1 12.4 8.7 26.6 14.9 41.4 17.9 14.6 3 29.7 2.6 44.4.1 14.6-2.6 28.7-7.9 41-16.2l59.1 45.9c-21.3 19.7-48 33.1-76.2 39.6-31.2 7.1-64.2 7.3-95.2-1-24.6-6.5-47.7-18.2-67.6-34.1-20.9-16.6-38.3-38-50.4-62 20.3-15.7 40.6-31.5 60.9-47.3z\" fill=\"#34A853\" /></svg>\r\n              </span>\r\n              <span className=\"google-button__text\">Sign in with Google</span>\r\n            </button>\r\n          </a>\r\n\r\n        </div>\r\n      )\r\n    }\r\n    if (auth?._id) {\r\n      return (\r\n        <div>\r\n          <div className={`header-right-menu ${navStatus && 'active'}`}>\r\n            <Link\r\n              to=\"/add-story\"\r\n              className=\" btn dd-btn\"\r\n              onClick={() => dropNav(false)}\r\n            >\r\n              Add a Story\r\n           </Link>\r\n            <Link\r\n              to={`/your-profile`}\r\n              className=\" btn dd-btn\"\r\n              onClick={() => dropNav(false)}\r\n\r\n            >\r\n              Your Profile\r\n            </Link>\r\n            <a href=\"/api/logout\"\r\n              className=\"btn dd-btn\"\r\n              onClick={() => {\r\n                dropNav(false)\r\n                logout();\r\n              }}>\r\n              Log Out\r\n            </a>\r\n          </div>\r\n          <div className={`burger ${navStatus && 'active'}`}>\r\n            <button\r\n              onClick={() => dropNav(!navStatus)}\r\n              className=\"burger-btn\"\r\n            >\r\n              <div className=\"burger-line\"></div>\r\n              <div className=\"burger-line\"></div>\r\n              <div className=\"burger-line\"></div>\r\n            </button>\r\n          </div>\r\n        </div >\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"header\">\r\n        <div className=\"header-left\">\r\n          <Link\r\n            to=\"/\"\r\n            onClick={() => clearStories()}><h2>Writer's Desk</h2></Link>\r\n        </div>\r\n        <div className=\"header-right\">\r\n          {isLoggedIn()}\r\n\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ auth, navStatus }) => {\r\n  return { auth, navStatus }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchUser, logout, dropNav, clearStories })(Header)\r\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import { Link } from 'react-router-dom';\r\n\r\nexport default function (error, cleanUp) {\r\n  return (\r\n    <div className=\"error-container\">\r\n      <p>Error:{error.statusCode}</p>\r\n      <p>{error.message}</p>\r\n      <Link\r\n        className=\"btn\"\r\n        to=\"/\"\r\n        onClick={() => {\r\n          cleanUp()\r\n        }}>Back to Home</Link>\r\n    </div>)\r\n}","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport openSocket from 'socket.io-client';\r\nimport { useForm } from 'react-hook-form';\r\nimport { postSnippet, fetchSnippet, addSnippet, deleteSnippet, clearError, clearAuthor, clearSnippets } from '../actions';\r\n\r\n\r\nconst Snippets = ({ postSnippet, fetchSnippet, snippets, addSnippet, auth, deleteSnippet, clearAuthor, clearSnippets }) => {\r\n\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm();\r\n\r\n\r\n  //fetchsnippets, and open a socket the listens for created snippets\r\n  useEffect(() => {\r\n    const socket = openSocket(process.env.REACT_APP_STRIPE_PATH);\r\n\r\n    socket.on('snippets', data => {\r\n      if (data.action === 'create') {\r\n        addSnippet(data.snippet);\r\n      }\r\n      if (data.action === 'delete') {\r\n        fetchSnippet();\r\n      }\r\n    })\r\n    return () => {\r\n      socket.off('snippets');\r\n    }\r\n\r\n  }, [addSnippet, fetchSnippet, snippets.length]);\r\n\r\n  useEffect(() => {\r\n    if (snippets.length < 1) {\r\n      fetchSnippet();\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      clearSnippets()\r\n    }\r\n  }, [])\r\n\r\n\r\n  const onSubmit = (data) => {\r\n    postSnippet(data.snippetText);\r\n    reset();\r\n  }\r\n\r\n  const rendersnippetInput = () => {\r\n    return (\r\n      <form className=\"snippet-form\" onSubmit={handleSubmit(onSubmit)}>\r\n        <label>Post a snippet</label>\r\n        <div className=\"input-container\">\r\n          <input\r\n            name='snippetText'\r\n            ref={register({ required: true, maxLength: 100 })}\r\n            className=\"snippets-home-input\"\r\n          />\r\n          <div className=\"snippet-btn-container\">\r\n            <button className=\"btn green-btn\" type='submit'>Post</button>\r\n          </div>\r\n        </div>\r\n        {errors.snippetText && errors.snippetText.type === 'maxLength' && (\r\n          <p className=\"validation-warning\">Snippets have a max length of 100 characters</p>\r\n        )}\r\n\r\n      </form>\r\n    )\r\n  }\r\n\r\n  //renders snippets\r\n  //When user adds a snippet, we slice the array to ensure it stays same length\r\n  //ensure it matches the limits set in back end\r\n  const renderSnippets = () => {\r\n    let arrayToMap;\r\n    if (snippets.length > 10) {\r\n      arrayToMap = snippets.slice(0, 10);\r\n    } else {\r\n      arrayToMap = snippets;\r\n    }\r\n    return arrayToMap.map(snippet => {\r\n      return (\r\n        <div key={snippet._id} className=\"snippet-container\">\r\n          <div className=\"snippet-left\">\r\n            <p className=\"snippet-text\">{snippet.text}\r\n            </p>\r\n            <p className=\"snippet-username\">\r\n              <Link\r\n                to={`/author/${snippet._user}`}\r\n                onClick={() => clearAuthor()}>{snippet.username}</Link>\r\n            </p>\r\n          </div>\r\n          <div className=\"snippet-right\">\r\n            {snippet._user === auth?._id ?\r\n              <button className=\"btn delete-btn\" onClick={() => deleteSnippet(snippet._id)}>Delete</button> : null}\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  const pageSuccess = () => {\r\n    return (\r\n      <div className=\"snippets-container story-item\">\r\n        <div className=\"snippet-header-container\">\r\n          <h3>Snippets</h3>\r\n        </div>\r\n        <p className=\"snippets-sub-header\">Let other writers know what you're up to, add a short snippet to the live feed.</p>\r\n        {rendersnippetInput()}\r\n        {renderSnippets()}\r\n        <div className=\"link-to-snippets\">\r\n          <Link to=\"/snippets/1\">See all snippets</Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {pageSuccess()}\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ snippets, auth }) => {\r\n  return { snippets, auth };\r\n}\r\n\r\nexport default connect(mapStateToProps, { postSnippet, fetchSnippet, addSnippet, deleteSnippet, clearError, clearAuthor, clearSnippets })(Snippets);\r\n\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Pagination = ({ pager, currentPage, path, clearStore }) => {\r\n\r\n  return (\r\n    <div className=\"paginate-container\">\r\n      <ul>\r\n        {pager.currentPage !== 1 && pager.previousPage !== 1 ?\r\n          <li>\r\n            <Link\r\n              to={`${path}1`}\r\n              className={`${currentPage === 1 && 'active'} `}\r\n              onClick={() => clearStore()}\r\n            >1\r\n              </Link>\r\n          </li>\r\n          : null\r\n        }\r\n        {pager.hasPreviousPage ?\r\n          <li>\r\n            <Link\r\n              to={`${path}${pager.previousPage}`}\r\n              onClick={() => clearStore()}\r\n            >\r\n              {pager.previousPage}\r\n            </Link>\r\n          </li>\r\n          : null\r\n        }\r\n        <li>\r\n          <Link to={`${path}${pager.currentPage}`}\r\n            className=\"active\"\r\n            onClick={() => clearStore()}\r\n          >\r\n            {pager.currentPage}\r\n          </Link>\r\n        </li>\r\n        {pager.hasNextPage ?\r\n          <li>\r\n            <Link to={`${path}${pager.nextPage}`}\r\n              onClick={() => clearStore()}\r\n            >\r\n              {pager.nextPage}\r\n            </Link>\r\n          </li>\r\n          : null\r\n        }\r\n        {pager.lastPage !== pager.currentPage &&\r\n          pager.nextPage !== pager.lastPage &&\r\n          pager.lastPage !== 0 ?\r\n          <li>\r\n\r\n            <Link to={`${path}${pager.lastPage}`}\r\n              onClick={() => clearStore()}\r\n            >\r\n              {pager.lastPage}\r\n            </Link>\r\n          </li>\r\n          : null\r\n        }\r\n      </ul>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default Pagination;\r\n","import { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport displayError from './displayError';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\n\r\nimport { fetchStories, clearError, clearMessage, clearStory, clearAuthor, clearStories, dropNav, clearPagination } from '../actions/index';\r\nimport Snippets from './Snippets';\r\nimport Pagination from './Pagination';\r\n\r\n\r\nconst Stories = ({ stories, fetchStories, pager, match, clearMessage, error, message, clearError, storeStory, clearStory, clearAuthor, clearStories, dropNav, clearPagination }) => {\r\n\r\n  const [currentPage, setCurrentPage] = useState(match.params.page);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(match.params.page || 1);\r\n\r\n  }, [setCurrentPage, match.params.page, currentPage])\r\n\r\n  // useEffect(() => {\r\n  //   const fetchCheck = async () => {\r\n  //     if (stories.length < 1) {\r\n  //       if (pager.currentPage !== currentPage && currentPage) {\r\n  //         await fetchStories(currentPage || 1);\r\n  //       }\r\n  //       else {\r\n  //         await fetchStories(1);\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   fetchCheck();\r\n  //   if (stories.length > 0) setLoading(false);\r\n  // }, [fetchStories, pager, currentPage, stories.length]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (stories.length < 1) {\r\n      fetchStories(currentPage || 1);\r\n    }\r\n\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    if (stories.length > 0) setLoading(false);\r\n    if (stories.length < 1) setLoading(true);\r\n  }, [stories])\r\n\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      clearError();\r\n    }\r\n  }, [clearError])\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      clearMessage()\r\n    }\r\n  }, [clearMessage]);\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      dropNav(false);\r\n    }\r\n  }, [dropNav]);\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      clearStories();\r\n      clearPagination();\r\n    }\r\n  }, [])\r\n\r\n\r\n\r\n  const clearStoryCheck = (storyId, storeStoryId) => {\r\n\r\n    if (storeStoryId && storyId !== storeStoryId) {\r\n      clearStory();\r\n      clearAuthor();\r\n    }\r\n  }\r\n\r\n  //creates a new array with a few extras inserted at the start of the stories array\r\n  const storiesArrayWithFeed = () => {\r\n    const emptyObj = {};\r\n    const copyStories = [...stories];\r\n    copyStories.splice(0, 0, emptyObj);\r\n    copyStories.splice(1, 0, emptyObj);\r\n    copyStories.splice(2, 0, emptyObj);\r\n    return copyStories\r\n  }\r\n\r\n  //renders the array of user stories into grid items, insert a featured story at the index 0, snippets component at index 1 and a title for latest stories at index 2\r\n  const renderGrid1 = () => {\r\n    const storiesWithFeed = storiesArrayWithFeed();\r\n    return storiesWithFeed.map((story, index) => {\r\n      if (index === 0) {\r\n        return (\r\n          <div className={`story-item-container`} key={index}>\r\n            <Link\r\n              to={`/story/606ae0b59dbfba3cccf41568`}\r\n              onClick={() => clearStoryCheck(story._id, storeStory?._id)}\r\n            >\r\n              <div className=\"story-item featured-story\">\r\n                <h5 className=\"featured-text\">Featured Story</h5>\r\n                <h3>Shall I compare thee to a summer's day?</h3>\r\n                <p className=\"story-page-author\">Posted by: Somebody</p>\r\n                <p className=\"story-page-desc\">\r\n                  A poem I wrote back in February about better days to come! Kinda sombre in theme as well but don't let it get you down too much!\r\n                  A poem I wrote back in February about better days to come! Kinda sombre in theme as well but don't\r\n              </p>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n        )\r\n      }\r\n      if (index === 1) {\r\n        return (\r\n          <div className={`story-item-container snippets-container`} key={index}>\r\n            <Snippets />\r\n          </div>\r\n        )\r\n      }\r\n      if (index === 2) {\r\n        return (\r\n          <div className=\"story-item-container sub-header-container\" key={index}>\r\n            <h2>Latest Stories</h2>\r\n          </div>\r\n        )\r\n      }\r\n      return (\r\n        <div className={`story-item-container`} key={index}>\r\n          <Link\r\n            to={`/story/${story._id}`}\r\n            onClick={() => clearStoryCheck(story._id, storeStory?._id)}\r\n          >\r\n            <div className=\"story-item\">\r\n              <h3>{story.title}</h3>\r\n              <p className=\"story-page-author\">Posted by: {story.username}</p>\r\n              <p className=\"story-page-desc\">\r\n                {story.description}\r\n              </p>\r\n            </div>\r\n          </Link>\r\n\r\n        </div >\r\n      )\r\n    })\r\n  }\r\n\r\n  const renderGrid2 = () => {\r\n    return stories.map((story, index) => {\r\n      return (\r\n        <div className={`story-item-container`} key={index}>\r\n          <Link\r\n            to={`/story/${story._id}`}\r\n            onClick={() => clearStoryCheck(story._id, storeStory?._id)}\r\n          >\r\n            <div className=\"story-item\">\r\n              <h3>{story.title}</h3>\r\n              <p className=\"story-page-author\">Posted by: {story.username}</p>\r\n              <p className=\"story-page-desc\">\r\n                {story.description}\r\n              </p>\r\n            </div>\r\n          </Link>\r\n\r\n        </div >\r\n      )\r\n    })\r\n  };\r\n\r\n  const gridToRender = () => {\r\n    if (pager.currentPage === 1) {\r\n      console.log('g1 render')\r\n      return (\r\n        <div className=\"stories-grid author-stories-grid\">\r\n          {renderGrid1()}\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      console.log('g2 render')\r\n      return (\r\n        <div className=\"stories-grid stories-grid-2 author-stories-grid\">\r\n          {renderGrid2()}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const pageSuccess = () => {\r\n    return (\r\n      <div className=\"stories-container\">\r\n        <div className=\"header-container\">\r\n          <h1>{!currentPage || currentPage == 1 ? \"Home\" : `Latest Stories - Page ${currentPage}`}</h1>\r\n        </div>\r\n        <p className=\"p-welcome\">Welcome to <span>Writer's Desk</span>, a space for creative writers to share their work! Sign up and post your own stories and consider supporting other writers with a donation.</p>\r\n        { loading ?\r\n          <div className=\"loader\">\r\n            <Loader type=\"ThreeDots\" color=\"#ccd5ae\" height={80}\r\n              timeout={5000}\r\n            />\r\n          </div> :\r\n          gridToRender()\r\n        }\r\n        {loading ? null :\r\n          <Pagination\r\n            pager={pager}\r\n            currentPage={currentPage}\r\n            path={`/stories/`}\r\n            clearStore={clearStories}\r\n          />\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderMessages = () => {\r\n    if (message) {\r\n      return (\r\n        <div className=\"message-container\">\r\n          <div className=\"message\">\r\n            <p>{message}</p>\r\n            <button\r\n              className=\"btn notification-btn\"\r\n              onClick={() => clearMessage()}>Close</button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {renderMessages()}\r\n      {error ? displayError(error, clearError) : pageSuccess()}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ stories, pager, error, message, loading, story: storeStory }) => {\r\n  return { stories, pager, error, message, loading, storeStory }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchStories, clearError, clearMessage, clearStory, clearAuthor, clearStories, dropNav, clearPagination })(Stories);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { postStory, clearError, dropNav } from '../actions';\r\nimport { useForm } from 'react-hook-form';\r\nimport displayError from './displayError';\r\n\r\n\r\n\r\nconst AddStory = ({ postStory, auth, history, error, clearError, dropNav }) => {\r\n\r\n\r\n  const [howFormat, setHowFormat] = useState(false);\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      dropNav(false);\r\n    }\r\n  }, [dropNav])\r\n\r\n  const onSubmit = (data) => {\r\n    const creator = auth._id;\r\n    const title = data.title;\r\n    const description = data.description;\r\n    const content = data.content;\r\n\r\n    const postBody = { title, description, content, creator };\r\n    postStory(postBody, history);\r\n  }\r\n\r\n  const renderHowToFormat = () => {\r\n    if (howFormat) {\r\n      return (\r\n        <div className=\"how-to-format-container\">\r\n          <p>Writer's Desk uses \"marked\" for formatting user stories. Most users only need to know that hitting the space button twice will format the text to a new line. <br />  For everything else however, check out the <span><a href=\"https://marked.js.org/\">marked demo</a></span> for all formatting options</p>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn change-esc-btn\"\r\n            onClick={() => setHowFormat(false)}>X</button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  const forms = () => {\r\n    return (\r\n      <div className=\"forms-container\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n          <div className=\"form-btn-container\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn htf-btn notification-btn\"\r\n              onClick={() => setHowFormat(true)}>How to format</button>\r\n          </div>\r\n          {renderHowToFormat()}\r\n          <div className=\"add-story-input-title add-story-item-container\">\r\n            <label> Add a Title</label>\r\n            <input\r\n              name=\"title\"\r\n              ref={register({ required: true, maxLength: 100 })}\r\n            />\r\n            {errors.title && errors.title.type === 'required' && (\r\n              <p className=\"validation-warning\">This is Required</p>\r\n            )}\r\n            {errors.title && errors.title.type === 'maxLength' && (\r\n              <p className=\"validation-warning\">Title should not be longer than 100 characters</p>\r\n            )}\r\n          </div>\r\n          <div className=\"add-story-input-description add-story-item-container\">\r\n            <label> Short description</label>\r\n            <input\r\n              name=\"description\"\r\n              ref={register({ required: true, maxLength: 200 })}\r\n            />\r\n            {errors.description && errors.description.type === 'required' && (\r\n              <p className=\"validation-warning\">This is Required</p>\r\n            )}\r\n            {errors.description && errors.description.type === 'maxLength' && (\r\n              <p className=\"validation-warning\">Description should not be longer than 250 characters</p>\r\n            )}\r\n          </div>\r\n          <div className=\"add-story-input-content add-story-item-container\">\r\n            <label>Story</label>\r\n            <textarea\r\n              name=\"content\"\r\n              ref={register({ required: true, minLength: 100, maxLength: 10000 })}\r\n            />\r\n            {errors.content && errors.content.type === 'required' && (\r\n              <p className=\"validation-warning\">This is Required</p>\r\n            )}\r\n            {errors.content && errors.content.type === 'minLength' && (\r\n              <p className=\"validation-warning\">A story must have at least 100 characters</p>)}\r\n            {errors.content && errors.content.type === 'maxLength' && (\r\n              <p className=\"validation-warning\">The maximum length for a story is 10,000 characters</p>\r\n            )}\r\n\r\n          </div>\r\n          <div className=\"form-btn-container\">\r\n            <button\r\n              name=\"submit-button\"\r\n              className=\"green-btn btn\"\r\n              type=\"submit\"\r\n            >Submit</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  const pageSuccess = () => {\r\n    return (\r\n      <div className=\"add-story-container\">\r\n        <div className=\"header-container\">\r\n          <h1>Submit Your Story!</h1>\r\n        </div>\r\n        {forms()}\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {error ? displayError(error, clearError) : pageSuccess()}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ auth, story, error }) => {\r\n  return { auth, story, error }\r\n}\r\n\r\nexport default connect(mapStateToProps, { postStory, clearError, dropNav })(AddStory)\r\n","import { connect } from 'react-redux';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport { fetchAuthor, fetchUser, updateUsername, updateUserDesc, fetchUserStories, clearError, deleteUser, clearMessage, clearUserStories, dropNav } from '../actions';\r\nimport Pagination from './Pagination';\r\nimport displayError from './displayError';\r\n\r\nconst Author = ({ userStories, auth, updateUsername, updateUserDesc, fetchUserStories, match, pager, clearError, error, deleteUser, history, clearMessage, message, clearUserStories, dropNav }) => {\r\n\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n\r\n  const preLoadForm = {\r\n    username: auth.username\r\n  }\r\n\r\n  const preLoadForm2 = {\r\n    description: auth.description\r\n  }\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    defaultValues: preLoadForm\r\n  });\r\n\r\n  const {\r\n    register: register2,\r\n    errors: errors2,\r\n    handleSubmit: handleSubmit2\r\n  } = useForm({ defaultValues: preLoadForm2 });\r\n\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      dropNav(false);\r\n    }\r\n  }, [dropNav])\r\n\r\n\r\n  // const [input, setInput] = useState('');\r\n  const [showChangeUsername, setShowChangeUserName] = useState(false);\r\n  const [showChangeDesc, setShowChangeDesc] = useState(false);\r\n  const [showDeleteUser, setShowDeleteUser] = useState(false);\r\n  const [changeContainer, setChangeContainer] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(match.params.page);\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(match.params.page);\r\n  }, [setCurrentPage, match.params.page]);\r\n\r\n  useEffect(() => {\r\n    if (!auth) {\r\n      fetchUser();\r\n    }\r\n  }, [auth])\r\n\r\n  useEffect(() => {\r\n    if (auth._id) {\r\n      fetchUserStories(currentPage || 1, auth._id);\r\n    }\r\n  }, [auth, currentPage])\r\n\r\n  // useEffect(() => {\r\n  //   if (auth?._id) {\r\n  //     if (pager.currentPage !== currentPage && currentPage) {\r\n  //       fetchUserStories(currentPage, auth._id);\r\n  //     }\r\n  //     else {\r\n  //       fetchUserStories(1, auth._id);\r\n  //     }\r\n  //   }\r\n\r\n  // }, [pager.currentPage, currentPage, auth, fetchUserStories]);\r\n\r\n  useEffect(() => {\r\n    if (userStories.length < 1) setLoading(true);\r\n    if (userStories.length > 0) setLoading(false);\r\n  }, [userStories.length])\r\n\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      clearError();\r\n    }\r\n  }, [clearError])\r\n\r\n\r\n\r\n\r\n  const postUsernameChange = (data) => {\r\n    updateUsername(data.username);\r\n    setShowChangeUserName(false);\r\n  }\r\n\r\n  const postDescChange = (data) => {\r\n    updateUserDesc(data.description);\r\n    setShowChangeDesc(false);\r\n  }\r\n\r\n  const postDeleteUser = () => {\r\n    deleteUser(auth._id, history);\r\n  }\r\n\r\n  const authorName = () => {\r\n    if (auth) {\r\n      if (auth.username) {\r\n        return auth.username\r\n      }\r\n      return auth.name;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  const authorDescription = () => {\r\n    if (auth) {\r\n      if (auth.description) {\r\n        return auth.description\r\n      }\r\n      else {\r\n        return \"You don't have a description yet\"\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  const renderAuthorStories = () => {\r\n    if (!userStories) {\r\n      return null;\r\n    }\r\n    else {\r\n      return userStories.map(story => {\r\n        return (\r\n          <div className={`story-item-container`} key={story._id}>\r\n            <Link\r\n              to={`/story/${story._id}`}\r\n            >\r\n              <div className=\"story-item\">\r\n                <h3>{story.title}</h3>\r\n                <p className=\"story-page-author\">Posted by: {story.username}</p>\r\n                <p className=\"story-page-desc\">\r\n                  {story.description}\r\n                </p>\r\n              </div>\r\n            </Link>\r\n\r\n          </div >\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  const renderUserInfo = () => {\r\n    if (auth) {\r\n      return (\r\n        <div className=\"author-data-container user-data-container\">\r\n          <div className=\"header-container\">\r\n            <h1>Your Profile</h1>\r\n          </div>\r\n\r\n          {auth.donationsRecieved || auth.donationsSent ?\r\n            <div className=\"author-donations-container author-data-item\">\r\n              {auth.donationsRecieved ? <p>Donations received:  £{auth.donationsRecieved}</p> : null}\r\n              {auth.donationsSent ? <p>You have donated: £{auth.donationsSent} </p> : null}\r\n            </div> : null}\r\n\r\n          <div className=\"author-username-container author-data-item\">\r\n            <p>{authorName()}</p>\r\n            <button\r\n              className=\"btn green-btn\"\r\n              onClick={() => {\r\n                setShowChangeUserName(true)\r\n                setChangeContainer(true)\r\n              }}\r\n            >Edit Username</button>\r\n\r\n          </div>\r\n\r\n          {renderChangeUsername()}\r\n\r\n          <div className=\"author-description-container  author-data-item\">\r\n            <p>\r\n              {authorDescription()}\r\n            </p>\r\n            <button\r\n              className=\"btn green-btn\"\r\n              onClick={() => {\r\n                setShowChangeDesc(true)\r\n                setChangeContainer(true)\r\n              }}>\r\n              {auth.description ? \"Edit Description\" : \"Add Description\"}\r\n            </button>\r\n          </div>\r\n\r\n          {/* renders input prompt when user clicks edit btn  */}\r\n          {renderChangeDesc()}\r\n\r\n          <div\r\n            className={`author-delete-container\r\n                      author-data-item\r\n                      ${showDeleteUser && 'hide'}`}>\r\n            <p>Delete your profile</p>\r\n            <button\r\n              className=\"btn danger-btn\"\r\n              onClick={() => {\r\n                setShowDeleteUser(true)\r\n                setChangeContainer(true)\r\n              }}\r\n            >DELETE</button>\r\n\r\n          </div>\r\n          {renderDeleteUser()}\r\n\r\n\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const renderChangeUsername = () => {\r\n    if (auth) {\r\n      return (\r\n        <div\r\n          className={\r\n            `update-info-container author-data-item ${showChangeUsername && 'active'}`}>\r\n          <button\r\n            className=\"change-esc-btn btn\"\r\n            onClick={() => {\r\n              setShowChangeUserName(false)\r\n              setChangeContainer(false)\r\n            }}\r\n          >X</button>\r\n          <form onSubmit={handleSubmit(postUsernameChange)}>\r\n            <label>Change Username: </label>\r\n            <div className=\"input-container\">\r\n              <input\r\n                name=\"username\"\r\n                ref={register({ required: true, maxLength: 30 })}\r\n              />\r\n              <div className=\"submit-btn-container\"><button type=\"submit\" className=\"btn green-btn\">Submit</button></div>\r\n            </div>\r\n            {errors.username && errors.username.type === 'required' && (\r\n              <p className=\"validation-warning\">Required</p>\r\n            )}\r\n            {errors.username && errors.username.type === 'maxLength' && (\r\n              <p className=\"validation-warning\">Username should not be longer than 30 characters</p>\r\n            )}\r\n          </form>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  const renderChangeDesc = () => {\r\n    if (auth) {\r\n\r\n      return (\r\n        <div\r\n          className={\r\n            `update-info-container author-data-item ${showChangeDesc && 'active'}`}>\r\n          <button\r\n            className=\"change-esc-btn btn\"\r\n            onClick={() => {\r\n              setShowChangeDesc(false)\r\n              setChangeContainer(false)\r\n            }}\r\n          >X</button>\r\n          <form onSubmit={handleSubmit2(postDescChange)}>\r\n            <label>\r\n              {auth.description ? 'Edit your description' :\r\n                \"Add a description to your profile\"}\r\n            </label>\r\n            <div className=\"input-container\">\r\n              <input\r\n                name=\"description\"\r\n                ref={register2({ required: true, minLength: 5, maxLength: 100 })}\r\n              />\r\n              <div className=\"submit-btn-container\">\r\n                <button type=\"submit\" className=\"btn green-btn\">Submit</button>\r\n              </div>\r\n\r\n            </div>\r\n            {errors2.description && errors2.description.type === 'required' && (\r\n              <p className=\"validation-warning\">Required</p>\r\n            )}\r\n            {errors2.description && errors2.description.type === 'maxLength' && (\r\n              <p className=\"validation-warning\">Description should not be longer than 100 characters</p>\r\n            )}\r\n            {errors2.description && errors2.description.type === 'minLength' && (\r\n              <p className=\"validation-warning\">Descriptions must have at least 5 characters</p>\r\n            )}\r\n          </form>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const renderDeleteUser = () => {\r\n    return (\r\n      <div className={\r\n        `update-info-container author-data-item ${showDeleteUser && 'active'}`}>\r\n        <button\r\n          className=\"change-esc-btn btn\"\r\n          onClick={() => {\r\n            setShowDeleteUser(false);\r\n            setChangeContainer(false);\r\n          }}\r\n        >X</button>\r\n        <p className=\"author-delete-text\">Are you sure you want to delete your profile? All your data will be removed permenantly </p>\r\n        <div className=\"submit-btn-container\">\r\n          <button\r\n            className=\"btn danger-btn\"\r\n            onClick={() => {\r\n              postDeleteUser();\r\n            }}>Yes, Delete My Profile\r\n          </button>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  const pageSuccess = () => {\r\n    return (\r\n      <div className=\"author-page-container\">\r\n        <div className={\r\n          `change-details-bg-container ${changeContainer && 'active'} `}\r\n        >\r\n\r\n        </div>\r\n        {renderUserInfo()}\r\n        <div className=\"header-container sub-header-container\">\r\n          <h2>{!currentPage || currentPage === 1 ? \"Your Stories\" : `Your Stories - Page ${currentPage}`}</h2>\r\n        </div>\r\n        { loading ?\r\n          <div className=\"loader loader-author\">\r\n            <Loader type=\"ThreeDots\" color=\"#ccd5ae\" height={80}\r\n              timeout={5000}\r\n            />\r\n          </div> :\r\n          <div className=\"stories-grid author-stories-grid\">\r\n            {renderAuthorStories()}\r\n          </div>\r\n        }\r\n        { loading ? null :\r\n          <Pagination\r\n            pager={pager}\r\n            currentPage={currentPage}\r\n            path='/your-profile/'\r\n            clearStore={clearUserStories} />\r\n        }\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n  const renderMessages = () => {\r\n    if (message) {\r\n      return (\r\n        <div className=\"message-container\">\r\n          <p>{message}</p>\r\n          <button onClick={() => clearMessage()}>Close</button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {renderMessages()}\r\n      {error ? displayError(error, clearError) : pageSuccess()}\r\n    </div>\r\n  )\r\n\r\n\r\n};\r\n\r\nconst mapStateToProps = ({ author, auth, userStories, pager, error, message }) => {\r\n  return { author, auth, pager, userStories, error, message }\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchAuthor, updateUsername, updateUserDesc, fetchUserStories, clearError, deleteUser, clearMessage, clearUserStories, dropNav })(Author);\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { updateStoryComments, deleteStoryComment, fetchStory, clearError, clearAuthor } from '../actions';\r\n\r\n\r\n\r\n\r\nconst StoryComments = ({ story, updateStoryComments, auth, deleteStoryComment, clearAuthor }) => {\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm();\r\n\r\n  const [commentPage, setCommentPage] = useState(1);\r\n  const [commentsArray, setCommentsArray] = useState(null);\r\n  const commentsToShow = 5;\r\n\r\n\r\n  const deleteComment = (storyId, commentId) => {\r\n    deleteStoryComment(storyId, commentId)\r\n  }\r\n\r\n  const onSubmit = async (data) => {\r\n    updateStoryComments(story._id, data.commentText);\r\n    reset();\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const createCommentPgArray = () => {\r\n      if (story.comments && !commentsArray) {\r\n        story.comments.reverse();\r\n        const commentsToSkip = commentsToShow * (commentPage - 1);\r\n        const arrayToRender = story.comments.slice(commentsToSkip, commentsToSkip + commentsToShow);\r\n        setCommentsArray(arrayToRender)\r\n      }\r\n      else if (story.comments) {\r\n        const commentsToSkip = commentsToShow * (commentPage - 1);\r\n        const arrayToRender = story.comments.slice(commentsToSkip, commentsToSkip + commentsToShow);\r\n        setCommentsArray(arrayToRender)\r\n      }\r\n    }\r\n    createCommentPgArray();\r\n\r\n    return function cleanup() {\r\n      setCommentsArray(null);\r\n    }\r\n  }, [commentPage, story])\r\n\r\n\r\n\r\n  const commentPager = () => {\r\n    if (story.comments) {\r\n      const numOfComments = story.comments.length\r\n      const numOfButtons = Math.ceil(story.comments.length / commentsToShow);\r\n      const currentPage = commentPage;\r\n      const hasNextPage = commentsToShow * commentPage < numOfComments;\r\n      const nextPage = commentPage + 1;\r\n      const hasPreviousPage = commentPage > 1;\r\n      const previousPage = commentPage - 1;\r\n      const lastPage = numOfButtons;\r\n\r\n      return (\r\n        <div className=\"paginate-container pg-comments\">\r\n          <ul>\r\n            {currentPage !== 1 && previousPage !== 1 ?\r\n              <li className='comment-li'>\r\n                <button\r\n                  onClick={() => setCommentPage(1)}>\r\n                  1</button>\r\n              </li>\r\n              : null\r\n            }\r\n            {hasPreviousPage ?\r\n              <li className='comment-li'>\r\n                <button\r\n                  onClick={() => setCommentPage(previousPage)}>\r\n                  {previousPage}</button>\r\n              </li>\r\n              : null\r\n            }\r\n            {\r\n              <li className='comment-li'>\r\n                <button\r\n                  onClick={() => setCommentPage(currentPage)}>\r\n                  {currentPage}</button>\r\n              </li>\r\n            }\r\n            {\r\n              hasNextPage ?\r\n                <li className='comment-li'>\r\n                  <button\r\n                    onClick={() => setCommentPage(nextPage)}>\r\n                    {nextPage}</button>\r\n                </li>\r\n                : null\r\n            }\r\n            {\r\n              lastPage !== currentPage &&\r\n                nextPage !== lastPage &&\r\n                lastPage !== 0 ?\r\n                <li className='comment-li'>\r\n                  <button\r\n                    onClick={() => setCommentPage(lastPage)}>\r\n                    {lastPage}</button>\r\n                </li>\r\n                : null\r\n            }\r\n          </ul>\r\n\r\n\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const renderStoryComments = () => {\r\n    if (commentsArray) {\r\n      if (commentsArray.length > 0) {\r\n        return commentsArray.map(comment => {\r\n          return (\r\n            <li key={comment.id} className=\"comment-container\">\r\n              <div className=\"comment-left\">\r\n                <p className=\"comment-text\">{comment.commentText}</p>\r\n                <p className=\"comment-user\">\r\n                  <Link\r\n                    to={`/author/${comment.userId}`}\r\n                    onClick={() => clearAuthor()}\r\n                  >{comment.username}</Link>\r\n                </p>\r\n              </div>\r\n              <div className=\"comment-right\">\r\n                {comment.userId === auth._id ?\r\n                  <button\r\n                    onClick={() => deleteComment(story._id, comment.id)}\r\n                    className=\"btn delete-btn\"\r\n                  >Delete</button> : null}\r\n              </div>\r\n\r\n            </li>\r\n          )\r\n        })\r\n      }\r\n      else if (!commentsArray || commentsArray.length === 0) {\r\n        return (\r\n          <div className=\"no-comments-container\">\r\n            <p>No comments yet!</p>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n    else {\r\n      return (\r\n        <div className=\"no-comments-container\">\r\n          <p>No comments yet!</p>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"comments-container\">\r\n      <div className=\"sub-header-container\">\r\n        <h2>Comments</h2>\r\n      </div>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <label>Add a Comment</label>\r\n        <div className=\"input-container\">\r\n          <input\r\n            name='commentText'\r\n            ref={register({ required: true, maxLength: 100 })}\r\n          />\r\n          <button type=\"submit\" className=\"btn green-btn\">Post</button>\r\n        </div>\r\n        {errors.commentText && errors.commentText.type === 'maxLength' && (\r\n          <p className=\"validation-warning\">Comments have a max length of 100 characters</p>\r\n        )}\r\n      </form>\r\n      <ul className=\"comments-list\">\r\n        {renderStoryComments()}\r\n      </ul>\r\n      {commentPager()}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ story, auth, error }) => {\r\n  return { story, auth, error }\r\n}\r\n\r\nexport default connect(mapStateToProps, { updateStoryComments, deleteStoryComment, fetchStory, clearError, clearAuthor })(StoryComments)\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from \"react-loader-spinner\";\r\nimport { fetchStory, fetchAuthor, deleteStory, clearError, clearMessage, dropNav } from '../actions';\r\nimport displayError from './displayError';\r\n\r\nimport StoryComments from './StoryComments';\r\n\r\nconst Story = ({ match, story, fetchStory, fetchAuthor, author, deleteStory, auth, history, clearError, error, message, clearMessage, dropNav }) => {\r\n\r\n  const [deletePrompt, setDeletePrompt] = useState(false)\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n\r\n  useEffect(() => {\r\n    if (!story) {\r\n      fetchStory(match.params.storyId);\r\n    }\r\n  }, [story, fetchStory, match.params.storyId]);\r\n\r\n  useEffect(() => {\r\n    if (story && !author) {\r\n      if (story._user) {\r\n        fetchAuthor(story._user);\r\n      }\r\n    }\r\n  }, [story, fetchAuthor, author])\r\n\r\n  useEffect(() => {\r\n    if (story && author) setLoading(false);\r\n  })\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      clearError()\r\n    }\r\n  }, [clearError])\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      clearMessage()\r\n    }\r\n  }, [clearMessage])\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      dropNav(false);\r\n    }\r\n  }, [dropNav])\r\n\r\n\r\n  const authorNameCheck = (author) => {\r\n    if (author.username) {\r\n      return author.username\r\n    }\r\n    return author.name\r\n  }\r\n\r\n  const onDelete = async (storyId) => {\r\n    await deleteStory(storyId);\r\n    history.push('/your-profile')\r\n  }\r\n\r\n\r\n  const renderDeletePrompt = () => {\r\n    if (deletePrompt) {\r\n      return (\r\n        <div className=\"message-container\">\r\n          <div className=\"message warning-message\">\r\n            <p>Are you sure you want to delete your story?</p>\r\n            <button\r\n              className=\"btn danger-btn\"\r\n              onClick={() => onDelete(story._id)}>\r\n              delete</button>\r\n            <button\r\n              className=\"btn change-esc-btn \r\n              cancel-delete-story-btn\"\r\n              onClick={() => setDeletePrompt(false)}\r\n            >X</button>\r\n          </div>\r\n\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const renderEditOrDonate = () => {\r\n    if (story && auth) {\r\n      if (story._user === auth._id) {\r\n        return (\r\n          <div className=\"story-edit-btns\">\r\n            <div className=\"story-btns-container\">\r\n              <Link className=\"btn green-btn\" to={`/edit-story/${story._id}`}>edit</Link>\r\n              <button\r\n                className=\"btn delete-btn\"\r\n                onClick={() => setDeletePrompt(true)}\r\n              >delete</button>\r\n            </div>\r\n            {renderDeletePrompt()}\r\n          </div>\r\n        )\r\n      }\r\n      else {\r\n        return (\r\n          <div className=\"story-donate-btns-container\">\r\n            <p>Like the story?</p>\r\n            <Link\r\n              to={`/payment/${author._id}`}\r\n              className=\"btn green-btn\"\r\n            >Donate\r\n            </Link>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const pageSuccess = () => {\r\n    if (loading) {\r\n      return (\r\n        <div className=\"loader loader-margin\">\r\n          <Loader type=\"ThreeDots\" color=\"#ccd5ae\" height={80}\r\n            timeout={5000}\r\n          />\r\n        </div>)\r\n    }\r\n    return (\r\n      <div>\r\n        {author && story ?\r\n          <div className=\"story-page-container\">\r\n            <div className=\"header-container\">\r\n              <h1>{story.title}</h1>\r\n            </div>\r\n            {renderEditOrDonate()}\r\n            <p>{story.creator}</p>\r\n            <p className=\"story-page-desc\">{story.description}</p>\r\n            <div className=\"author-container\">\r\n              <p>Written By:\r\n                   <Link to={`/author/${story._user}`}>\r\n                  <span> {authorNameCheck(author)}</span>\r\n                </Link>\r\n              </p>\r\n\r\n            </div>\r\n            <div className=\"story-page-grid\">\r\n              <div className=\"story-page-main-item grid-item\">\r\n                <p dangerouslySetInnerHTML={{ __html: `${story.sanitizedHtml}` }}\r\n                  className=\"story-page-story\">\r\n                </p>\r\n              </div>\r\n              <div className=\"story-page-sub-item grid-item\">\r\n\r\n                <StoryComments />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          : null}\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  const renderMessages = () => {\r\n    if (message) {\r\n      return (\r\n        <div className=\"message-container\">\r\n          <div className=\"message\">\r\n            <p>{message}</p>\r\n            <button\r\n              className=\"btn notification-btn\"\r\n              onClick={() => clearMessage()}>Close</button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {renderMessages()}\r\n      {error ? displayError(error, clearError) : pageSuccess()}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ story, author, auth, error, message }) => {\r\n  return { story, author, auth, error, message }\r\n}\r\nexport default connect(mapStateToProps, { fetchStory, fetchAuthor, deleteStory, clearError, clearMessage, dropNav })(Story)\r\n","import { connect } from 'react-redux';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from 'react-loader-spinner'\r\nimport { fetchAuthorBasic, fetchUserStories, clearError, clearUserStories, dropNav, clearPagination } from '../actions';\r\nimport Pagination from './Pagination';\r\nimport displayError from './displayError';\r\n\r\nconst Author = ({ author, match, fetchUserStories, userStories, fetchAuthorBasic, pager, error, clearError, clearUserStories, dropNav, clearPagination }) => {\r\n\r\n  const [currentPage, setCurrentPage] = useState(match.params.page);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(match.params.page || 1);\r\n\r\n  }, [setCurrentPage, match.params.page, currentPage])\r\n\r\n\r\n  useEffect(() => {\r\n    if (!author) {\r\n      fetchAuthorBasic(match.params.authorId);\r\n    }\r\n  }, [fetchAuthorBasic, match.params.authorId, author]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (userStories.length < 1) {\r\n      fetchUserStories(currentPage || 1, match.params.authorId);\r\n    }\r\n  }, [currentPage, match.params.authorId]);\r\n\r\n  // useEffect(() => {\r\n  //   if (userStories.length < 1) {\r\n  //     if (pager.currentPage !== currentPage) {\r\n  //       fetchUserStories(currentPage, match.params.authorId);\r\n  //     }\r\n  //     else {\r\n  //       fetchUserStories(1, match.params.authorId);\r\n  //     }\r\n  //   }\r\n  // }, [currentPage, pager.currentPage, fetchUserStories, match.params.authorId]);\r\n\r\n  useEffect(() => {\r\n    if (author) setLoading(false);\r\n  }, [loading, author])\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      clearUserStories();\r\n      clearPagination();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      dropNav(false);\r\n    }\r\n  }, [dropNav])\r\n\r\n\r\n  const authorName = () => {\r\n    if (author) {\r\n      if (author.username) {\r\n        return author.username\r\n      }\r\n      return author.name;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  const authorDescription = () => {\r\n    if (author) {\r\n      if (author.description) {\r\n        return author.description\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n  const renderAuthorInfo = () => {\r\n    if (!author) {\r\n      return null\r\n    }\r\n    else {\r\n      return (\r\n        <div className=\"author-data-container\">\r\n          <div className=\"header-container\">\r\n            <h1>{authorName()}</h1>\r\n          </div>\r\n          <p>{authorDescription()}</p>\r\n          <Link\r\n            to={`/payment/${author._id}`}\r\n            className=\"btn green-btn\"\r\n          >Donate</Link>\r\n          <div className=\"author-donations-container\">\r\n            {author.donationsRecieved ? <p>{authorName()} has received :  £{author.donationsRecieved} from other users!</p> : null}\r\n            {author.donationsSent ? <p>{authorName()} has dontated  £{author.donationsSent} to other authors!</p> : null}\r\n\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const renderAuthorStories = () => {\r\n    if (!author) {\r\n      return null\r\n    }\r\n    else if (!userStories) {\r\n      return null;\r\n    } else {\r\n      return userStories.map(story => {\r\n        return (\r\n          <div className={`story-item-container author-story-container`} key={story._id}>\r\n            <Link\r\n              to={`/story/${story._id}`}\r\n            >\r\n              <div className=\"story-item\">\r\n                <h3>{story.title}</h3>\r\n                <p className=\"story-page-author\">Posted by: {story.username}</p>\r\n                <p className=\"story-page-desc\">\r\n                  {story.description}\r\n                </p>\r\n              </div>\r\n            </Link>\r\n\r\n          </div >\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  const pageSuccess = () => {\r\n    if (loading) {\r\n      return (\r\n        <div className=\"loader loader-margin\">\r\n          <Loader type=\"ThreeDots\" color=\"#ccd5ae\" height={80}\r\n            timeout={5000}\r\n          />\r\n        </div>)\r\n    }\r\n    return (\r\n      <div className=\"author-page-container\">\r\n        {renderAuthorInfo()}\r\n        <div className=\"header-container sub-header-container\">\r\n          {/* <h2>{authorName()} 's stories</h2> */\r\n            <h2>{!currentPage || currentPage === 1 ? `${authorName()}'s Stories ` : `${authorName()}'s Stories - Page ${currentPage}`}</h2>}\r\n        </div>\r\n        <div className=\"stories-grid author-stories-grid\">\r\n          {renderAuthorStories()}\r\n        </div>\r\n        {loading ? null :\r\n          <Pagination pager={pager} currentPage={currentPage} path={`/author/${match.params.authorId}/`} clearStore={clearUserStories} />\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {error ? displayError(error, clearError) : pageSuccess()}\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = ({ author, auth, userStories, pager, error }) => {\r\n  return { author, auth, userStories, pager, error }\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchAuthorBasic, fetchUserStories, clearError, clearUserStories, dropNav, clearPagination })(Author);\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport { editStory, fetchStory, clearError, dropNav } from '../actions';\r\nimport displayError from './displayError';\r\n\r\n\r\nconst EditStory = ({ story, editStory, history, match, error, dropNav }) => {\r\n\r\n  useEffect(() => {\r\n    if (!story) {\r\n      fetchStory(match.params.storyId);\r\n    }\r\n\r\n  }, [story, match.params.storyId]);\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      dropNav(false);\r\n    }\r\n  }, [dropNav]);\r\n\r\n  const preLoadForm = {\r\n    title: story.title,\r\n    description: story.description,\r\n    content: story.content\r\n  }\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    defaultValues: preLoadForm\r\n  });\r\n\r\n\r\n\r\n  const onSubmit = (data) => {\r\n    const storyId = match.params.storyId;\r\n\r\n\r\n    const title = data.title;\r\n    const description = data.description;\r\n    const content = data.content;\r\n    const postBody = { title, description, content, storyId };\r\n    editStory(postBody, history);\r\n  }\r\n\r\n\r\n\r\n  const forms = () => {\r\n    return (\r\n      <div className=\"forms-container\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"header-container\">\r\n            <h1>Edit Your Story!</h1>\r\n          </div>\r\n          <div className=\"add-story-input-title add-story-item-container\">\r\n            <label> Edit Title</label>\r\n            <input\r\n              name=\"title\"\r\n              ref={register({ required: true, maxLength: 100 })}\r\n            />\r\n            {errors.title && errors.title.type === 'required' && (\r\n              <p>This is required</p>\r\n            )}\r\n            {errors.title && errors.title.type === 'maxLength' && (\r\n              <p>Title should not be longer than 100 characters</p>\r\n            )}\r\n          </div>\r\n          <div className=\"add-story-input-description add-story-item-container\">\r\n            <label> Edit description</label>\r\n            <input\r\n              name=\"description\"\r\n              ref={register({ required: true, maxLength: 200 })}\r\n\r\n            />\r\n            {errors.description && errors.description.type === 'required' && (\r\n              <p>Required</p>\r\n            )}\r\n            {errors.description && errors.description.type === 'maxLength' && (\r\n              <p>Description should not be longer than 250 characters</p>\r\n            )}\r\n          </div>\r\n          <div className=\"add-story-input-content add-story-item-container\">\r\n            <label>Edit Story</label>\r\n            <textarea\r\n              name=\"content\"\r\n              ref={register({ required: true, minLength: 100, maxLength: 10000 })}\r\n            />\r\n            {errors.content && errors.content.type === 'required' && (\r\n              <p>Required</p>\r\n            )}\r\n            {errors.content && errors.content.type === 'minLength' && (\r\n              <p>A story must have at least 100 characters</p>)}\r\n            {errors.content && errors.content.type === 'maxLength' && (\r\n              <p>The maximum length for a story is 10,000 characters</p>\r\n            )}\r\n          </div>\r\n          <button className=\"add-username-btn btn\" type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  const pageSuccess = () => {\r\n    return (\r\n      <div className=\"add-story-container\">\r\n        {forms()}\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {error ? displayError(error, clearError) : pageSuccess()}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ auth, story, error }) => {\r\n  return { auth, story, error }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { editStory, clearError, dropNav })(EditStory);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport openSocket from 'socket.io-client';\r\nimport Loader from 'react-loader-spinner'\r\n\r\nimport displayError from './displayError';\r\nimport Pagination from './Pagination';\r\nimport { postSnippet, fetchAllSnippets, addSnippet, deleteSnippet, clearError, clearSnippets, dropNav, clearPagination } from '../actions';\r\n\r\n\r\n\r\nconst AllSnippets = ({ postSnippet, fetchAllSnippets, snippets, addSnippet, auth, deleteSnippet, pager, match, error, clearError, clearSnippets, history, dropNav, clearPagination }) => {\r\n\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm();\r\n  const [currentPage, setCurrentPage] = useState(match.params.page);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(match.params.page || 1);\r\n\r\n  }, [setCurrentPage, match.params.page, currentPage])\r\n\r\n\r\n  useEffect(() => {\r\n    const socket = openSocket(process.env.REACT_APP_STRIPE_PATH);\r\n    socket.on('snippets', data => {\r\n      if (data.action === 'create') {\r\n        addSnippet(data.snippet);\r\n      }\r\n      if (data.action === 'delete') {\r\n        fetchAllSnippets();\r\n      }\r\n    })\r\n\r\n    return () => {\r\n      socket.off('snippets');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (snippets.length < 1) {\r\n      fetchAllSnippets(currentPage || 1);\r\n    } else {\r\n      fetchAllSnippets(1)\r\n    }\r\n  }, [currentPage])\r\n\r\n\r\n  useEffect(() => {\r\n    if (snippets.length > 0) setLoading(false);\r\n    if (snippets.length < 1) setLoading(true);\r\n  }, [snippets]);\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      dropNav(false);\r\n    }\r\n  }, [dropNav]);\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      clearPagination();\r\n    }\r\n  }, [])\r\n\r\n  const onSubmit = (data) => {\r\n    postSnippet(data.snippetText);\r\n    reset();\r\n    clearSnippets();\r\n    history.push('/snippets/1')\r\n  }\r\n\r\n  const rendersnippetInput = () => {\r\n    return (\r\n      <form className=\"snippet-form\" onSubmit={handleSubmit(onSubmit)}>\r\n        <label>Post a snippet</label>\r\n        <div className=\"input-container\">\r\n          <input\r\n            name='snippetText'\r\n            ref={register({ required: true, maxLength: 100 })}\r\n            className=\"snippets-home-input\"\r\n          />\r\n          <div className=\"snippet-btn-container\">\r\n            <button className=\"btn green-btn\" type='submit'>Post</button>\r\n          </div>\r\n        </div>\r\n        {errors.snippetText && errors.snippetText.type === 'maxLength' && (\r\n          <p className=\"validation-warning\">Snippets have a max length of 100 characters</p>\r\n        )}\r\n\r\n      </form>\r\n    )\r\n  }\r\n\r\n  //renders snippets component\r\n  //When user adds a snippet, we slice the array to ensure it stays same length\r\n  //ensure it matches the limits set in back end\r\n  const renderSnippets = () => {\r\n    let arrayToMap;\r\n    if (snippets.length > 10) {\r\n      arrayToMap = snippets.slice(0, 10);\r\n    } else {\r\n      arrayToMap = snippets;\r\n    }\r\n    return arrayToMap.map(snippet => {\r\n      return (\r\n        <div key={snippet._id} className=\"snippet-container\">\r\n          <div className=\"snippet-left\">\r\n            <p className=\"snippet-text\">{snippet.text}\r\n            </p>\r\n            <p className=\"snippet-username\">\r\n              <Link to={`/author/${snippet._user}`}>{snippet.username}</Link>\r\n            </p>\r\n          </div>\r\n          <div className=\"snippet-right\">\r\n            {snippet._user === auth?._id ?\r\n              <button className=\"btn delete-btn\" onClick={() => deleteSnippet(snippet._id)}>Delete</button> : null}\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n\r\n  const pageSuccess = () => {\r\n    return (\r\n      <div className=\"all-snippets-container snippets-container\">\r\n        <div className=\"header-container snippets-header\">\r\n          <h1>All Snippets</h1>\r\n        </div>\r\n        <p className=\"snippets-sub-header\">Let other writers know what you're up to, add a short snippet to the live feed.</p>\r\n        { rendersnippetInput()}\r\n        { loading ?\r\n          <div className=\"loader loader-margin\">\r\n            <Loader type=\"ThreeDots\" color=\"#ccd5ae\" height={80}\r\n              timeout={100000}\r\n            />\r\n          </div> :\r\n          <div className=\"snippets-list\">\r\n            {renderSnippets()}\r\n          </div>\r\n        }\r\n        { loading ? null :\r\n          <Pagination pager={pager} currentPage={currentPage} path='/snippets/' clearStore={clearSnippets} />\r\n        }\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {error ? displayError(error, clearError) : pageSuccess()}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ snippets, auth, pager, error }) => {\r\n  return { snippets, auth, pager, error };\r\n}\r\n\r\nexport default connect(mapStateToProps, { postSnippet, fetchAllSnippets, addSnippet, deleteSnippet, displayError, clearError, clearSnippets, dropNav, clearPagination })(AllSnippets);\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { clearError, fetchAuthorBasic, postPayment, dropNav } from '../actions';\r\n\r\n\r\n\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PK);\r\n\r\n\r\n\r\n\r\nconst ProductDisplay = ({ handleClick, amount, setAmount }) => (\r\n\r\n\r\n  <div className=\"payment-before\">\r\n    <div className=\"header-container\">\r\n      <h1>Support the author with a donation!</h1>\r\n    </div>\r\n    <label>Select an Amount</label>\r\n    <select\r\n      value={amount}\r\n      onChange={(e) => setAmount(e.target.value)}\r\n    >\r\n      <option value='1'>£1</option>\r\n      <option value='2'>£2</option>\r\n      <option value='3'>£3</option>\r\n      <option value='4'>£4</option>\r\n      <option value='5'>£5</option>\r\n    </select>\r\n    <button\r\n      type=\"button\"\r\n      id=\"checkout-button\"\r\n      role=\"link\"\r\n      onClick={handleClick}\r\n      className=\"btn green-btn\">\r\n      Checkout\r\n      </button>\r\n  </div>\r\n\r\n\r\n);\r\n\r\n\r\nconst Message = ({ message }) => (\r\n\r\n  <section className=\"payment-after\">\r\n    <p>{message}</p>\r\n    <Link to=\"/\">Back to HomePage</Link>\r\n  </section>\r\n\r\n)\r\n\r\nconst Payment = ({ author, match, fetchAuthorBasic, auth, postPayment, clearError, dropNav }) => {\r\n\r\n\r\n\r\n  const [amount, setAmount] = useState(1);\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      clearError()\r\n    }\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      dropNav(false);\r\n    }\r\n  }, [dropNav]);\r\n\r\n  useEffect(() => {\r\n    const authorNameCheck = () => {\r\n      if (author) {\r\n        if (author.username) {\r\n          return author.username\r\n        }\r\n        return author.name\r\n      } else {\r\n        return '';\r\n      }\r\n    }\r\n\r\n    const authorName = authorNameCheck();\r\n    // Check to see if this is a redirect back from Checkout\r\n    const query = new URLSearchParams(window.location.search);\r\n    const amountPaid = query.get('amount') / 100;\r\n    const paymentId = query.get('paymentId');\r\n\r\n    if (query.get(\"success\")) {\r\n      setMessage(author ? `Your donation of £${amountPaid} to ${authorName} was successful 🙂` : 'LOADING');\r\n\r\n\r\n      if (author && auth) {\r\n        const authorId = author._id;\r\n        const userId = auth._id;\r\n        postPayment(amountPaid, authorId, userId, paymentId);\r\n      }\r\n    }\r\n    if (query.get(\"canceled\")) {\r\n      setMessage(\r\n        \"Payment Canceled.\"\r\n      );\r\n    }\r\n    if (!author && !query.get(\"canceled\")) {\r\n      if (match.params.authorId) {\r\n        fetchAuthorBasic(match.params.authorId);\r\n      } else {\r\n        const authorId = query.get('authorId');\r\n        fetchAuthorBasic(authorId);\r\n      }\r\n    }\r\n  }, [author]);\r\n\r\n\r\n\r\n  const handleSubmit = async (event) => {\r\n    const stripe = await stripePromise;\r\n    const authorId = author._id;\r\n    const response = await axios.post('/create-checkout-session', {\r\n      amount,\r\n      authorId\r\n    })\r\n\r\n\r\n    const session = await response.data;\r\n    // When the customer clicks on the button, redirect them to Checkout.\r\n    const result = await stripe.redirectToCheckout({\r\n      sessionId: session.id,\r\n    });\r\n    if (result.error) {\r\n      // If `redirectToCheckout` fails due to a browser or network\r\n      // error, display the localized error message to your customer\r\n      // using `result.error.message`.\r\n    }\r\n  }\r\n\r\n\r\n  return message ? (\r\n    <Message message={message} />\r\n  ) : (\r\n    <ProductDisplay handleClick={handleSubmit} setAmount={setAmount} amount={amount} />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ author, auth }) => {\r\n  return { author, auth }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchAuthorBasic, postPayment, clearError, dropNav })(Payment);","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div className=\"footer-container\">\r\n        <a href='https://github.com/64-bit-david'>Created By David Williamson</a>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import { BrowserRouter, Route } from 'react-router-dom';\r\n\r\n\r\nimport Header from './Header';\r\nimport ScrollToTop from './ScrollToTop';\r\nimport Stories from './Stories';\r\nimport AddStory from './AddStory';\r\nimport UserProfile from './UserProfile';\r\nimport Story from './Story';\r\nimport Author from './Author';\r\nimport EditStory from './EditStory';\r\nimport AllSnippets from './AllSnippets';\r\nimport Payment from './Payment';\r\nimport Footer from './Footer';\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <div class=\"body-container\">\r\n      <BrowserRouter>\r\n        <ScrollToTop />\r\n\r\n        <Header />\r\n        <main class=\"main\">\r\n          <Route path=\"/\" exact component={Stories} />\r\n          <Route path=\"/stories/:page\" component={Stories} />\r\n          <Route path=\"/add-story\" component={AddStory} />\r\n          <Route path=\"/edit-story/:storyId\" component={EditStory} />\r\n          <Route path=\"/story/:storyId\" component={Story} />\r\n          <Route path=\"/author/:authorId\" exact component={Author} />\r\n          <Route path=\"/author/:authorId/:page\" component={Author} />\r\n          <Route path=\"/your-profile/:page\" exact component={UserProfile} />\r\n          <Route path=\"/your-profile\" exact component={UserProfile} />\r\n          <Route path=\"/snippets/:page\" exact component={AllSnippets} />\r\n          <Route path=\"/payment/\" exact component={Payment} />\r\n          <Route path=\"/payment/:authorId\" component={Payment} />\r\n        </main>\r\n        <Footer />\r\n      </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import { CLEAR_STORIES, FETCH_STORIES, POST_STORY } from '../actions/types';\r\n\r\n\r\n//Adding new story will break pagination, so remove last item in array to keep it constant at 7? stories.\r\nconst addStory = (state, action) => {\r\n  const newStoryArray = [action.payload, ...state];\r\n  newStoryArray.pop();\r\n  return newStoryArray\r\n}\r\n\r\nexport default function func(state = [], action) {\r\n  switch (action.type) {\r\n    case FETCH_STORIES:\r\n      return action.payload\r\n    case POST_STORY:\r\n      return addStory(state, action);\r\n    case CLEAR_STORIES:\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n}","import { FETCH_STORY, UPDATE_STORY_COMMENTS, EDIT_STORY, CLEAN_UP, FETCH_STORY_REQUEST, DELETE_COMMENT, CLEAR_STORY } from '../actions/types';\r\n\r\n\r\nconst updateStoryComments = (state, action) => {\r\n  const updatedState = { ...state };\r\n  if (!updatedState.comments) {\r\n    updatedState.comments = [action.payload];\r\n  } else {\r\n    updatedState.comments.unshift(action.payload);\r\n  }\r\n  return updatedState;\r\n}\r\n\r\nconst deleteStoryComment = (state, action) => {\r\n  const updatedState = { ...state };\r\n  updatedState.comments = updatedState.comments.filter(comment => comment.id !== action.payload);\r\n  return updatedState;\r\n\r\n}\r\n\r\nexport default function func(state = null, action) {\r\n  switch (action.type) {\r\n    case FETCH_STORY_REQUEST:\r\n      return action.payload;\r\n    case FETCH_STORY:\r\n      return action.payload;\r\n    case EDIT_STORY:\r\n      return action.payload;\r\n    case UPDATE_STORY_COMMENTS:\r\n      return updateStoryComments(state, action);\r\n    case DELETE_COMMENT:\r\n      return deleteStoryComment(state, action)\r\n    case CLEAN_UP:\r\n      return {}\r\n    case CLEAR_STORY:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport authorReducer from './authorReducer';\r\nimport authReducer from './authReducer';\r\nimport storiesReducer from './storiesReducer';\r\nimport storyReducer from './storyReducer';\r\nimport snippetReducer from './snippetsReducer';\r\nimport paginationReducer from './paginationReducer';\r\nimport userStoriesReducer from './userStoriesReducer';\r\nimport errorReducer from './errorReducer';\r\nimport messageReducer from './messageReducer';\r\nimport loadingReducer from './loadingReducer';\r\nimport navDropReducer from './navDropReducer';\r\n\r\n\r\nexport default combineReducers({\r\n  stories: storiesReducer,\r\n  auth: authReducer,\r\n  story: storyReducer,\r\n  author: authorReducer,\r\n  snippets: snippetReducer,\r\n  pager: paginationReducer,\r\n  userStories: userStoriesReducer,\r\n  error: errorReducer,\r\n  message: messageReducer,\r\n  loading: loadingReducer,\r\n  navStatus: navDropReducer,\r\n})","import { DELETE_USER, FETCH_USER, PAYMENT_SUCCESS, UPDATE_USER, UPDATING_DESCRIPTION, UPDATING_USERNAME } from \"../actions/types\";\r\n\r\n\r\nexport default function func(state = {}, action) {\r\n  switch (action.type) {\r\n    case FETCH_USER:\r\n      return action.payload || false;\r\n    case UPDATE_USER:\r\n      return action.payload;\r\n    case UPDATING_USERNAME:\r\n      return { ...state, ['username']: action.payload };\r\n    case UPDATING_DESCRIPTION:\r\n      return { ...state, ['description']: action.payload };\r\n    case PAYMENT_SUCCESS:\r\n      return action.payload;\r\n    case DELETE_USER:\r\n      console.log('deletion reached auth reducer')\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n}","import { FETCH_AUTHOR, FETCH_AUTHOR_BASIC, CLEAN_UP, CLEAR_AUTHOR } from \"../actions/types\";\r\n\r\n\r\n\r\n\r\nexport default function func(state = null, action) {\r\n  switch (action.type) {\r\n    case FETCH_AUTHOR:\r\n      return action.payload;\r\n    case FETCH_AUTHOR_BASIC:\r\n      return action.payload;\r\n    case CLEAN_UP:\r\n      return null;\r\n    case CLEAR_AUTHOR:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n}","import { DELETE_SNIPPET, FETCH_SNIPPETS, POST_SNIPPET, CLEAR_SNIPPETS } from \"../actions/types\";\r\n\r\n\r\nexport default function func(state = [], action) {\r\n  switch (action.type) {\r\n    case FETCH_SNIPPETS:\r\n      return action.payload;\r\n    case POST_SNIPPET:\r\n      return [action.payload, ...state];\r\n    case DELETE_SNIPPET:\r\n      return state.filter(snippet => snippet._id !== action.payload);\r\n    case CLEAR_SNIPPETS:\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n}","import { CLEAR_PAGINATION, PAGINATE } from \"../actions/types\";\r\n\r\n\r\nexport default function func(state = {}, action) {\r\n  switch (action.type) {\r\n    case PAGINATE:\r\n      return action.payload;\r\n    case CLEAR_PAGINATION:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}","import { CLEAN_UP, CLEAR_STORIES, FETCH_USER_STORIES, CLEAR_USER_STORIES } from '../actions/types';\r\n\r\nexport default function func(state = [], action) {\r\n  switch (action.type) {\r\n    case FETCH_USER_STORIES:\r\n      return action.payload\r\n    case CLEAN_UP:\r\n      return [];\r\n    case CLEAR_STORIES:\r\n      return [];\r\n    case CLEAR_USER_STORIES:\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n}","import { ADD_ERROR, CLEAR_ERROR } from '../actions/types';\r\n\r\nexport default function func(state = null, action) {\r\n  switch (action.type) {\r\n    case ADD_ERROR:\r\n      return action.payload;\r\n    case CLEAR_ERROR:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n}","// keep track of successful operations (ie deleting stories);\r\n\r\nimport { ADD_MESSAGE, CLEAR_MESSAGE, DELETE_USER } from \"../actions/types\";\r\n\r\nexport default function func(state = null, action) {\r\n  switch (action.type) {\r\n    case DELETE_USER:\r\n      return action.payload;\r\n    case ADD_MESSAGE:\r\n      return action.payload;\r\n    case CLEAR_MESSAGE:\r\n      return null;\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { CLEAN_UP, LOADING } from \"../actions/types\";\r\n\r\n\r\nexport default function func(state = null, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return action.payload;\r\n    case CLEAN_UP:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n}","import { UNDROP_NAV, DROP_NAV } from \"../actions/types\";\r\n\r\nexport default function func(state = false, action) {\r\n  switch (action.type) {\r\n    case DROP_NAV:\r\n      return true;\r\n    case UNDROP_NAV:\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n}","import './styles/main.css';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}