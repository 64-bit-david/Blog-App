{"version":3,"sources":["actions/types.js","actions/index.js","components/Header.js","components/ScrollToTop.js","components/displayError.js","components/Snippets.js","components/Pagination.js","components/Stories.js","components/AddStory.js","components/UserProfile.js","components/StoryComments.js","components/Story.js","components/Author.js","components/EditStory.js","components/AllSnippets.js","components/Payment.js","components/Footer.js","components/App.js","reducers/storiesReducer.js","reducers/storyReducer.js","reducers/index.js","reducers/authReducer.js","reducers/authorReducer.js","reducers/snippetsReducer.js","reducers/paginationReducer.js","reducers/userStoriesReducer.js","reducers/errorReducer.js","reducers/messageReducer.js","reducers/loadingReducer.js","index.js"],"names":["FETCH_STORIES","FETCH_USER","POST_STORY","UPDATE_USER","UPDATING_USERNAME","UPDATING_DESCRIPTION","FETCH_STORY","FETCH_STORY_REQUEST","FETCH_AUTHOR","FETCH_AUTHOR_BASIC","UPDATE_STORY_COMMENTS","POST_SNIPPET","FETCH_SNIPPETS","PAGINATE","DELETE_SNIPPET","EDIT_STORY","CLEAN_UP","FETCH_USER_STORIES","ADD_ERROR","DELETE_USER","CLEAR_MESSAGE","ADD_MESSAGE","DELETE_COMMENT","PAYMENT_SUCCESS","LOADING","CLEAR_STORIES","CLEAR_ERROR","CLEAR_AUTHOR","CLEAR_STORY","fetchUserStories","page","userId","dispatch","a","axios","get","res","type","payload","data","stories","pager","fetchUser","console","log","fetchStory","storyId","story","comments","reverse","error","statusCode","response","status","message","statusText","fetchAuthor","fetchAuthorBasic","postSnippet","snippetText","post","deleteSnippet","snippetId","delete","addSnippet","snippet","clearMessage","clearError","clearAuthor","connect","auth","logout","useState","dropDown","setDropDown","useEffect","className","to","onClick","href","google-btn-link","class","viewBox","xmlns","d","id","fill","ScrollToTop","pathname","useLocation","window","scrollTo","cleanUp","snippets","fetchSnippet","useForm","register","handleSubmit","errors","reset","length","socket","openSocket","process","on","action","off","onSubmit","name","ref","required","maxLength","slice","map","text","_user","username","_id","clearStories","currentPage","path","previousPage","hasPreviousPage","hasNextPage","nextPage","lastPage","loading","storeStory","fetchStories","clearStory","match","params","setCurrentPage","setLoading","renderGrid","emptyObj","copyStories","splice","storiesArrayWithFeed","index","storeStoryId","title","description","renderMessages","displayError","color","height","timeout","postStory","history","content","creator","msg","push","howFormat","setHowFormat","renderHowToFormat","minLength","author","userStories","updateUsername","put","user","updateUserDesc","deleteUser","preLoadForm","preLoadForm2","defaultValues","register2","errors2","handleSubmit2","showChangeUsername","setShowChangeUserName","showChangeDesc","setShowChangeDesc","showDeleteUser","setShowDeleteUser","changeContainer","setChangeContainer","postUsernameChange","postDescChange","renderUserInfo","donationsRecieved","donationsSent","renderChangeUsername","renderChangeDesc","renderDeleteUser","updateStoryComments","commentInput","commentText","comment","deleteStoryComment","commentId","commentPage","setCommentPage","commentsArray","setCommentsArray","commentsToSkip","arrayToRender","createCommentPgArray","numOfComments","numOfButtons","Math","ceil","commentPager","deleteStory","deletePrompt","setDeletePrompt","authorNameCheck","onDelete","renderDeletePrompt","renderEditOrDonate","dangerouslySetInnerHTML","__html","sanitizedHtml","authorId","authorName","editStory","fetchAllSnippets","stripePromise","loadStripe","ProductDisplay","handleClick","amount","setAmount","value","onChange","e","target","role","Message","postPayment","paymentId","setMessage","query","URLSearchParams","location","search","amountPaid","event","stripe","session","redirectToCheckout","sessionId","Footer","App","exact","component","Stories","AddStory","EditStory","Story","Author","UserProfile","AllSnippets","Payment","addStory","state","newStoryArray","pop","updatedState","unshift","filter","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.83483af8.chunk.js","sourcesContent":["export const FETCH_STORIES = 'FETCH_STORIES';\r\nexport const FETCH_USER = 'FETCH_USER';\r\nexport const LOG_OUT = 'LOG_OUT';\r\nexport const POST_STORY = 'POST_STORY';\r\nexport const UPDATE_USER = 'UPDATE_USER';\r\nexport const UPDATING_USERNAME = 'UPDATING_USERNAME';\r\nexport const UPDATING_DESCRIPTION = 'UPDATING_DESCRIPTION';\r\nexport const SELECT_STORY = 'SELECT_STORY';\r\nexport const FETCH_STORY = 'FETCH_STORY';\r\nexport const FETCH_STORY_REQUEST = 'FETCH_STORY_REQUEST';\r\nexport const DELETE_STORY = 'DELETE_STORY';\r\nexport const FETCH_AUTHOR = 'FETCH_AUTHOR';\r\nexport const FETCH_AUTHOR_BASIC = 'FETCH_AUTHOR_BASIC';\r\nexport const UPDATE_STORY_COMMENTS = 'UPDATE_STORY_COMMENTS';\r\nexport const POST_SNIPPET = 'POST_SNIPPET';\r\nexport const FETCH_SNIPPETS = 'FETCH_SNIPPETS';\r\nexport const PAGINATE = 'PAGINATE';\r\nexport const DELETE_SNIPPET = 'DELETE_SNIPPET';\r\nexport const EDIT_STORY = 'EDIT_STORY';\r\nexport const CLEAN_UP = 'CLEAN_UP';\r\nexport const FETCH_USER_STORIES = 'FETCH_USER_STORIES';\r\nexport const ADD_ERROR = 'ADD_ERROR';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\r\nexport const PAYMENT_SUCCESS = 'PAYMENT_SUCCESS';\r\n\r\nexport const INIT_FETCH_STORIES = 'INIT_FETCH_STORIES';\r\nexport const LOADING = 'LOADING';\r\n\r\nexport const CLEAR_STORIES = \"CLEAR_STORIES\";\r\nexport const CLEAR_ERROR = 'CLEAR_ERROR';\r\nexport const CLEAR_AUTHOR = 'CLEAR_AUTHOR';\r\nexport const CLEAR_STORY = 'CLEAR_STORY';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios from 'axios';\r\nimport { FETCH_STORIES, FETCH_USER_STORIES, FETCH_USER, POST_STORY, EDIT_STORY, UPDATE_USER, UPDATING_USERNAME, UPDATING_DESCRIPTION, FETCH_STORY, FETCH_AUTHOR, FETCH_AUTHOR_BASIC, UPDATE_STORY_COMMENTS, POST_SNIPPET, FETCH_SNIPPETS, DELETE_SNIPPET, PAGINATE, DELETE_STORY, CLEAN_UP, FETCH_STORY_REQUEST, ADD_ERROR, DELETE_USER, CLEAR_MESSAGE, ADD_MESSAGE, DELETE_COMMENT, PAYMENT_SUCCESS, INIT_FETCH_STORIES, LOADING, CLEAN_UP_MESSAGE, CLEAR_STORIES, CLEAR_ERROR, CLEAR_AUTHOR, CLEAR_STORY } from './types';\r\n\r\n\r\nexport const fetchStories = (page) => async (dispatch) => {\r\n  const res = await axios.get('/api/stories/?page=' + page);\r\n  dispatch({ type: FETCH_STORIES, payload: res.data.stories });\r\n  dispatch({ type: PAGINATE, payload: res.data.pager })\r\n}\r\n\r\nexport const fetchUserStories = (page, userId) => async (dispatch) => {\r\n  const res = await axios.get(`/api/account/stories/${userId}/?page=${page}`);\r\n  dispatch({ type: FETCH_USER_STORIES, payload: res.data.stories });\r\n  dispatch({ type: PAGINATE, payload: res.data.pager });\r\n\r\n}\r\n\r\n//For getting current logged in user\r\nexport const fetchUser = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get('/api/current_user');\r\n    dispatch({ type: FETCH_USER, payload: res.data });\r\n  }\r\n  catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const logout = () => async dispatch => {\r\n  await axios.get('/api/logout');\r\n}\r\n\r\nexport const postStory = ({ title, description, content, creator }, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.post('/api/create-story', {\r\n      title, description, content, creator\r\n    })\r\n    dispatch({ type: POST_STORY, payload: res.data.story });\r\n    dispatch({ type: ADD_MESSAGE, payload: res.data.msg })\r\n    history.push('/')\r\n  } catch (err) {\r\n    console.log(err);\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error })\r\n  }\r\n}\r\n\r\nexport const editStory = ({ storyId, title, description, content }, history) =>\r\n  async dispatch => {\r\n    try {\r\n      const res = await axios.put('/api/stories/' + storyId, {\r\n        title, description, content,\r\n      });\r\n      dispatch({ type: EDIT_STORY, payload: res.data.story });\r\n      dispatch({ type: ADD_MESSAGE, payload: res.data.msg })\r\n      history.push('/story/' + storyId);\r\n    } catch (err) {\r\n      console.log(err)\r\n      const error = {\r\n        statusCode: err.response.status,\r\n        message: err.response.data.error,\r\n        statusText: err.response.data.statusText\r\n      }\r\n      dispatch({ type: ADD_ERROR, payload: error })\r\n    }\r\n  }\r\n\r\nexport const deleteStory = (storyId) => async dispatch => {\r\n  try {\r\n    await axios.delete(`/api/stories/${storyId}`);\r\n    dispatch({ type: DELETE_STORY, payload: storyId });\r\n    dispatch({ type: ADD_MESSAGE, payload: 'Story Deleted' })\r\n  } catch (err) {\r\n    console.log(err)\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error })\r\n  }\r\n}\r\n\r\nexport const updateUsername = (username) => async dispatch => {\r\n  dispatch({ type: UPDATING_USERNAME, payload: 'Updating...' })\r\n  try {\r\n    const res = await axios.put('/account/update-username', {\r\n      username\r\n    });\r\n    dispatch({ type: UPDATE_USER, payload: res.data.user })\r\n  } catch (err) {\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error })\r\n  }\r\n}\r\n\r\nexport const updateUserDesc = (description) => async dispatch => {\r\n  dispatch({ type: UPDATING_DESCRIPTION, payload: 'Updating...' })\r\n  try {\r\n    const res = await axios.put('/account/update-desc', {\r\n      description\r\n    })\r\n    dispatch({ type: UPDATE_USER, payload: res.data.user });\r\n  } catch (err) {\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error })\r\n  }\r\n}\r\n\r\nexport const fetchStory = (storyId) => async dispatch => {\r\n  try {\r\n    let res = await axios.get(`/api/stories/${storyId}`);\r\n    if (res.data.story.comments > 0) {\r\n      res.data.story.comments = res.data.story.comments.reverse();\r\n    }\r\n    dispatch({ type: FETCH_STORY, payload: res.data.story })\r\n  } catch (err) {\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    console.log(error)\r\n    dispatch({ type: ADD_ERROR, payload: error })\r\n  }\r\n}\r\n\r\n\r\n//for getting author (with stories populated )of a post/story\r\nexport const fetchAuthor = (userId) => async dispatch => {\r\n  const res = await axios.get(`/account/${userId}`);\r\n\r\n  dispatch({ type: FETCH_AUTHOR, payload: res.data });\r\n}\r\n\r\nexport const fetchAuthorBasic = (userId) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/account/basic/${userId}`);\r\n    dispatch({ type: FETCH_AUTHOR_BASIC, payload: res.data });\r\n  } catch (err) {\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error });\r\n  }\r\n}\r\nexport const updateStoryComments = (storyId, commentInput) => async dispatch => {\r\n  try {\r\n    const res = await axios.post(`/api/stories/comments/${storyId}`, {\r\n      commentText: commentInput\r\n    });\r\n\r\n    dispatch({ type: UPDATE_STORY_COMMENTS, payload: res.data.comment });\r\n  } catch (err) {\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error });\r\n\r\n  }\r\n}\r\n\r\nexport const deleteStoryComment = (storyId, commentId) => async dispatch => {\r\n  try {\r\n    await axios.delete(`/api/stories/comments/${storyId}/${commentId}`)\r\n    dispatch({ type: DELETE_COMMENT, payload: commentId });\r\n  } catch (err) {\r\n    console.log(err);\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error });\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const fetchSnippet = () => async dispatch => {\r\n  const res = await axios.get('/api/snippets');\r\n  dispatch({ type: FETCH_SNIPPETS, payload: res.data.snippets })\r\n}\r\n\r\n\r\n\r\nexport const fetchAllSnippets = (page) => async dispatch => {\r\n  const res = await axios.get('/api/all-snippets/?page=' + page);\r\n  dispatch({ type: FETCH_SNIPPETS, payload: res.data.snippets });\r\n  dispatch({ type: PAGINATE, payload: res.data.pager });\r\n}\r\n\r\n\r\n\r\nexport const postSnippet = (snippetText) => async dispatch => {\r\n  try {\r\n    await axios.post('/api/post-snippet', {\r\n      snippetText\r\n    });\r\n  } catch (err) {\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error })\r\n  }\r\n  //websocket updates state so below not needed, causes duplication for user\r\n  //server responds with full user obj, but we need user to only hold the id so overide\r\n  // res.data.response._user = res.data.response._user._id;\r\n  // dispatch({ type: POST_SNIPPET, payload: res.data.response });\r\n};\r\n\r\n\r\nexport const deleteSnippet = (snippetId) => async dispatch => {\r\n  await axios.delete('/api/snippet/' + snippetId);\r\n  dispatch({ type: DELETE_SNIPPET, payload: snippetId });\r\n}\r\n\r\n\r\n\r\nexport const addSnippet = (snippet) => {\r\n  return { type: POST_SNIPPET, payload: snippet }\r\n}\r\n\r\n\r\nexport const postPayment = (amount, authorId, userId, paymentId) => async dispatch => {\r\n  try {\r\n    const res = await axios.post('/post-payment-data', {\r\n      amount,\r\n      authorId,\r\n      userId,\r\n      paymentId\r\n    });\r\n    dispatch({ type: PAYMENT_SUCCESS, payload: res.data.user })\r\n  } catch (err) {\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error })\r\n  }\r\n}\r\n\r\nexport const deleteUser = (userId, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.delete('/account/' + userId);\r\n\r\n    dispatch({ type: DELETE_USER, payload: res.data.msg });\r\n    history.push('/');\r\n  } catch (err) {\r\n    console.log(err);\r\n    const error = {\r\n      statusCode: err.response.status,\r\n      message: err.response.data.error,\r\n      statusText: err.response.data.statusText\r\n    }\r\n    dispatch({ type: ADD_ERROR, payload: error })\r\n  }\r\n}\r\n\r\nexport const clearMessage = () => {\r\n  return { type: CLEAR_MESSAGE };\r\n}\r\n\r\nexport const clearError = () => {\r\n  return { type: CLEAR_ERROR }\r\n}\r\n\r\nexport const clearStories = () => {\r\n  return { type: CLEAR_STORIES }\r\n}\r\n\r\nexport const clearAuthor = () => {\r\n  return { type: CLEAR_AUTHOR }\r\n}\r\n\r\nexport const clearStory = () => {\r\n  return { type: CLEAR_STORY }\r\n\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchUser, logout } from '../actions';\r\n\r\nconst Header = ({ fetchUser, auth, logout }) => {\r\n\r\n  const [dropDown, setDropDown] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, [fetchUser])\r\n\r\n\r\n\r\n\r\n  const isLoggedIn = () => {\r\n    if (!auth) {\r\n      return (\r\n        <div className={`google-btn ${dropDown && 'active'}`}>\r\n          <a google-btn-link href=\"/auth/google\">\r\n            <button type=\"button\" class=\"google-button\">\r\n              <span class=\"google-button__icon\">\r\n                <svg viewBox=\"0 0 366 372\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M125.9 10.2c40.2-13.9 85.3-13.6 125.3 1.1 22.2 8.2 42.5 21 59.9 37.1-5.8 6.3-12.1 12.2-18.1 18.3l-34.2 34.2c-11.3-10.8-25.1-19-40.1-23.6-17.6-5.3-36.6-6.1-54.6-2.2-21 4.5-40.5 15.5-55.6 30.9-12.2 12.3-21.4 27.5-27 43.9-20.3-15.8-40.6-31.5-61-47.3 21.5-43 60.1-76.9 105.4-92.4z\" id=\"Shape\" fill=\"#EA4335\" /><path d=\"M20.6 102.4c20.3 15.8 40.6 31.5 61 47.3-8 23.3-8 49.2 0 72.4-20.3 15.8-40.6 31.6-60.9 47.3C1.9 232.7-3.8 189.6 4.4 149.2c3.3-16.2 8.7-32 16.2-46.8z\" id=\"Shape\" fill=\"#FBBC05\" /><path d=\"M361.7 151.1c5.8 32.7 4.5 66.8-4.7 98.8-8.5 29.3-24.6 56.5-47.1 77.2l-59.1-45.9c19.5-13.1 33.3-34.3 37.2-57.5H186.6c.1-24.2.1-48.4.1-72.6h175z\" id=\"Shape\" fill=\"#4285F4\" /><path d=\"M81.4 222.2c7.8 22.9 22.8 43.2 42.6 57.1 12.4 8.7 26.6 14.9 41.4 17.9 14.6 3 29.7 2.6 44.4.1 14.6-2.6 28.7-7.9 41-16.2l59.1 45.9c-21.3 19.7-48 33.1-76.2 39.6-31.2 7.1-64.2 7.3-95.2-1-24.6-6.5-47.7-18.2-67.6-34.1-20.9-16.6-38.3-38-50.4-62 20.3-15.7 40.6-31.5 60.9-47.3z\" fill=\"#34A853\" /></svg>\r\n              </span>\r\n              <span class=\"google-button__text\">Sign in with Google</span>\r\n            </button>\r\n          </a>\r\n\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        <div className={`header-right-menu ${dropDown && 'active'}`}>\r\n          <Link\r\n            to=\"/add-story\"\r\n            className=\" btn dd-btn\"\r\n            onClick={() => setDropDown(false)}>\r\n            Add a Story\r\n           </Link>\r\n          <Link\r\n            to={`/your-profile`}\r\n            className=\" btn dd-btn\"\r\n            onClick={() => setDropDown(false)}>\r\n            Your Profile\r\n            </Link>\r\n          <a href=\"/api/logout\"\r\n            className=\"btn dd-btn\"\r\n            onClick={() => {\r\n              setDropDown(false)\r\n              logout();\r\n            }}>\r\n            Log Out\r\n            </a>\r\n        </div>\r\n        <div className={`burger ${dropDown && 'active'}`}>\r\n          <button\r\n            onClick={() => setDropDown(!dropDown)}\r\n            className=\"burger-btn\"\r\n          >\r\n            <div className=\"burger-line\"></div>\r\n            <div className=\"burger-line\"></div>\r\n            <div className=\"burger-line\"></div>\r\n          </button>\r\n        </div>\r\n      </div >\r\n    );\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"header\">\r\n        <div className=\"header-left\">\r\n          <Link to=\"/\"><h2>Writer's Desk</h2></Link>\r\n        </div>\r\n        <div className=\"header-right\">\r\n          {isLoggedIn()}\r\n\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ auth }) => {\r\n  return { auth }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchUser, logout })(Header)\r\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import { Link } from 'react-router-dom';\r\n\r\nexport default function (error, cleanUp) {\r\n  return (\r\n    <div className=\"error-container\">\r\n      <p>Error:{error.statusCode}</p>\r\n      <p>{error.message}</p>\r\n      <Link\r\n        className=\"btn\"\r\n        to=\"/\"\r\n        onClick={() => {\r\n          cleanUp()\r\n        }}>Back to Home</Link>\r\n    </div>)\r\n}","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport openSocket from 'socket.io-client';\r\nimport { useForm } from 'react-hook-form';\r\nimport { postSnippet, fetchSnippet, addSnippet, deleteSnippet, clearError, clearAuthor } from '../actions';\r\n\r\n\r\nconst Snippets = ({ postSnippet, fetchSnippet, snippets, addSnippet, auth, deleteSnippet, clearAuthor }) => {\r\n\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm();\r\n\r\n\r\n  //fetchsnippets, and open a socket the listens for created snippets\r\n  useEffect(() => {\r\n    if (snippets.length < 1) {\r\n      fetchSnippet();\r\n      const socket = openSocket(process.env.REACT_APP_STRIPE_PATH);\r\n\r\n      socket.on('snippets', data => {\r\n        if (data.action === 'create') {\r\n          addSnippet(data.snippet);\r\n        }\r\n        if (data.action === 'delete') {\r\n          fetchSnippet();\r\n        }\r\n      })\r\n      return () => {\r\n        socket.off('snippets');\r\n      }\r\n    }\r\n  }, [addSnippet, fetchSnippet]);\r\n\r\n\r\n\r\n  const onSubmit = (data) => {\r\n    postSnippet(data.snippetText);\r\n    reset();\r\n  }\r\n\r\n  const rendersnippetInput = () => {\r\n    return (\r\n      <form className=\"snippet-form\" onSubmit={handleSubmit(onSubmit)}>\r\n        <label>Post a snippet</label>\r\n        <div className=\"input-container\">\r\n          <input\r\n            name='snippetText'\r\n            ref={register({ required: true, maxLength: 100 })}\r\n            className=\"snippets-home-input\"\r\n          />\r\n          <div className=\"snippet-btn-container\">\r\n            <button className=\"btn green-btn\" type='submit'>Post</button>\r\n          </div>\r\n        </div>\r\n        {errors.snippetText && errors.snippetText.type === 'maxLength' && (\r\n          <p className=\"validation-warning\">Snippets have a max length of 100 characters</p>\r\n        )}\r\n\r\n      </form>\r\n    )\r\n  }\r\n\r\n  //renders snippets\r\n  //When user adds a snippet, we slice the array to ensure it stays same length\r\n  //ensure it matches the limits set in back end\r\n  const renderSnippets = () => {\r\n    let arrayToMap;\r\n    if (snippets.length > 10) {\r\n      arrayToMap = snippets.slice(0, 10);\r\n    } else {\r\n      arrayToMap = snippets;\r\n    }\r\n    return arrayToMap.map(snippet => {\r\n      return (\r\n        <div key={snippet._id} className=\"snippet-container\">\r\n          <div className=\"snippet-left\">\r\n            <p className=\"snippet-text\">{snippet.text}\r\n            </p>\r\n            <p className=\"snippet-username\">\r\n              <Link\r\n                to={`/author/${snippet._user}`}\r\n                onClick={() => clearAuthor()}>{snippet.username}</Link>\r\n            </p>\r\n          </div>\r\n          <div className=\"snippet-right\">\r\n            {snippet._user === auth?._id ?\r\n              <button className=\"btn delete-btn\" onClick={() => deleteSnippet(snippet._id)}>Delete</button> : null}\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  const pageSuccess = () => {\r\n    return (\r\n      <div className=\"snippets-container story-item\">\r\n        <div className=\"snippet-header-container\">\r\n          <h3>Snippets</h3>\r\n        </div>\r\n        <p className=\"snippets-sub-header\">Let other writers know what you're up to, add a short snippet to the live feed.</p>\r\n        {rendersnippetInput()}\r\n        {renderSnippets()}\r\n        <div className=\"link-to-snippets\">\r\n          <Link to=\"/snippets/1\">See all snippets</Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {pageSuccess()}\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ snippets, auth }) => {\r\n  return { snippets, auth };\r\n}\r\n\r\nexport default connect(mapStateToProps, { postSnippet, fetchSnippet, addSnippet, deleteSnippet, clearError, clearAuthor })(Snippets);\r\n\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { clearStories } from '../actions';\r\n\r\n\r\n\r\nconst Pagination = ({ pager, currentPage, path, clearStories }) => {\r\n\r\n  return (\r\n    <div className=\"paginate-container\">\r\n      <ul>\r\n        {pager.currentPage !== 1 && pager.previousPage !== 1 ?\r\n          <li>\r\n            <Link\r\n              to={`${path}1`}\r\n              className={`${currentPage === 1 && 'active'} `}\r\n              onClick={() => clearStories()}\r\n            >1\r\n              </Link>\r\n          </li>\r\n          : null\r\n        }\r\n        {pager.hasPreviousPage ?\r\n          <li>\r\n            <Link\r\n              to={`${path}${pager.previousPage}`}\r\n              onClick={() => clearStories()}\r\n            >\r\n              {pager.previousPage}\r\n            </Link>\r\n          </li>\r\n          : null\r\n        }\r\n        <li>\r\n          <Link to={`${path}${pager.currentPage}`}\r\n            className=\"active\"\r\n            onClick={() => clearStories()}\r\n          >\r\n            {pager.currentPage}\r\n          </Link>\r\n        </li>\r\n        {pager.hasNextPage ?\r\n          <li>\r\n            <Link to={`${path}${pager.nextPage}`}\r\n              onClick={() => clearStories()}\r\n            >\r\n              {pager.nextPage}\r\n            </Link>\r\n          </li>\r\n          : null\r\n        }\r\n        {pager.lastPage !== pager.currentPage &&\r\n          pager.nextPage !== pager.lastPage &&\r\n          pager.lastPage !== 0 ?\r\n          <li>\r\n\r\n            <Link to={`${path}${pager.lastPage}`}\r\n              onClick={() => clearStories()}\r\n            >\r\n              {pager.lastPage}\r\n            </Link>\r\n          </li>\r\n          : null\r\n        }\r\n      </ul>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default connect(null, { clearStories })(Pagination);\r\n","import { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n// import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport displayError from './displayError';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\n\r\nimport { fetchStories, clearError, clearMessage, clearStory } from '../actions/index';\r\nimport Snippets from './Snippets';\r\nimport Pagination from './Pagination';\r\n\r\n\r\nconst Stories = ({ stories, fetchStories, pager, match, clearMessage, error, message, clearError, storeStory, clearStory }) => {\r\n\r\n\r\n\r\n  const [currentPage, setCurrentPage] = useState(match.params.page);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(match.params.page || 1);\r\n  }, [setCurrentPage, match.params.page])\r\n\r\n  useEffect(() => {\r\n\r\n    if (stories.length < 1) {\r\n      fetchStories(currentPage || 1);\r\n    }\r\n\r\n\r\n\r\n\r\n  }, [fetchStories, currentPage, stories]);\r\n\r\n  // useEffect(() => {\r\n  //   if (pager.currentPage !== currentPage && currentPage) {\r\n  //     fetchStories(currentPage || 1);\r\n  //   }\r\n  //   if (stories.length > 0) setLoading(false);\r\n  // }, [fetchStories, pager.currentPage, currentPage]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (stories.length > 0) setLoading(false);\r\n    if (stories.length < 1) setLoading(true);\r\n  }, [stories])\r\n\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      clearError();\r\n    }\r\n  }, [clearError])\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      clearMessage()\r\n    }\r\n  }, [clearMessage])\r\n\r\n\r\n\r\n  const clearStoryCheck = (storyId, storeStoryId) => {\r\n\r\n    if (storeStoryId && storyId !== storeStoryId) {\r\n      clearStory();\r\n    }\r\n  }\r\n\r\n  //creates a new array with a few extras inserted at the start of the stories array\r\n  const storiesArrayWithFeed = () => {\r\n    const emptyObj = {};\r\n    const copyStories = [...stories];\r\n    copyStories.splice(0, 0, emptyObj);\r\n    copyStories.splice(1, 0, emptyObj);\r\n    copyStories.splice(2, 0, emptyObj);\r\n    return copyStories\r\n  }\r\n\r\n  //renders the array of user stories into grid items, insert a featured story at the index 0, snippets component at index 1 and a title for latest stories at index 2\r\n  const renderGrid = () => {\r\n    const storiesWithFeed = storiesArrayWithFeed();\r\n    return storiesWithFeed.map((story, index) => {\r\n      if (index === 0) {\r\n        return (\r\n          <div className={`story-item-container`} key={index}>\r\n            <Link\r\n              to={`/story/606ae0b59dbfba3cccf41568`}\r\n            >\r\n              <div className=\"story-item featured-story\">\r\n                <h5 className=\"featured-text\">Featured Story</h5>\r\n                <h3>Shall I compare thee to a summer's day?</h3>\r\n                <p className=\"story-page-author\">Posted by: Somebody</p>\r\n                <p className=\"story-page-desc\">\r\n                  A poem I wrote back in February about better days to come! Kinda sombre in theme as well but don't let it get you down too much!\r\n                  A poem I wrote back in February about better days to come! Kinda sombre in theme as well but don't\r\n              </p>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n        )\r\n      }\r\n      if (index === 1) {\r\n        return (\r\n          <div className={`story-item-container snippets-container`} key={index}>\r\n            <Snippets />\r\n          </div>\r\n        )\r\n      }\r\n      if (index === 2) {\r\n        return (\r\n          <div className=\"story-item-container sub-header-container\" key={index}>\r\n            <h2>{!currentPage || currentPage == 1 ? \"Latest Stories\" : `Latest Stories - Page ${currentPage}`}</h2>\r\n          </div>\r\n        )\r\n      }\r\n      return (\r\n        <div className={`story-item-container`} key={index}>\r\n          <Link\r\n            to={`/story/${story._id}`}\r\n            onClick={() => clearStoryCheck(story._id, storeStory?._id)}\r\n          >\r\n            <div className=\"story-item\">\r\n              <h3>{story.title}</h3>\r\n              <p className=\"story-page-author\">Posted by: {story.username}</p>\r\n              <p className=\"story-page-desc\">\r\n                {story.description}\r\n              </p>\r\n            </div>\r\n          </Link>\r\n\r\n        </div >\r\n      )\r\n    })\r\n\r\n  }\r\n\r\n  const pageSuccess = () => {\r\n    return (\r\n      <div className=\"stories-container\">\r\n        <div className=\"header-container\">\r\n          <h1>Home</h1>\r\n        </div>\r\n        <p className=\"p-welcome\">Welcome to <span>Writer's Desk</span>, a space for creative writers to share their work! Sign up and post your own stories and consider supporting other writers with a donation.</p>\r\n        { loading ?\r\n          <div className=\"loader\">\r\n            <Loader type=\"ThreeDots\" color=\"#ccd5ae\" height={80}\r\n              timeout={5000}\r\n            />\r\n          </div> :\r\n          <div className=\"stories-grid author-stories-grid\">\r\n            {renderGrid()}\r\n          </div>\r\n        }\r\n        <Pagination\r\n          pager={pager}\r\n          currentPage={currentPage}\r\n          path={`/stories/`}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderMessages = () => {\r\n    if (message) {\r\n      return (\r\n        <div className=\"message-container\">\r\n          <div className=\"message\">\r\n            <p>{message}</p>\r\n            <button\r\n              className=\"btn notification-btn\"\r\n              onClick={() => clearMessage()}>Close</button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {renderMessages()}\r\n      {error ? displayError(error, clearError) : pageSuccess()}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ stories, pager, error, message, loading, story: storeStory }) => {\r\n  return { stories, pager, error, message, loading, storeStory }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchStories, clearError, clearMessage, clearStory })(Stories);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { postStory, clearError } from '../actions';\r\nimport { useForm } from 'react-hook-form';\r\nimport displayError from './displayError';\r\n\r\n\r\n\r\nconst AddStory = ({ postStory, auth, history, error, clearError }) => {\r\n\r\n\r\n  const [howFormat, setHowFormat] = useState(false);\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    const creator = auth._id;\r\n    const title = data.title;\r\n    const description = data.description;\r\n    const content = data.content;\r\n\r\n    const postBody = { title, description, content, creator };\r\n    postStory(postBody, history);\r\n  }\r\n\r\n  const renderHowToFormat = () => {\r\n    if (howFormat) {\r\n      return (\r\n        <div className=\"how-to-format-container\">\r\n          <p>Writer's Desk uses \"marked\" for formatting user stories. Most users only need to know that hitting the space button twice will format the text to a new line. <br />  For everything else however, check out the <span><a href=\"https://marked.js.org/\">marked demo</a></span> for all formatting options</p>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn change-esc-btn\"\r\n            onClick={() => setHowFormat(false)}>X</button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  const forms = () => {\r\n    return (\r\n      <div className=\"forms-container\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n          <div className=\"form-btn-container\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn htf-btn notification-btn\"\r\n              onClick={() => setHowFormat(true)}>How to format</button>\r\n          </div>\r\n          {renderHowToFormat()}\r\n          <div className=\"add-story-input-title add-story-item-container\">\r\n            <label> Add a Title</label>\r\n            <input\r\n              name=\"title\"\r\n              ref={register({ required: true, maxLength: 100 })}\r\n            />\r\n            {errors.title && errors.title.type === 'required' && (\r\n              <p className=\"validation-warning\">This is Required</p>\r\n            )}\r\n            {errors.title && errors.title.type === 'maxLength' && (\r\n              <p className=\"validation-warning\">Title should not be longer than 100 characters</p>\r\n            )}\r\n          </div>\r\n          <div className=\"add-story-input-description add-story-item-container\">\r\n            <label> Short description</label>\r\n            <input\r\n              name=\"description\"\r\n              ref={register({ required: true, maxLength: 200 })}\r\n            />\r\n            {errors.description && errors.description.type === 'required' && (\r\n              <p className=\"validation-warning\">This is Required</p>\r\n            )}\r\n            {errors.description && errors.description.type === 'maxLength' && (\r\n              <p className=\"validation-warning\">Description should not be longer than 250 characters</p>\r\n            )}\r\n          </div>\r\n          <div className=\"add-story-input-content add-story-item-container\">\r\n            <label>Story</label>\r\n            <textarea\r\n              name=\"content\"\r\n              ref={register({ required: true, minLength: 100, maxLength: 10000 })}\r\n            />\r\n            {errors.content && errors.content.type === 'required' && (\r\n              <p className=\"validation-warning\">This is Required</p>\r\n            )}\r\n            {errors.content && errors.content.type === 'minLength' && (\r\n              <p className=\"validation-warning\">A story must have at least 100 characters</p>)}\r\n            {errors.content && errors.content.type === 'maxLength' && (\r\n              <p className=\"validation-warning\">The maximum length for a story is 10,000 characters</p>\r\n            )}\r\n\r\n          </div>\r\n          <div className=\"form-btn-container\">\r\n            <button\r\n              name=\"submit-button\"\r\n              className=\"green-btn btn\"\r\n              type=\"submit\"\r\n            >Submit</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  const pageSuccess = () => {\r\n    return (\r\n      <div className=\"add-story-container\">\r\n        <div className=\"header-container\">\r\n          <h1>Submit Your Story!</h1>\r\n        </div>\r\n        {forms()}\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {error ? displayError(error, clearError) : pageSuccess()}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ auth, story, error }) => {\r\n  return { auth, story, error }\r\n}\r\n\r\nexport default connect(mapStateToProps, { postStory, clearError })(AddStory)\r\n","import { connect } from 'react-redux';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { fetchAuthor, fetchUser, updateUsername, updateUserDesc, fetchUserStories, clearError, deleteUser, clearMessage } from '../actions';\r\nimport Pagination from './Pagination';\r\nimport displayError from './displayError';\r\n\r\nconst Author = ({ userStories, auth, updateUsername, updateUserDesc, fetchUserStories, match, pager, clearError, error, deleteUser, history, clearMessage, message }) => {\r\n\r\n\r\n  const preLoadForm = {\r\n    username: auth.username\r\n  }\r\n\r\n  const preLoadForm2 = {\r\n    description: auth.description\r\n  }\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    defaultValues: preLoadForm\r\n  });\r\n\r\n  const {\r\n    register: register2,\r\n    errors: errors2,\r\n    handleSubmit: handleSubmit2\r\n  } = useForm({ defaultValues: preLoadForm2 });\r\n\r\n\r\n\r\n\r\n\r\n  // const [input, setInput] = useState('');\r\n  const [showChangeUsername, setShowChangeUserName] = useState(false);\r\n  const [showChangeDesc, setShowChangeDesc] = useState(false);\r\n  const [showDeleteUser, setShowDeleteUser] = useState(false);\r\n  const [changeContainer, setChangeContainer] = useState(false);\r\n\r\n  const [currentPage, setCurrentPage] = useState(match.params.page);\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(match.params.page);\r\n  }, [setCurrentPage, match.params.page]);\r\n\r\n  useEffect(() => {\r\n    if (!auth) {\r\n      fetchUser();\r\n    }\r\n  }, [auth])\r\n\r\n  // useEffect(() => {\r\n  //   if (auth._id) {\r\n  //     fetchUserStories(currentPage || 1, auth._id);\r\n  //   }\r\n  // }, [auth, currentPage, fetchUserStories])\r\n\r\n  useEffect(() => {\r\n    if (auth?._id) {\r\n      if (pager.currentPage !== currentPage && currentPage) {\r\n        fetchUserStories(currentPage, auth._id);\r\n      }\r\n      else {\r\n        fetchUserStories(1, auth._id);\r\n      }\r\n    }\r\n\r\n  }, [pager.currentPage, currentPage, auth, fetchUserStories]);\r\n\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      clearError();\r\n    }\r\n  }, [clearError])\r\n\r\n\r\n\r\n\r\n  const postUsernameChange = (data) => {\r\n    updateUsername(data.username);\r\n    setShowChangeUserName(false);\r\n  }\r\n\r\n  const postDescChange = (data) => {\r\n    updateUserDesc(data.description);\r\n    setShowChangeDesc(false);\r\n  }\r\n\r\n  const postDeleteUser = () => {\r\n    deleteUser(auth._id, history);\r\n  }\r\n\r\n  const authorName = () => {\r\n    if (auth) {\r\n      if (auth.username) {\r\n        return auth.username\r\n      }\r\n      return auth.name;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  const authorDescription = () => {\r\n    if (auth) {\r\n      if (auth.description) {\r\n        return auth.description\r\n      }\r\n      else {\r\n        return \"You don't have a description yet\"\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  const renderAuthorStories = () => {\r\n    if (!userStories) {\r\n      return null;\r\n    }\r\n    else {\r\n      return userStories.map(story => {\r\n        return (\r\n          <div className={`story-item-container`} key={story._id}>\r\n            <Link\r\n              to={`/story/${story._id}`}\r\n            >\r\n              <div className=\"story-item\">\r\n                <h3>{story.title}</h3>\r\n                <p className=\"story-page-author\">Posted by: {story.username}</p>\r\n                <p className=\"story-page-desc\">\r\n                  {story.description}\r\n                </p>\r\n              </div>\r\n            </Link>\r\n\r\n          </div >\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  const renderUserInfo = () => {\r\n    if (auth) {\r\n      return (\r\n        <div className=\"author-data-container user-data-container\">\r\n          <div className=\"header-container\">\r\n            <h1>Your Profile</h1>\r\n          </div>\r\n\r\n          {auth.donationsRecieved || auth.donationsSent ?\r\n            <div className=\"author-donations-container author-data-item\">\r\n              {auth.donationsRecieved ? <p>Donations received:  £{auth.donationsRecieved}</p> : null}\r\n              {auth.donationsSent ? <p>You have donated: £{auth.donationsSent} </p> : null}\r\n            </div> : null}\r\n\r\n          <div className=\"author-username-container author-data-item\">\r\n            <p>{authorName()}</p>\r\n            <button\r\n              className=\"btn green-btn\"\r\n              onClick={() => {\r\n                setShowChangeUserName(true)\r\n                setChangeContainer(true)\r\n              }}\r\n            >Edit Username</button>\r\n\r\n          </div>\r\n\r\n          {renderChangeUsername()}\r\n\r\n          <div className=\"author-description-container  author-data-item\">\r\n            <p>\r\n              {authorDescription()}\r\n            </p>\r\n            <button\r\n              className=\"btn green-btn\"\r\n              onClick={() => {\r\n                setShowChangeDesc(true)\r\n                setChangeContainer(true)\r\n              }}>\r\n              {auth.description ? \"Edit Description\" : \"Add Description\"}\r\n            </button>\r\n          </div>\r\n\r\n          {/* renders input prompt when user clicks edit btn  */}\r\n          {renderChangeDesc()}\r\n\r\n          <div\r\n            className={`author-delete-container\r\n                      author-data-item\r\n                      ${showDeleteUser && 'hide'}`}>\r\n            <p>Delete your profile</p>\r\n            <button\r\n              className=\"btn danger-btn\"\r\n              onClick={() => {\r\n                setShowDeleteUser(true)\r\n                setChangeContainer(true)\r\n              }}\r\n            >DELETE</button>\r\n\r\n          </div>\r\n          {renderDeleteUser()}\r\n\r\n\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const renderChangeUsername = () => {\r\n    if (auth) {\r\n      return (\r\n        <div\r\n          className={\r\n            `update-info-container author-data-item ${showChangeUsername && 'active'}`}>\r\n          <button\r\n            className=\"change-esc-btn btn\"\r\n            onClick={() => {\r\n              setShowChangeUserName(false)\r\n              setChangeContainer(false)\r\n            }}\r\n          >X</button>\r\n          <form onSubmit={handleSubmit(postUsernameChange)}>\r\n            <label>Change Username: </label>\r\n            <div className=\"input-container\">\r\n              <input\r\n                name=\"username\"\r\n                ref={register({ required: true, maxLength: 30 })}\r\n              />\r\n              <div className=\"submit-btn-container\"><button type=\"submit\" className=\"btn green-btn\">Submit</button></div>\r\n            </div>\r\n            {errors.username && errors.username.type === 'required' && (\r\n              <p className=\"validation-warning\">Required</p>\r\n            )}\r\n            {errors.username && errors.username.type === 'maxLength' && (\r\n              <p className=\"validation-warning\">Username should not be longer than 30 characters</p>\r\n            )}\r\n          </form>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  const renderChangeDesc = () => {\r\n    if (auth) {\r\n\r\n      return (\r\n        <div\r\n          className={\r\n            `update-info-container author-data-item ${showChangeDesc && 'active'}`}>\r\n          <button\r\n            className=\"change-esc-btn btn\"\r\n            onClick={() => {\r\n              setShowChangeDesc(false)\r\n              setChangeContainer(false)\r\n            }}\r\n          >X</button>\r\n          <form onSubmit={handleSubmit2(postDescChange)}>\r\n            <label>\r\n              {auth.description ? 'Edit your description' :\r\n                \"Add a description to your profile\"}\r\n            </label>\r\n            <div className=\"input-container\">\r\n              <input\r\n                name=\"description\"\r\n                ref={register2({ required: true, minLength: 5, maxLength: 100 })}\r\n              />\r\n              <div className=\"submit-btn-container\">\r\n                <button type=\"submit\" className=\"btn green-btn\">Submit</button>\r\n              </div>\r\n\r\n            </div>\r\n            {errors2.description && errors2.description.type === 'required' && (\r\n              <p className=\"validation-warning\">Required</p>\r\n            )}\r\n            {errors2.description && errors2.description.type === 'maxLength' && (\r\n              <p className=\"validation-warning\">Description should not be longer than 100 characters</p>\r\n            )}\r\n            {errors2.description && errors2.description.type === 'minLength' && (\r\n              <p className=\"validation-warning\">Descriptions must have at least 5 characters</p>\r\n            )}\r\n          </form>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const renderDeleteUser = () => {\r\n    return (\r\n      <div className={\r\n        `update-info-container author-data-item ${showDeleteUser && 'active'}`}>\r\n        <button\r\n          className=\"change-esc-btn btn\"\r\n          onClick={() => {\r\n            setShowDeleteUser(false);\r\n            setChangeContainer(false);\r\n          }}\r\n        >X</button>\r\n        <p className=\"author-delete-text\">Are you sure you want to delete your profile? All your data will be removed permenantly </p>\r\n        <div className=\"submit-btn-container\">\r\n          <button\r\n            className=\"btn danger-btn\"\r\n            onClick={() => {\r\n              postDeleteUser();\r\n            }}>Yes, Delete My Profile\r\n          </button>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  const pageSuccess = () => {\r\n    return (\r\n      <div className=\"author-page-container\">\r\n        <div className={\r\n          `change-details-bg-container ${changeContainer && 'active'} `}\r\n        >\r\n\r\n        </div>\r\n        {renderUserInfo()}\r\n        <div className=\"header-container sub-header-container\">\r\n          <h2>Your stories</h2>\r\n        </div>\r\n        <div className=\"stories-grid author-stories-grid\">\r\n          {renderAuthorStories()}\r\n        </div>\r\n        {/* {paginationHelper(pager, currentPage, '/your-profile/')} */}\r\n        <Pagination pager={pager} currentPage={currentPage} path='/your-profile/' />\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n  const renderMessages = () => {\r\n    if (message) {\r\n      return (\r\n        <div className=\"message-container\">\r\n          <p>{message}</p>\r\n          <button onClick={() => clearMessage()}>Close</button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {renderMessages()}\r\n      {error ? displayError(error, clearError) : pageSuccess()}\r\n    </div>\r\n  )\r\n\r\n\r\n};\r\n\r\nconst mapStateToProps = ({ author, auth, userStories, pager, error, message }) => {\r\n  return { author, auth, pager, userStories, error, message }\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchAuthor, updateUsername, updateUserDesc, fetchUserStories, clearError, deleteUser, clearMessage })(Author);\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { updateStoryComments, deleteStoryComment, fetchStory, clearError, clearAuthor } from '../actions';\r\n\r\n\r\n\r\n\r\nconst StoryComments = ({ story, updateStoryComments, auth, deleteStoryComment, clearAuthor }) => {\r\n\r\n  const { register, handleSubmit, errors, reset } = useForm();\r\n\r\n  const [commentPage, setCommentPage] = useState(1);\r\n  const [commentsArray, setCommentsArray] = useState(null);\r\n  const commentsToShow = 5;\r\n\r\n\r\n  const deleteComment = (storyId, commentId) => {\r\n    deleteStoryComment(storyId, commentId)\r\n  }\r\n\r\n  const onSubmit = async (data) => {\r\n    updateStoryComments(story._id, data.commentText);\r\n    reset();\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const createCommentPgArray = () => {\r\n      if (story.comments && !commentsArray) {\r\n        story.comments.reverse();\r\n        const commentsToSkip = commentsToShow * (commentPage - 1);\r\n        const arrayToRender = story.comments.slice(commentsToSkip, commentsToSkip + commentsToShow);\r\n        setCommentsArray(arrayToRender)\r\n      }\r\n      else if (story.comments) {\r\n        const commentsToSkip = commentsToShow * (commentPage - 1);\r\n        const arrayToRender = story.comments.slice(commentsToSkip, commentsToSkip + commentsToShow);\r\n        setCommentsArray(arrayToRender)\r\n      }\r\n    }\r\n    createCommentPgArray();\r\n\r\n    return function cleanup() {\r\n      setCommentsArray(null);\r\n    }\r\n  }, [commentPage, story])\r\n\r\n\r\n\r\n  const commentPager = () => {\r\n    if (story.comments) {\r\n      const numOfComments = story.comments.length\r\n      const numOfButtons = Math.ceil(story.comments.length / commentsToShow);\r\n      const currentPage = commentPage;\r\n      const hasNextPage = commentsToShow * commentPage < numOfComments;\r\n      const nextPage = commentPage + 1;\r\n      const hasPreviousPage = commentPage > 1;\r\n      const previousPage = commentPage - 1;\r\n      const lastPage = numOfButtons;\r\n\r\n      return (\r\n        <div className=\"paginate-container pg-comments\">\r\n          <ul>\r\n            {currentPage !== 1 && previousPage !== 1 ?\r\n              <li className='comment-li'>\r\n                <button\r\n                  onClick={() => setCommentPage(1)}>\r\n                  1</button>\r\n              </li>\r\n              : null\r\n            }\r\n            {hasPreviousPage ?\r\n              <li className='comment-li'>\r\n                <button\r\n                  onClick={() => setCommentPage(previousPage)}>\r\n                  {previousPage}</button>\r\n              </li>\r\n              : null\r\n            }\r\n            {\r\n              <li className='comment-li'>\r\n                <button\r\n                  onClick={() => setCommentPage(currentPage)}>\r\n                  {currentPage}</button>\r\n              </li>\r\n            }\r\n            {\r\n              hasNextPage ?\r\n                <li className='comment-li'>\r\n                  <button\r\n                    onClick={() => setCommentPage(nextPage)}>\r\n                    {nextPage}</button>\r\n                </li>\r\n                : null\r\n            }\r\n            {\r\n              lastPage !== currentPage &&\r\n                nextPage !== lastPage &&\r\n                lastPage !== 0 ?\r\n                <li className='comment-li'>\r\n                  <button\r\n                    onClick={() => setCommentPage(lastPage)}>\r\n                    {lastPage}</button>\r\n                </li>\r\n                : null\r\n            }\r\n          </ul>\r\n\r\n\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const renderStoryComments = () => {\r\n    if (commentsArray) {\r\n      if (commentsArray.length > 0) {\r\n        return commentsArray.map(comment => {\r\n          return (\r\n            <li key={comment.id} className=\"comment-container\">\r\n              <div className=\"comment-left\">\r\n                <p className=\"comment-text\">{comment.commentText}</p>\r\n                <p className=\"comment-user\">\r\n                  <Link\r\n                    to={`/author/${comment.userId}`}\r\n                    onClick={() => clearAuthor()}\r\n                  >{comment.username}</Link>\r\n                </p>\r\n              </div>\r\n              <div className=\"comment-right\">\r\n                {comment.userId === auth._id ?\r\n                  <button\r\n                    onClick={() => deleteComment(story._id, comment.id)}\r\n                    className=\"btn delete-btn\"\r\n                  >Delete</button> : null}\r\n              </div>\r\n\r\n            </li>\r\n          )\r\n        })\r\n      }\r\n      else if (!commentsArray || commentsArray.length === 0) {\r\n        return (\r\n          <div className=\"no-comments-container\">\r\n            <p>No comments yet!</p>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n    else {\r\n      return (\r\n        <div className=\"no-comments-container\">\r\n          <p>No comments yet!</p>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"comments-container\">\r\n      <h5>Comments</h5>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <label>Add a Comment</label>\r\n        <div className=\"input-container\">\r\n          <input\r\n            name='commentText'\r\n            ref={register({ required: true, maxLength: 100 })}\r\n          />\r\n          <button type=\"submit\" className=\"btn green-btn\">Post</button>\r\n        </div>\r\n        {errors.commentText && errors.commentText.type === 'maxLength' && (\r\n          <p className=\"validation-warning\">Comments have a max length of 100 characters</p>\r\n        )}\r\n      </form>\r\n      <ul className=\"comments-list\">\r\n        {renderStoryComments()}\r\n      </ul>\r\n      {commentPager()}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ story, auth, error }) => {\r\n  return { story, auth, error }\r\n}\r\n\r\nexport default connect(mapStateToProps, { updateStoryComments, deleteStoryComment, fetchStory, clearError, clearAuthor })(StoryComments)\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from \"react-loader-spinner\";\r\nimport { fetchStory, fetchAuthor, deleteStory, clearError, clearMessage } from '../actions';\r\nimport displayError from './displayError';\r\n\r\nimport StoryComments from './StoryComments';\r\n\r\nconst Story = ({ match, story, fetchStory, fetchAuthor, author, deleteStory, auth, history, clearError, error, message, clearMessage }) => {\r\n\r\n  const [deletePrompt, setDeletePrompt] = useState(false)\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n\r\n  useEffect(() => {\r\n    if (!story) {\r\n      fetchStory(match.params.storyId);\r\n    }\r\n  }, [story, fetchStory, match.params.storyId]);\r\n\r\n  useEffect(() => {\r\n    if (story) {\r\n      if (story._user) {\r\n        fetchAuthor(story._user);\r\n      }\r\n    }\r\n  }, [story, fetchAuthor, author])\r\n\r\n  useEffect(() => {\r\n    if (story && author) setLoading(false);\r\n  })\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      clearError()\r\n    }\r\n  }, [clearError])\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      clearMessage()\r\n    }\r\n  }, [clearMessage])\r\n\r\n\r\n  const authorNameCheck = (author) => {\r\n    if (author.username) {\r\n      return author.username\r\n    }\r\n    return author.name\r\n  }\r\n\r\n  const onDelete = async (storyId) => {\r\n    await deleteStory(storyId);\r\n    history.push('/your-profile')\r\n  }\r\n\r\n\r\n  const renderDeletePrompt = () => {\r\n    if (deletePrompt) {\r\n      return (\r\n        <div className=\"message-container\">\r\n          <div className=\"message warning-message\">\r\n            <p>Are you sure you want to delete your story?</p>\r\n            <button\r\n              className=\"btn danger-btn\"\r\n              onClick={() => onDelete(story._id)}>\r\n              delete</button>\r\n            <button\r\n              className=\"btn change-esc-btn \r\n              cancel-delete-story-btn\"\r\n              onClick={() => setDeletePrompt(false)}\r\n            >X</button>\r\n          </div>\r\n\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const renderEditOrDonate = () => {\r\n    if (story && auth) {\r\n      if (story._user === auth._id) {\r\n        return (\r\n          <div className=\"story-edit-btns\">\r\n            <div className=\"story-btns-container\">\r\n              <Link className=\"btn green-btn\" to={`/edit-story/${story._id}`}>edit</Link>\r\n              <button\r\n                className=\"btn delete-btn\"\r\n                onClick={() => setDeletePrompt(true)}\r\n              >delete</button>\r\n            </div>\r\n            {renderDeletePrompt()}\r\n          </div>\r\n        )\r\n      }\r\n      else {\r\n        return (\r\n          <div className=\"story-donate-btns-container\">\r\n            <p>Like the story?</p>\r\n            <Link\r\n              to={`/payment/${author._id}`}\r\n              className=\"btn green-btn\"\r\n            >Donate\r\n            </Link>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const pageSuccess = () => {\r\n    if (loading) {\r\n      return (\r\n        <div className=\"loader loader-margin\">\r\n          <Loader type=\"ThreeDots\" color=\"#ccd5ae\" height={80}\r\n            timeout={5000}\r\n          />\r\n        </div>)\r\n    }\r\n    return (\r\n      <div>\r\n        {author && story ?\r\n          <div className=\"story-page-container\">\r\n            <div className=\"header-container\">\r\n              <h1>{story.title}</h1>\r\n            </div>\r\n            {renderEditOrDonate()}\r\n            <p>{story.creator}</p>\r\n            <p className=\"story-page-desc\">{story.description}</p>\r\n            <div className=\"author-container\">\r\n              <p>Written By:\r\n                   <Link to={`/author/${story._user}`}>\r\n                  <span> {authorNameCheck(author)}</span>\r\n                </Link>\r\n              </p>\r\n\r\n            </div>\r\n            <div className=\"story-page-grid\">\r\n              <div className=\"story-page-main-item grid-item\">\r\n                <p dangerouslySetInnerHTML={{ __html: `${story.sanitizedHtml}` }}\r\n                  className=\"story-page-story\">\r\n                </p>\r\n              </div>\r\n              <div className=\"story-page-sub-item grid-item\">\r\n\r\n                <StoryComments />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          : null}\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  const renderMessages = () => {\r\n    if (message) {\r\n      return (\r\n        <div className=\"message-container\">\r\n          <div className=\"message\">\r\n            <p>{message}</p>\r\n            <button\r\n              className=\"btn notification-btn\"\r\n              onClick={() => clearMessage()}>Close</button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {renderMessages()}\r\n      {error ? displayError(error, clearError) : pageSuccess()}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ story, author, auth, error, message }) => {\r\n  return { story, author, auth, error, message }\r\n}\r\nexport default connect(mapStateToProps, { fetchStory, fetchAuthor, deleteStory, clearError, clearMessage })(Story)\r\n","import { connect } from 'react-redux';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from 'react-loader-spinner'\r\nimport { fetchAuthorBasic, fetchUserStories, clearError } from '../actions';\r\nimport Pagination from './Pagination';\r\nimport displayError from './displayError';\r\n\r\nconst Author = ({ author, match, fetchUserStories, userStories, fetchAuthorBasic, pager, error, clearError }) => {\r\n\r\n  const [currentPage, setCurrentPage] = useState(match.params.page);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(match.params.page);\r\n  }, [match.params.page])\r\n\r\n  useEffect(() => {\r\n    if (!author) {\r\n      fetchAuthorBasic(match.params.authorId);\r\n    }\r\n  }, [fetchAuthorBasic, match.params.authorId]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (pager.currentPage !== currentPage) {\r\n      fetchUserStories(currentPage, match.params.authorId);\r\n    }\r\n    else {\r\n      fetchUserStories(1, match.params.authorId);\r\n    }\r\n  }, [currentPage, pager.currentPage, fetchUserStories, match.params.authorId]);\r\n\r\n  useEffect(() => {\r\n    if (author) setLoading(false);\r\n  })\r\n\r\n  const authorName = () => {\r\n    if (author) {\r\n      if (author.username) {\r\n        return author.username\r\n      }\r\n      return author.name;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  const authorDescription = () => {\r\n    if (author) {\r\n      if (author.description) {\r\n        return author.description\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n  const renderAuthorInfo = () => {\r\n    if (!author) {\r\n      return null\r\n    }\r\n    else {\r\n      return (\r\n        <div className=\"author-data-container\">\r\n          <div className=\"header-container\">\r\n            <h1>{authorName()}</h1>\r\n          </div>\r\n          <p>{authorDescription()}</p>\r\n          <Link\r\n            to={`/payment/${author._id}`}\r\n            className=\"btn green-btn\"\r\n          >Donate</Link>\r\n          <div className=\"author-donations-container\">\r\n            {author.donationsRecieved ? <p>{authorName()} has received :  £{author.donationsRecieved} from other users!</p> : null}\r\n            {author.donationsSent ? <p>{authorName()} has dontated  £{author.donationsSent} to other authors!</p> : null}\r\n\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const renderAuthorStories = () => {\r\n    if (!author) {\r\n      return null\r\n    }\r\n    else if (!userStories) {\r\n      return null;\r\n    } else {\r\n      return userStories.map(story => {\r\n        return (\r\n          <div className={`story-item-container author-story-container`} key={story._id}>\r\n            <Link\r\n              to={`/story/${story._id}`}\r\n            >\r\n              <div className=\"story-item\">\r\n                <h3>{story.title}</h3>\r\n                <p className=\"story-page-author\">Posted by: {story.username}</p>\r\n                <p className=\"story-page-desc\">\r\n                  {story.description}\r\n                </p>\r\n              </div>\r\n            </Link>\r\n\r\n          </div >\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  const pageSuccess = () => {\r\n    if (loading) {\r\n      return (\r\n        <div className=\"loader loader-margin\">\r\n          <Loader type=\"ThreeDots\" color=\"#ccd5ae\" height={80}\r\n            timeout={100000}\r\n          />\r\n        </div>)\r\n    }\r\n    return (\r\n      <div className=\"author-page-container\">\r\n        {renderAuthorInfo()}\r\n        <div className=\"header-container sub-header-container\">\r\n          <h2>{authorName()} 's stories</h2>\r\n        </div>\r\n        <div className=\"stories-grid author-stories-grid\">\r\n          {renderAuthorStories()}\r\n        </div>\r\n        {/* { paginationHelper(pager, currentPage, `/author/${match.params.authorId}/`)} */}\r\n        <Pagination pager={pager} currentPage={currentPage} path={`/author/${match.params.authorId}/`} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {error ? displayError(error, clearError) : pageSuccess()}\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = ({ author, auth, userStories, pager, error }) => {\r\n  return { author, auth, userStories, pager, error }\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchAuthorBasic, fetchUserStories, clearError })(Author);\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport { editStory, fetchStory, clearError } from '../actions';\r\nimport displayError from './displayError';\r\n\r\n\r\nconst EditStory = ({ story, editStory, history, match, error }) => {\r\n\r\n  useEffect(() => {\r\n    if (!story) {\r\n      fetchStory(match.params.storyId);\r\n    }\r\n\r\n  }, [story, match.params.storyId])\r\n\r\n  const preLoadForm = {\r\n    title: story.title,\r\n    description: story.description,\r\n    content: story.content\r\n  }\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    defaultValues: preLoadForm\r\n  });\r\n\r\n\r\n\r\n  const onSubmit = (data) => {\r\n    const storyId = match.params.storyId;\r\n\r\n\r\n    const title = data.title;\r\n    const description = data.description;\r\n    const content = data.content;\r\n    const postBody = { title, description, content, storyId };\r\n    editStory(postBody, history);\r\n  }\r\n\r\n\r\n\r\n  const forms = () => {\r\n    return (\r\n      <div className=\"forms-container\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <h2 className=\"add-story-item-container\">Edit Your Story!</h2>\r\n          <div className=\"add-story-input-title add-story-item-container\">\r\n            <label> Edit Title</label>\r\n            <input\r\n              name=\"title\"\r\n              ref={register({ required: true, maxLength: 100 })}\r\n            />\r\n            {errors.title && errors.title.type === 'required' && (\r\n              <p>This is required</p>\r\n            )}\r\n            {errors.title && errors.title.type === 'maxLength' && (\r\n              <p>Title should not be longer than 100 characters</p>\r\n            )}\r\n          </div>\r\n          <div className=\"add-story-input-description add-story-item-container\">\r\n            <label> Edit description</label>\r\n            <input\r\n              name=\"description\"\r\n              ref={register({ required: true, maxLength: 200 })}\r\n\r\n            />\r\n            {errors.description && errors.description.type === 'required' && (\r\n              <p>Required</p>\r\n            )}\r\n            {errors.description && errors.description.type === 'maxLength' && (\r\n              <p>Description should not be longer than 250 characters</p>\r\n            )}\r\n          </div>\r\n          <div className=\"add-story-input-content add-story-item-container\">\r\n            <label>Edit Story</label>\r\n            <textarea\r\n              name=\"content\"\r\n              ref={register({ required: true, minLength: 100, maxLength: 10000 })}\r\n            />\r\n            {errors.content && errors.content.type === 'required' && (\r\n              <p>Required</p>\r\n            )}\r\n            {errors.content && errors.content.type === 'minLength' && (\r\n              <p>A story must have at least 100 characters</p>)}\r\n            {errors.content && errors.content.type === 'maxLength' && (\r\n              <p>The maximum length for a story is 10,000 characters</p>\r\n            )}\r\n          </div>\r\n          <button className=\"add-username-btn btn\" type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  const pageSuccess = () => {\r\n    return (\r\n      <div className=\"add-story-container\">\r\n        {forms()}\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {error ? displayError(error, clearError) : pageSuccess()}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ auth, story, error }) => {\r\n  return { auth, story, error }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { editStory, clearError })(EditStory);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport openSocket from 'socket.io-client';\r\n\r\nimport displayError from './displayError';\r\nimport Pagination from './Pagination';\r\nimport { postSnippet, fetchAllSnippets, addSnippet, deleteSnippet, clearError } from '../actions';\r\n\r\n\r\n\r\nconst AllSnippets = ({ postSnippet, fetchAllSnippets, snippets, addSnippet, auth, deleteSnippet, pager, match, error, clearError }) => {\r\n\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const [currentPage, setCurrentPage] = useState(match.params.page);\r\n\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(match.params.page);\r\n  }, [match.params.page]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchAllSnippets(1)\r\n    const socket = openSocket(process.env.REACT_APP_STRIPE_PATH);\r\n    socket.on('snippets', data => {\r\n      if (data.action === 'create') {\r\n        addSnippet(data.snippet);\r\n      }\r\n      if (data.action === 'delete') {\r\n        fetchAllSnippets();\r\n      }\r\n    })\r\n\r\n    return () => {\r\n      socket.off('snippets');\r\n    }\r\n\r\n  }, [fetchAllSnippets, addSnippet]);\r\n\r\n  useEffect(() => {\r\n    if (pager.currentPage !== currentPage) {\r\n      fetchAllSnippets(currentPage);\r\n    }\r\n  }, [currentPage, fetchAllSnippets, pager.currentPage])\r\n\r\n\r\n  const onSubmit = (data) => {\r\n    postSnippet(data.snippetText);\r\n  }\r\n\r\n  const rendersnippetInput = () => {\r\n    return (\r\n      <form className=\"snippet-form\" onSubmit={handleSubmit(onSubmit)}>\r\n        <label>Post a snippet</label>\r\n        <div className=\"input-container\">\r\n          <input\r\n            name='snippetText'\r\n            ref={register({ required: true, maxLength: 100 })}\r\n            className=\"snippets-home-input\"\r\n          />\r\n          <div className=\"snippet-btn-container\">\r\n            <button className=\"btn green-btn\" type='submit'>Post</button>\r\n          </div>\r\n        </div>\r\n        {errors.snippetText && errors.snippetText.type === 'maxLength' && (\r\n          <p className=\"validation-warning\">Snippets have a max length of 100 characters</p>\r\n        )}\r\n\r\n      </form>\r\n    )\r\n  }\r\n\r\n  //renders snippets component\r\n  //When user adds a snippet, we slice the array to ensure it stays same length\r\n  //ensure it matches the limits set in back end\r\n  const renderSnippets = () => {\r\n    let arrayToMap;\r\n    if (snippets.length > 5) {\r\n      arrayToMap = snippets.slice(0, 5);\r\n    } else {\r\n      arrayToMap = snippets;\r\n    }\r\n    return arrayToMap.map(snippet => {\r\n      return (\r\n        <div key={snippet._id} className=\"snippet-container\">\r\n          <div className=\"snippet-left\">\r\n            <p className=\"snippet-text\">{snippet.text}\r\n            </p>\r\n            <p className=\"snippet-username\">\r\n              <Link to={`/author/${snippet._user}`}>{snippet.username}</Link>\r\n            </p>\r\n          </div>\r\n          <div className=\"snippet-right\">\r\n            {snippet._user === auth?._id ?\r\n              <button className=\"btn delete-btn\" onClick={() => deleteSnippet(snippet._id)}>Delete</button> : null}\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n\r\n  const pageSuccess = () => {\r\n    return (\r\n      <div className=\"all-snippets-container snippets-container\">\r\n        <div className=\"header-container snippets-header\">\r\n          <h1>Snippets</h1>\r\n        </div>\r\n        <p className=\"snippets-sub-header\">Let other writers know what you're up to, add a short snippet to the live feed.</p>\r\n        { rendersnippetInput()}\r\n        <div className=\"snippets-list\">\r\n          {renderSnippets()}\r\n        </div>\r\n        {/* {paginationHelper(pager, currentPage, '/snippets/')} */}\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {error ? displayError(error, clearError) : pageSuccess()}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ snippets, auth, pager, error }) => {\r\n  return { snippets, auth, pager, error };\r\n}\r\n\r\nexport default connect(mapStateToProps, { postSnippet, fetchAllSnippets, addSnippet, deleteSnippet, displayError, clearError })(AllSnippets);\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { clearError, fetchAuthorBasic, postPayment } from '../actions';\r\n\r\n\r\n\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PK);\r\n\r\n\r\n\r\n\r\nconst ProductDisplay = ({ handleClick, amount, setAmount }) => (\r\n\r\n\r\n  <div className=\"payment-before\">\r\n    <div className=\"header-container\">\r\n      <h1>Support the author with a donation!</h1>\r\n    </div>\r\n    <label>Select an Amount</label>\r\n    <select\r\n      value={amount}\r\n      onChange={(e) => setAmount(e.target.value)}\r\n    >\r\n      <option value='1'>£1</option>\r\n      <option value='2'>£2</option>\r\n      <option value='3'>£3</option>\r\n      <option value='4'>£4</option>\r\n      <option value='5'>£5</option>\r\n    </select>\r\n    <button\r\n      type=\"button\"\r\n      id=\"checkout-button\"\r\n      role=\"link\"\r\n      onClick={handleClick}\r\n      className=\"btn green-btn\">\r\n      Checkout\r\n      </button>\r\n  </div>\r\n\r\n\r\n);\r\n\r\n\r\nconst Message = ({ message }) => (\r\n\r\n  <section className=\"payment-after\">\r\n    <p>{message}</p>\r\n    <Link to=\"/\">Back to HomePage</Link>\r\n  </section>\r\n\r\n)\r\n\r\nconst Payment = ({ author, match, fetchAuthorBasic, auth, postPayment, clearError }) => {\r\n\r\n\r\n\r\n  const [amount, setAmount] = useState(1);\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n    return function cleanup() {\r\n      clearError()\r\n    }\r\n  }, [])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const authorNameCheck = () => {\r\n      if (author) {\r\n        if (author.username) {\r\n          return author.username\r\n        }\r\n        return author.name\r\n      } else {\r\n        return '';\r\n      }\r\n    }\r\n\r\n    const authorName = authorNameCheck();\r\n    // Check to see if this is a redirect back from Checkout\r\n    const query = new URLSearchParams(window.location.search);\r\n    const amountPaid = query.get('amount') / 100;\r\n    const paymentId = query.get('paymentId');\r\n\r\n    if (query.get(\"success\")) {\r\n      setMessage(author ? `Your donation of £${amountPaid} to ${authorName} was successful 🙂` : 'LOADING');\r\n\r\n\r\n      if (author && auth) {\r\n        const authorId = author._id;\r\n        const userId = auth._id;\r\n        postPayment(amountPaid, authorId, userId, paymentId);\r\n      }\r\n    }\r\n    if (query.get(\"canceled\")) {\r\n      setMessage(\r\n        \"Payment Canceled.\"\r\n      );\r\n    }\r\n    if (!author && !query.get(\"canceled\")) {\r\n      if (match.params.authorId) {\r\n        fetchAuthorBasic(match.params.authorId);\r\n      } else {\r\n        const authorId = query.get('authorId');\r\n        fetchAuthorBasic(authorId);\r\n      }\r\n    }\r\n  }, [author]);\r\n\r\n\r\n\r\n  const handleSubmit = async (event) => {\r\n    const stripe = await stripePromise;\r\n    const authorId = author._id;\r\n    const response = await axios.post('/create-checkout-session', {\r\n      amount,\r\n      authorId\r\n    })\r\n\r\n\r\n    const session = await response.data;\r\n    // When the customer clicks on the button, redirect them to Checkout.\r\n    const result = await stripe.redirectToCheckout({\r\n      sessionId: session.id,\r\n    });\r\n    if (result.error) {\r\n      // If `redirectToCheckout` fails due to a browser or network\r\n      // error, display the localized error message to your customer\r\n      // using `result.error.message`.\r\n    }\r\n  }\r\n\r\n\r\n  return message ? (\r\n    <Message message={message} />\r\n  ) : (\r\n    <ProductDisplay handleClick={handleSubmit} setAmount={setAmount} amount={amount} />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ author, auth }) => {\r\n  return { author, auth }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchAuthorBasic, postPayment, clearError })(Payment);\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div className=\"footer-container\">\r\n        <a href='https://github.com/64-bit-david'>Created By David Williamson</a>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nimport Header from './Header';\r\nimport ScrollToTop from './ScrollToTop';\r\nimport Stories from './Stories';\r\nimport AddStory from './AddStory';\r\nimport UserProfile from './UserProfile';\r\nimport Story from './Story';\r\nimport Author from './Author';\r\nimport EditStory from './EditStory';\r\nimport AllSnippets from './AllSnippets';\r\nimport Payment from './Payment';\r\nimport Footer from './Footer';\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <div class=\"body-container\">\r\n      <BrowserRouter>\r\n        <ScrollToTop />\r\n\r\n        <Header />\r\n        <main class=\"main\">\r\n          <Route path=\"/\" exact component={Stories} />\r\n          <Route path=\"/stories/:page\" component={Stories} />\r\n          <Route path=\"/add-story\" component={AddStory} />\r\n          <Route path=\"/edit-story/:storyId\" component={EditStory} />\r\n          <Route path=\"/story/:storyId\" component={Story} />\r\n          <Route path=\"/author/:authorId\" exact component={Author} />\r\n          <Route path=\"/author/:authorId/:page\" component={Author} />\r\n          <Route path=\"/your-profile/:page\" exact component={UserProfile} />\r\n          <Route path=\"/your-profile\" exact component={UserProfile} />\r\n          <Route path=\"/snippets/:page\" exact component={AllSnippets} />\r\n          <Route path=\"/payment/\" exact component={Payment} />\r\n          <Route path=\"/payment/:authorId\" component={Payment} />\r\n        </main>\r\n        <Footer />\r\n      </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import { CLEAR_STORIES, FETCH_STORIES, POST_STORY } from '../actions/types';\r\n\r\n\r\n//Adding new story will break pagination, so remove last item in array to keep it constant at 7? stories.\r\nconst addStory = (state, action) => {\r\n  const newStoryArray = [action.payload, ...state];\r\n  newStoryArray.pop();\r\n  return newStoryArray\r\n}\r\n\r\nexport default function func(state = [], action) {\r\n  switch (action.type) {\r\n    case FETCH_STORIES:\r\n      return action.payload\r\n    case POST_STORY:\r\n      return addStory(state, action);\r\n    case CLEAR_STORIES:\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n}","import { FETCH_STORY, UPDATE_STORY_COMMENTS, EDIT_STORY, CLEAN_UP, FETCH_STORY_REQUEST, DELETE_COMMENT, CLEAR_STORY } from '../actions/types';\r\n\r\n\r\nconst updateStoryComments = (state, action) => {\r\n  const updatedState = { ...state };\r\n  if (!updatedState.comments) {\r\n    updatedState.comments = [action.payload];\r\n  } else {\r\n    updatedState.comments.unshift(action.payload);\r\n  }\r\n  return updatedState;\r\n}\r\n\r\nconst deleteStoryComment = (state, action) => {\r\n  const updatedState = { ...state };\r\n  updatedState.comments = updatedState.comments.filter(comment => comment.id !== action.payload);\r\n  return updatedState;\r\n\r\n}\r\n\r\nexport default function func(state = null, action) {\r\n  switch (action.type) {\r\n    case FETCH_STORY_REQUEST:\r\n      return action.payload;\r\n    case FETCH_STORY:\r\n      return action.payload;\r\n    case EDIT_STORY:\r\n      return action.payload;\r\n    case UPDATE_STORY_COMMENTS:\r\n      return updateStoryComments(state, action);\r\n    case DELETE_COMMENT:\r\n      return deleteStoryComment(state, action)\r\n    case CLEAN_UP:\r\n      return {}\r\n    case CLEAR_STORY:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport authorReducer from './authorReducer';\r\nimport authReducer from './authReducer';\r\nimport storiesReducer from './storiesReducer';\r\nimport storyReducer from './storyReducer';\r\nimport snippetReducer from './snippetsReducer';\r\nimport paginationReducer from './paginationReducer';\r\nimport userStoriesReducer from './userStoriesReducer';\r\nimport errorReducer from './errorReducer';\r\nimport messageReducer from './messageReducer';\r\nimport loadingReducer from './loadingReducer';\r\n\r\n\r\nexport default combineReducers({\r\n  stories: storiesReducer,\r\n  auth: authReducer,\r\n  story: storyReducer,\r\n  author: authorReducer,\r\n  snippets: snippetReducer,\r\n  pager: paginationReducer,\r\n  userStories: userStoriesReducer,\r\n  error: errorReducer,\r\n  message: messageReducer,\r\n  loading: loadingReducer,\r\n})","import { DELETE_USER, FETCH_USER, PAYMENT_SUCCESS, UPDATE_USER, UPDATING_DESCRIPTION, UPDATING_USERNAME } from \"../actions/types\";\r\n\r\n\r\nexport default function func(state = {}, action) {\r\n  switch (action.type) {\r\n    case FETCH_USER:\r\n      return action.payload || false;\r\n    case UPDATE_USER:\r\n      return action.payload;\r\n    case UPDATING_USERNAME:\r\n      return { ...state, ['username']: action.payload };\r\n    case UPDATING_DESCRIPTION:\r\n      return { ...state, ['description']: action.payload };\r\n    case PAYMENT_SUCCESS:\r\n      return action.payload;\r\n    case DELETE_USER:\r\n      console.log('deletion reached auth reducer')\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n}","import { FETCH_AUTHOR, FETCH_AUTHOR_BASIC, CLEAN_UP, CLEAR_AUTHOR } from \"../actions/types\";\r\n\r\n\r\n\r\n\r\nexport default function func(state = null, action) {\r\n  switch (action.type) {\r\n    case FETCH_AUTHOR:\r\n      return action.payload;\r\n    case FETCH_AUTHOR_BASIC:\r\n      return action.payload;\r\n    case CLEAN_UP:\r\n      return null;\r\n    case CLEAR_AUTHOR:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n}","import { DELETE_SNIPPET, FETCH_SNIPPETS, POST_SNIPPET } from \"../actions/types\";\r\n\r\n\r\nexport default function func(state = [], action) {\r\n  switch (action.type) {\r\n    case FETCH_SNIPPETS:\r\n      return action.payload;\r\n    case POST_SNIPPET:\r\n      return [action.payload, ...state];\r\n    case DELETE_SNIPPET:\r\n      return state.filter(snippet => snippet._id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n}","import { PAGINATE } from \"../actions/types\";\r\n\r\n\r\nexport default function func(state = {}, action) {\r\n  switch (action.type) {\r\n    case PAGINATE:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}","import { CLEAN_UP, FETCH_USER_STORIES } from '../actions/types';\r\n\r\nexport default function func(state = [], action) {\r\n  switch (action.type) {\r\n    case FETCH_USER_STORIES:\r\n      return action.payload\r\n    case CLEAN_UP:\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n}","import { ADD_ERROR, CLEAR_ERROR } from '../actions/types';\r\n\r\nexport default function func(state = null, action) {\r\n  switch (action.type) {\r\n    case ADD_ERROR:\r\n      return action.payload;\r\n    case CLEAR_ERROR:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n}","// keep track of successful operations (ie deleting stories);\r\n\r\nimport { ADD_MESSAGE, CLEAR_MESSAGE, DELETE_USER } from \"../actions/types\";\r\n\r\nexport default function func(state = null, action) {\r\n  switch (action.type) {\r\n    case DELETE_USER:\r\n      return action.payload;\r\n    case ADD_MESSAGE:\r\n      return action.payload;\r\n    case CLEAR_MESSAGE:\r\n      return null;\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { CLEAN_UP, LOADING } from \"../actions/types\";\r\n\r\n\r\nexport default function func(state = null, action) {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return action.payload;\r\n    case CLEAN_UP:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n}","import './styles/main.css';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}